68K GAS  /tmp/ccMFIMKI.s 			page 1


   1               	#NO_APP
   2               		.file	"test3.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.align	2
   7               		.globl	is_valid_cell
   8               		.type	is_valid_cell, @function
   9               	is_valid_cell:
  10               	.LVL0:
  11               	.LFB3:
  12               		.file 1 "test3.c"
   1:test3.c       **** #include <stdio.h>
   2:test3.c       **** #include <stdlib.h>
   3:test3.c       **** #include "mtk_c.h"
   4:test3.c       **** #include <stdbool.h>
   5:test3.c       **** 
   6:test3.c       **** 
   7:test3.c       **** // Global variabes
   8:test3.c       **** FILE* com0in;
   9:test3.c       **** FILE* com0out;
  10:test3.c       **** FILE* com1in;
  11:test3.c       **** FILE* com1out;
  12:test3.c       **** 
  13:test3.c       **** //For clearing the screen
  14:test3.c       **** #define ESC "\x1b"
  15:test3.c       **** #define HOME ESC "[H"
  16:test3.c       **** #define DELETESCREEN ESC "[2J"
  17:test3.c       **** #define CURSORINVISIBLE ESC "[?25l"
  18:test3.c       **** #define CURSORVISIBLE ESC "[?25h"
  19:test3.c       **** 
  20:test3.c       **** #define SAVECURSORLOC ESC "7"
  21:test3.c       **** #define RETCURSORLOC ESC "8"
  22:test3.c       **** 
  23:test3.c       **** 
  24:test3.c       **** //global variables for functions
  25:test3.c       **** int b_board[3][3]={0};
  26:test3.c       **** char board[3][3] = {
  27:test3.c       ****     {'0', '1', '2'},
  28:test3.c       ****     {'3', '4', '5'},
  29:test3.c       ****     {'6', '7', '8'}
  30:test3.c       **** };
  31:test3.c       **** int valid_cells[9] = {0, 1, 2, 3, 4, 5, 6, 7, 8};
  32:test3.c       **** int num_valid_cells = 9; // Tracks the number of valid cells
  33:test3.c       **** bool player_X_playing = false;
  34:test3.c       **** 
  35:test3.c       **** //fct for tracking empty cells
  36:test3.c       **** bool is_valid_cell(int cell) {
  13               		.loc 1 36 30 view -0
  14               		.cfi_startproc
  15               		.loc 1 36 30 is_stmt 0 view .LVU1
  16 0000 226F 0004 		move.l 4(%sp),%a1
  37:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  17               		.loc 1 37 5 is_stmt 1 view .LVU2
  18               	.LBB14:
  19               		.loc 1 37 10 view .LVU3
  20               	.LVL1:
68K GAS  /tmp/ccMFIMKI.s 			page 2


  21               		.loc 1 37 23 view .LVU4
  22 0004 2239 0000 		move.l num_valid_cells,%d1
  22      0000 
  23 000a 6F12      		jle .L4
  24 000c 41F9 0000 		lea valid_cells,%a0
  24      0000 
  25               		.loc 1 37 14 is_stmt 0 view .LVU5
  26 0012 7000      		moveq #0,%d0
  27               	.LVL2:
  28               	.L3:
  38:test3.c       ****         if (valid_cells[i] == cell) return true;
  29               		.loc 1 38 9 is_stmt 1 view .LVU6
  30               		.loc 1 38 12 is_stmt 0 view .LVU7
  31 0014 B3D8      		cmp.l (%a0)+,%a1
  32 0016 670A      		jeq .L5
  37:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  33               		.loc 1 37 43 is_stmt 1 discriminator 2 view .LVU8
  34 0018 5280      		addq.l #1,%d0
  35               	.LVL3:
  37:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  36               		.loc 1 37 23 discriminator 2 view .LVU9
  37 001a B280      		cmp.l %d0,%d1
  38 001c 66F6      		jne .L3
  39               	.LVL4:
  40               	.L4:
  37:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  41               		.loc 1 37 23 is_stmt 0 discriminator 2 view .LVU10
  42               	.LBE14:
  39:test3.c       ****     }
  40:test3.c       ****     return false;
  43               		.loc 1 40 12 view .LVU11
  44 001e 4200      		clr.b %d0
  41:test3.c       **** }
  45               		.loc 1 41 1 view .LVU12
  46 0020 4E75      		rts
  47               	.LVL5:
  48               	.L5:
  49               	.LBB15:
  38:test3.c       ****         if (valid_cells[i] == cell) return true;
  50               		.loc 1 38 44 view .LVU13
  51 0022 7001      		moveq #1,%d0
  52               	.LVL6:
  38:test3.c       ****         if (valid_cells[i] == cell) return true;
  53               		.loc 1 38 44 view .LVU14
  54               	.LBE15:
  55               		.loc 1 41 1 view .LVU15
  56 0024 4E75      		rts
  57               		.cfi_endproc
  58               	.LFE3:
  59               		.size	is_valid_cell, .-is_valid_cell
  60               		.align	2
  61               		.globl	remove_cell
  62               		.type	remove_cell, @function
  63               	remove_cell:
  64               	.LVL7:
  65               	.LFB4:
  42:test3.c       **** 
68K GAS  /tmp/ccMFIMKI.s 			page 3


  43:test3.c       **** void remove_cell(int cell) {
  66               		.loc 1 43 28 is_stmt 1 view -0
  67               		.cfi_startproc
  68               		.loc 1 43 28 is_stmt 0 view .LVU17
  69 0026 2F03      		move.l %d3,-(%sp)
  70               		.cfi_def_cfa_offset 8
  71               		.cfi_offset 3, -8
  72 0028 2F02      		move.l %d2,-(%sp)
  73               		.cfi_def_cfa_offset 12
  74               		.cfi_offset 2, -12
  75 002a 226F 000C 		move.l 12(%sp),%a1
  44:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  76               		.loc 1 44 5 is_stmt 1 view .LVU18
  77               	.LBB16:
  78               		.loc 1 44 10 view .LVU19
  79               	.LVL8:
  80               		.loc 1 44 23 view .LVU20
  81 002e 2239 0000 		move.l num_valid_cells,%d1
  81      0000 
  82 0034 6F12      		jle .L9
  83 0036 41F9 0000 		lea valid_cells,%a0
  83      0000 
  84               		.loc 1 44 14 is_stmt 0 view .LVU21
  85 003c 7000      		moveq #0,%d0
  86               	.LVL9:
  87               	.L13:
  45:test3.c       ****         if (valid_cells[i] == cell) {
  88               		.loc 1 45 9 is_stmt 1 view .LVU22
  89               		.loc 1 45 12 is_stmt 0 view .LVU23
  90 003e B3D8      		cmp.l (%a0)+,%a1
  91 0040 670C      		jeq .L17
  44:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  92               		.loc 1 44 43 is_stmt 1 discriminator 2 view .LVU24
  93 0042 5280      		addq.l #1,%d0
  94               	.LVL10:
  44:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
  95               		.loc 1 44 23 discriminator 2 view .LVU25
  96 0044 B280      		cmp.l %d0,%d1
  97 0046 66F6      		jne .L13
  98               	.LVL11:
  99               	.L9:
  44:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
 100               		.loc 1 44 23 is_stmt 0 discriminator 2 view .LVU26
 101               	.LBE16:
  46:test3.c       ****             // Shift the remaining cells
  47:test3.c       ****             for (int j = i; j < num_valid_cells - 1; j++) {
  48:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
  49:test3.c       ****             }
  50:test3.c       ****             num_valid_cells--;
  51:test3.c       ****             break;
  52:test3.c       ****         }
  53:test3.c       ****     }
  54:test3.c       **** }
 102               		.loc 1 54 1 view .LVU27
 103 0048 241F      		move.l (%sp)+,%d2
 104 004a 261F      		move.l (%sp)+,%d3
 105 004c 4E75      		rts
68K GAS  /tmp/ccMFIMKI.s 			page 4


 106               	.LVL12:
 107               	.L17:
 108               	.LBB18:
 109               	.LBB17:
  47:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 110               		.loc 1 47 31 is_stmt 1 view .LVU28
  47:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 111               		.loc 1 47 49 is_stmt 0 view .LVU29
 112 004e 2401      		move.l %d1,%d2
 113 0050 5382      		subq.l #1,%d2
  47:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 114               		.loc 1 47 31 view .LVU30
 115 0052 B082      		cmp.l %d2,%d0
 116 0054 6C2E      		jge .L12
 117 0056 2600      		move.l %d0,%d3
 118 0058 D680      		add.l %d0,%d3
 119 005a D683      		add.l %d3,%d3
  48:test3.c       ****             }
 120               		.loc 1 48 32 view .LVU31
 121 005c 2202      		move.l %d2,%d1
 122 005e 9280      		sub.l %d0,%d1
 123 0060 2001      		move.l %d1,%d0
 124               	.LVL13:
  48:test3.c       ****             }
 125               		.loc 1 48 32 view .LVU32
 126 0062 D081      		add.l %d1,%d0
 127 0064 D080      		add.l %d0,%d0
 128 0066 2F00      		move.l %d0,-(%sp)
 129               		.cfi_def_cfa_offset 16
 130 0068 2003      		move.l %d3,%d0
 131 006a 0680 0000 		add.l #valid_cells+4,%d0
 131      0000 
 132 0070 2F00      		move.l %d0,-(%sp)
 133               		.cfi_def_cfa_offset 20
 134 0072 0683 0000 		add.l #valid_cells,%d3
 134      0000 
 135 0078 2F03      		move.l %d3,-(%sp)
 136               		.cfi_def_cfa_offset 24
 137 007a 4EB9 0000 		jsr memmove
 137      0000 
 138               	.LVL14:
 139 0080 4FEF 000C 		lea (12,%sp),%sp
 140               		.cfi_def_cfa_offset 12
 141               	.L12:
  48:test3.c       ****             }
 142               		.loc 1 48 32 view .LVU33
 143               	.LBE17:
  50:test3.c       ****             break;
 144               		.loc 1 50 13 is_stmt 1 view .LVU34
  50:test3.c       ****             break;
 145               		.loc 1 50 28 is_stmt 0 view .LVU35
 146 0084 23C2 0000 		move.l %d2,num_valid_cells
 146      0000 
  51:test3.c       ****         }
 147               		.loc 1 51 13 is_stmt 1 view .LVU36
 148               	.LBE18:
 149               		.loc 1 54 1 is_stmt 0 view .LVU37
68K GAS  /tmp/ccMFIMKI.s 			page 5


 150 008a 241F      		move.l (%sp)+,%d2
 151 008c 261F      		move.l (%sp)+,%d3
 152 008e 4E75      		rts
 153               		.cfi_endproc
 154               	.LFE4:
 155               		.size	remove_cell, .-remove_cell
 156               		.globl	__divsi3
 157               		.globl	__modsi3
 158               		.align	2
 159               		.globl	update_board
 160               		.type	update_board, @function
 161               	update_board:
 162               	.LVL15:
 163               	.LFB5:
  55:test3.c       **** //updates the board after each player move
  56:test3.c       **** void update_board(int cell, char mark) {
 164               		.loc 1 56 40 is_stmt 1 view -0
 165               		.cfi_startproc
 166               		.loc 1 56 40 is_stmt 0 view .LVU39
 167 0090 2F03      		move.l %d3,-(%sp)
 168               		.cfi_def_cfa_offset 8
 169               		.cfi_offset 3, -8
 170 0092 2F02      		move.l %d2,-(%sp)
 171               		.cfi_def_cfa_offset 12
 172               		.cfi_offset 2, -12
 173 0094 262F 000C 		move.l 12(%sp),%d3
  57:test3.c       ****     int row = cell / 3;
 174               		.loc 1 57 5 is_stmt 1 view .LVU40
 175               	.LVL16:
  58:test3.c       ****     int col = cell % 3;
 176               		.loc 1 58 5 view .LVU41
  59:test3.c       ****     board[row][col] = mark;
 177               		.loc 1 59 5 view .LVU42
  57:test3.c       ****     int row = cell / 3;
 178               		.loc 1 57 9 is_stmt 0 view .LVU43
 179 0098 4878 0003 		pea 3.w
 180               		.cfi_def_cfa_offset 16
 181 009c 2F03      		move.l %d3,-(%sp)
 182               		.cfi_def_cfa_offset 20
 183 009e 4EB9 0000 		jsr __divsi3
 183      0000 
 184               	.LVL17:
 185 00a4 508F      		addq.l #8,%sp
 186               		.cfi_def_cfa_offset 12
 187 00a6 2400      		move.l %d0,%d2
  58:test3.c       ****     int col = cell % 3;
 188               		.loc 1 58 9 view .LVU44
 189 00a8 4878 0003 		pea 3.w
 190               		.cfi_def_cfa_offset 16
 191 00ac 2F03      		move.l %d3,-(%sp)
 192               		.cfi_def_cfa_offset 20
 193 00ae 4EB9 0000 		jsr __modsi3
 193      0000 
 194               	.LVL18:
 195 00b4 508F      		addq.l #8,%sp
 196               		.cfi_def_cfa_offset 12
 197               		.loc 1 59 21 view .LVU45
68K GAS  /tmp/ccMFIMKI.s 			page 6


 198 00b6 2042      		move.l %d2,%a0
 199 00b8 D1C2      		add.l %d2,%a0
 200 00ba D1C2      		add.l %d2,%a0
 201 00bc D1FC 0000 		add.l #board,%a0
 201      0000 
 202 00c2 11AF 0013 		move.b 19(%sp),(%a0,%d0.l)
 202      0800 
  60:test3.c       **** }
 203               		.loc 1 60 1 view .LVU46
 204 00c8 241F      		move.l (%sp)+,%d2
 205 00ca 261F      		move.l (%sp)+,%d3
 206               	.LVL19:
 207               		.loc 1 60 1 view .LVU47
 208 00cc 4E75      		rts
 209               		.cfi_endproc
 210               	.LFE5:
 211               		.size	update_board, .-update_board
 212               		.section	.rodata.str1.1,"aMS",@progbits,1
 213               	.LC0:
 214 0000 1B5B 3F32 		.string	"\033[?25l"
 214      356C 00
 215               	.LC1:
 216 0007 2D2D 2D2B 		.string	"---+---+---\n"
 216      2D2D 2D2B 
 216      2D2D 2D0A 
 216      00
 217               	.LC2:
 218 0014 2025 6320 		.string	" %c "
 218      00
 219               	.LC3:
 220 0019 1B5B 2564 		.string	"\033[%d;%dH"
 220      3B25 6448 
 220      00
 221               		.text
 222               		.align	2
 223               		.globl	display_board
 224               		.type	display_board, @function
 225               	display_board:
 226               	.LFB6:
  61:test3.c       **** //displays the board after the change
  62:test3.c       **** void display_board() {
 227               		.loc 1 62 22 is_stmt 1 view -0
 228               		.cfi_startproc
 229 00ce 48E7 383C 		movem.l #14396,-(%sp)
 230               		.cfi_def_cfa_offset 32
 231               		.cfi_offset 2, -32
 232               		.cfi_offset 3, -28
 233               		.cfi_offset 4, -24
 234               		.cfi_offset 10, -20
 235               		.cfi_offset 11, -16
 236               		.cfi_offset 12, -12
 237               		.cfi_offset 13, -8
  63:test3.c       **** 	FILE* screen;
 238               		.loc 1 63 2 view .LVU49
  64:test3.c       **** 	if (player_X_playing) screen=com1out;
 239               		.loc 1 64 2 view .LVU50
 240               		.loc 1 64 5 is_stmt 0 view .LVU51
68K GAS  /tmp/ccMFIMKI.s 			page 7


 241 00d2 4A39 0000 		tst.b player_X_playing.l
 241      0000 
 242 00d8 6700 00E8 		jeq .L21
 243               		.loc 1 64 24 is_stmt 1 discriminator 1 view .LVU52
 244               		.loc 1 64 30 is_stmt 0 discriminator 1 view .LVU53
 245 00dc 2439 0000 		move.l com1out,%d2
 245      0000 
 246               	.LVL20:
  65:test3.c       **** 	else screen = com0out;
  66:test3.c       **** 	// disable cursor while drawing
  67:test3.c       **** 	fprintf(screen, "%s", CURSORINVISIBLE);
 247               		.loc 1 67 2 is_stmt 1 discriminator 1 view .LVU54
 248 00e2 2F02      		move.l %d2,-(%sp)
 249               		.cfi_def_cfa_offset 36
 250 00e4 4878 0006 		pea 6.w
 251               		.cfi_def_cfa_offset 40
 252 00e8 4878 0001 		pea 1.w
 253               		.cfi_def_cfa_offset 44
 254 00ec 4879 0000 		pea .LC0
 254      0000 
 255               		.cfi_def_cfa_offset 48
 256 00f2 4BF9 0000 		lea fwrite,%a5
 256      0000 
 257 00f8 4E95      		jsr (%a5)
 258               	.LVL21:
  68:test3.c       **** 	
  69:test3.c       ****     	for (int i = 0; i < 3; i++) {
 259               		.loc 1 69 6 discriminator 1 view .LVU55
 260               	.LBB19:
 261               		.loc 1 69 11 discriminator 1 view .LVU56
 262               		.loc 1 69 24 discriminator 1 view .LVU57
 263 00fa 45F9 0000 		lea board,%a2
 263      0000 
 264 0100 263C 0000 		move.l #board+6,%d3
 264      0000 
 265 0106 283C 0000 		move.l #board+9,%d4
 265      0000 
 266 010c 4FEF 0010 		lea (16,%sp),%sp
 267               		.cfi_def_cfa_offset 32
 268 0110 47F9 0000 		lea fprintf,%a3
 268      0000 
 269 0116 49F9 0000 		lea fputc,%a4
 269      0000 
 270               	.LVL22:
 271               	.L23:
 272               	.LBB20:
  70:test3.c       ****         	for (int j = 0; j < 3; j++) {
 273               		.loc 1 70 28 view .LVU58
  71:test3.c       ****             		fprintf(screen," %c ", board[i][j]); // Print the current cell value
 274               		.loc 1 71 15 view .LVU59
 275 011c 1012      		move.b (%a2),%d0
 276 011e 4880      		ext.w %d0
 277 0120 3040      		move.w %d0,%a0
 278 0122 2F08      		move.l %a0,-(%sp)
 279               		.cfi_def_cfa_offset 36
 280 0124 4879 0000 		pea .LC2
 280      0000 
68K GAS  /tmp/ccMFIMKI.s 			page 8


 281               		.cfi_def_cfa_offset 40
 282 012a 2F02      		move.l %d2,-(%sp)
 283               		.cfi_def_cfa_offset 44
 284 012c 4E93      		jsr (%a3)
 285               	.LVL23:
  72:test3.c       ****             		if (j < 2) fprintf(screen,"|");     // Print column separator
 286               		.loc 1 72 15 view .LVU60
 287               		.loc 1 72 26 view .LVU61
 288 012e 2F02      		move.l %d2,-(%sp)
 289               		.cfi_def_cfa_offset 48
 290 0130 4878 007C 		pea 124.w
 291               		.cfi_def_cfa_offset 52
 292 0134 4E94      		jsr (%a4)
 293               	.LVL24:
  70:test3.c       ****         	for (int j = 0; j < 3; j++) {
 294               		.loc 1 70 34 view .LVU62
  70:test3.c       ****         	for (int j = 0; j < 3; j++) {
 295               		.loc 1 70 28 view .LVU63
  71:test3.c       ****             		fprintf(screen," %c ", board[i][j]); // Print the current cell value
 296               		.loc 1 71 15 view .LVU64
 297 0136 102A 0001 		move.b 1(%a2),%d0
 298 013a 4880      		ext.w %d0
 299 013c 3040      		move.w %d0,%a0
 300 013e 2F08      		move.l %a0,-(%sp)
 301               		.cfi_def_cfa_offset 56
 302 0140 4879 0000 		pea .LC2
 302      0000 
 303               		.cfi_def_cfa_offset 60
 304 0146 2F02      		move.l %d2,-(%sp)
 305               		.cfi_def_cfa_offset 64
 306 0148 4E93      		jsr (%a3)
 307               	.LVL25:
 308               		.loc 1 72 15 view .LVU65
 309               		.loc 1 72 26 view .LVU66
 310 014a 4FEF 001C 		lea (28,%sp),%sp
 311               		.cfi_def_cfa_offset 36
 312 014e 2E82      		move.l %d2,(%sp)
 313 0150 4878 007C 		pea 124.w
 314               		.cfi_def_cfa_offset 40
 315 0154 4E94      		jsr (%a4)
 316               	.LVL26:
  70:test3.c       ****         	for (int j = 0; j < 3; j++) {
 317               		.loc 1 70 34 view .LVU67
  70:test3.c       ****         	for (int j = 0; j < 3; j++) {
 318               		.loc 1 70 28 view .LVU68
  71:test3.c       ****             		fprintf(screen," %c ", board[i][j]); // Print the current cell value
 319               		.loc 1 71 15 view .LVU69
 320 0156 102A 0002 		move.b 2(%a2),%d0
 321 015a 4880      		ext.w %d0
 322 015c 3040      		move.w %d0,%a0
 323 015e 2F08      		move.l %a0,-(%sp)
 324               		.cfi_def_cfa_offset 44
 325 0160 4879 0000 		pea .LC2
 325      0000 
 326               		.cfi_def_cfa_offset 48
 327 0166 2F02      		move.l %d2,-(%sp)
 328               		.cfi_def_cfa_offset 52
68K GAS  /tmp/ccMFIMKI.s 			page 9


 329 0168 4E93      		jsr (%a3)
 330               	.LVL27:
 331               		.loc 1 72 15 view .LVU70
 332               		.loc 1 72 15 is_stmt 0 view .LVU71
 333               	.LBE20:
  73:test3.c       ****        			 }
  74:test3.c       ****         		fprintf(screen,"\n");
 334               		.loc 1 74 11 is_stmt 1 view .LVU72
 335 016a 2F02      		move.l %d2,-(%sp)
 336               		.cfi_def_cfa_offset 56
 337 016c 4878 000A 		pea 10.w
 338               		.cfi_def_cfa_offset 60
 339 0170 4E94      		jsr (%a4)
 340               	.LVL28:
  75:test3.c       ****         if (i < 2) fprintf(screen,"---+---+---\n"); // Print row separator
 341               		.loc 1 75 9 view .LVU73
 342               		.loc 1 75 12 is_stmt 0 view .LVU74
 343 0172 4FEF 001C 		lea (28,%sp),%sp
 344               		.cfi_def_cfa_offset 32
 345 0176 B5C3      		cmp.l %d3,%a2
 346 0178 671C      		jeq .L24
 347               		.loc 1 75 20 is_stmt 1 discriminator 1 view .LVU75
 348 017a 2F02      		move.l %d2,-(%sp)
 349               		.cfi_def_cfa_offset 36
 350 017c 4878 000C 		pea 12.w
 351               		.cfi_def_cfa_offset 40
 352 0180 4878 0001 		pea 1.w
 353               		.cfi_def_cfa_offset 44
 354 0184 4879 0000 		pea .LC1
 354      0000 
 355               		.cfi_def_cfa_offset 48
 356 018a 4E95      		jsr (%a5)
 357               	.LVL29:
  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 358               		.loc 1 69 30 discriminator 1 view .LVU76
  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 359               		.loc 1 69 24 discriminator 1 view .LVU77
 360 018c 568A      		addq.l #3,%a2
 361 018e 4FEF 0010 		lea (16,%sp),%sp
 362               		.cfi_def_cfa_offset 32
 363 0192 B5C4      		cmp.l %d4,%a2
 364 0194 6686      		jne .L23
 365               	.L24:
  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 366               		.loc 1 69 24 is_stmt 0 discriminator 1 view .LVU78
 367               	.LBE19:
  76:test3.c       ****     }
  77:test3.c       ****     	fprintf(screen,"\n");
 368               		.loc 1 77 6 is_stmt 1 view .LVU79
 369 0196 2F02      		move.l %d2,-(%sp)
 370               		.cfi_def_cfa_offset 36
 371 0198 4878 000A 		pea 10.w
 372               		.cfi_def_cfa_offset 40
 373 019c 4E94      		jsr (%a4)
 374               	.LVL30:
  78:test3.c       **** 	// enable cursor
  79:test3.c       **** 	fprintf(screen, "\033[%d;%dH", 24, 1);
68K GAS  /tmp/ccMFIMKI.s 			page 10


 375               		.loc 1 79 2 view .LVU80
 376 019e 4878 0001 		pea 1.w
 377               		.cfi_def_cfa_offset 44
 378 01a2 4878 0018 		pea 24.w
 379               		.cfi_def_cfa_offset 48
 380 01a6 4879 0000 		pea .LC3
 380      0000 
 381               		.cfi_def_cfa_offset 52
 382 01ac 2F02      		move.l %d2,-(%sp)
 383               		.cfi_def_cfa_offset 56
 384 01ae 4E93      		jsr (%a3)
 385               	.LVL31:
  80:test3.c       **** 	
  81:test3.c       **** 	fflush(screen);
 386               		.loc 1 81 2 view .LVU81
 387 01b0 2F02      		move.l %d2,-(%sp)
 388               		.cfi_def_cfa_offset 60
 389 01b2 4EB9 0000 		jsr fflush
 389      0000 
 390               	.LVL32:
  82:test3.c       ****     }
 391               		.loc 1 82 5 is_stmt 0 view .LVU82
 392 01b8 4FEF 001C 		lea (28,%sp),%sp
 393               		.cfi_def_cfa_offset 32
 394 01bc 4CDF 3C1C 		movem.l (%sp)+,#15388
 395               	.LVL33:
 396               		.loc 1 82 5 view .LVU83
 397 01c0 4E75      		rts
 398               	.LVL34:
 399               	.L21:
  65:test3.c       **** 	// disable cursor while drawing
 400               		.loc 1 65 7 is_stmt 1 view .LVU84
  65:test3.c       **** 	// disable cursor while drawing
 401               		.loc 1 65 14 is_stmt 0 view .LVU85
 402 01c2 2439 0000 		move.l com0out,%d2
 402      0000 
 403               	.LVL35:
  67:test3.c       **** 	
 404               		.loc 1 67 2 is_stmt 1 view .LVU86
 405 01c8 2F02      		move.l %d2,-(%sp)
 406               		.cfi_def_cfa_offset 36
 407 01ca 4878 0006 		pea 6.w
 408               		.cfi_def_cfa_offset 40
 409 01ce 4878 0001 		pea 1.w
 410               		.cfi_def_cfa_offset 44
 411 01d2 4879 0000 		pea .LC0
 411      0000 
 412               		.cfi_def_cfa_offset 48
 413 01d8 4BF9 0000 		lea fwrite,%a5
 413      0000 
 414 01de 4E95      		jsr (%a5)
 415               	.LVL36:
  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 416               		.loc 1 69 6 view .LVU87
 417               	.LBB21:
  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 418               		.loc 1 69 11 view .LVU88
68K GAS  /tmp/ccMFIMKI.s 			page 11


  69:test3.c       ****         	for (int j = 0; j < 3; j++) {
 419               		.loc 1 69 24 view .LVU89
 420 01e0 45F9 0000 		lea board,%a2
 420      0000 
 421 01e6 263C 0000 		move.l #board+6,%d3
 421      0000 
 422 01ec 283C 0000 		move.l #board+9,%d4
 422      0000 
 423 01f2 4FEF 0010 		lea (16,%sp),%sp
 424               		.cfi_def_cfa_offset 32
 425 01f6 47F9 0000 		lea fprintf,%a3
 425      0000 
 426 01fc 49F9 0000 		lea fputc,%a4
 426      0000 
 427 0202 6000 FF18 		jra .L23
 428               	.LBE21:
 429               		.cfi_endproc
 430               	.LFE6:
 431               		.size	display_board, .-display_board
 432               		.section	.rodata.str1.1
 433               	.LC4:
 434 0022 506C 6179 		.string	"Player 'O', choose a cell (0-8): "
 434      6572 2027 
 434      4F27 2C20 
 434      6368 6F6F 
 434      7365 2061 
 435               	.LC5:
 436 0044 2564 00   		.string	"%d"
 437               	.LC6:
 438 0047 496E 7661 		.string	"Invalid cell. Try again.\n"
 438      6C69 6420 
 438      6365 6C6C 
 438      2E20 5472 
 438      7920 6167 
 439               		.text
 440               		.align	2
 441               		.globl	player_maru
 442               		.type	player_maru, @function
 443               	player_maru:
 444               	.LFB7:
  83:test3.c       **** 
  84:test3.c       **** void player_maru() {
 445               		.loc 1 84 20 view -0
 446               		.cfi_startproc
 447 0206 598F      		subq.l #4,%sp
 448               		.cfi_def_cfa_offset 8
 449 0208 48E7 3F3E 		movem.l #16190,-(%sp)
 450               		.cfi_def_cfa_offset 52
 451               		.cfi_offset 2, -52
 452               		.cfi_offset 3, -48
 453               		.cfi_offset 4, -44
 454               		.cfi_offset 5, -40
 455               		.cfi_offset 6, -36
 456               		.cfi_offset 7, -32
 457               		.cfi_offset 10, -28
 458               		.cfi_offset 11, -24
 459               		.cfi_offset 12, -20
68K GAS  /tmp/ccMFIMKI.s 			page 12


 460               		.cfi_offset 13, -16
 461               		.cfi_offset 14, -12
 462 020c 2C3C 0000 		move.l #P,%d6
 462      0000 
 463 0212 45F9 0000 		lea fwrite,%a2
 463      0000 
 464 0218 742C      		moveq #44,%d2
 465 021a D48F      		add.l %sp,%d2
 466 021c 47F9 0000 		lea fscanf,%a3
 466      0000 
 467 0222 2A3C 0000 		move.l #board,%d5
 467      0000 
 468 0228 283C 0000 		move.l #__divsi3,%d4
 468      0000 
 469 022e 4DFA FDF6 		lea remove_cell,%a6
 470 0232 4BFA FE9A 		lea display_board,%a5
 471 0236 49F9 0000 		lea V,%a4
 471      0000 
  85:test3.c       **** 	while (1)
 472               		.loc 1 85 2 view .LVU91
 473               	.LBB22:
  86:test3.c       **** 	{
  87:test3.c       **** 		P(0);
 474               		.loc 1 87 3 view .LVU92
 475 023c 42A7      		clr.l -(%sp)
 476               		.cfi_def_cfa_offset 56
 477 023e 2046      		move.l %d6,%a0
 478 0240 4E90      		jsr (%a0)
 479               	.LVL37:
  88:test3.c       **** 		int cell = -1;
 480               		.loc 1 88 3 view .LVU93
 481               		.loc 1 88 7 is_stmt 0 view .LVU94
 482 0242 70FF      		moveq #-1,%d0
 483 0244 2F40 0030 		move.l %d0,48(%sp)
  89:test3.c       **** 		bool valid = false;
 484               		.loc 1 89 3 is_stmt 1 view .LVU95
 485               	.LVL38:
  90:test3.c       **** 		player_X_playing = false;
 486               		.loc 1 90 3 view .LVU96
 487               		.loc 1 90 20 is_stmt 0 view .LVU97
 488 0248 4239 0000 		clr.b player_X_playing
 488      0000 
  91:test3.c       **** 
  92:test3.c       **** 		while (!valid) {
 489               		.loc 1 92 3 is_stmt 1 view .LVU98
  90:test3.c       **** 		player_X_playing = false;
 490               		.loc 1 90 20 is_stmt 0 view .LVU99
 491 024e 588F      		addq.l #4,%sp
 492               		.cfi_def_cfa_offset 52
 493               	.L29:
 494               		.loc 1 92 10 is_stmt 1 view .LVU100
  93:test3.c       **** 			// Prompt the player to choose a cell
  94:test3.c       **** 			fprintf(com0out, "Player 'O', choose a cell (0-8): ");
 495               		.loc 1 94 4 view .LVU101
 496 0250 2F39 0000 		move.l com0out,-(%sp)
 496      0000 
 497               		.cfi_def_cfa_offset 56
68K GAS  /tmp/ccMFIMKI.s 			page 13


 498 0256 4878 0021 		pea 33.w
 499               		.cfi_def_cfa_offset 60
 500 025a 4878 0001 		pea 1.w
 501               		.cfi_def_cfa_offset 64
 502 025e 4879 0000 		pea .LC4
 502      0000 
 503               		.cfi_def_cfa_offset 68
 504 0264 4E92      		jsr (%a2)
 505               	.LVL39:
  95:test3.c       **** 			fscanf(com0in, "%d", &cell);
 506               		.loc 1 95 4 view .LVU102
 507 0266 2F02      		move.l %d2,-(%sp)
 508               		.cfi_def_cfa_offset 72
 509 0268 4879 0000 		pea .LC5
 509      0000 
 510               		.cfi_def_cfa_offset 76
 511 026e 2F39 0000 		move.l com0in,-(%sp)
 511      0000 
 512               		.cfi_def_cfa_offset 80
 513 0274 4E93      		jsr (%a3)
 514               	.LVL40:
  96:test3.c       **** 
  97:test3.c       **** 			// Validate the chosen cell
  98:test3.c       **** 			if (is_valid_cell(cell)) {
 515               		.loc 1 98 4 view .LVU103
 516               		.loc 1 98 8 is_stmt 0 view .LVU104
 517 0276 2E2F 0048 		move.l 72(%sp),%d7
 518               	.LVL41:
 519               	.LBB23:
 520               	.LBI23:
  36:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
 521               		.loc 1 36 6 is_stmt 1 view .LVU105
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 522               		.loc 1 37 5 view .LVU106
 523               	.LBB24:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 524               		.loc 1 37 10 view .LVU107
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 525               		.loc 1 37 23 view .LVU108
 526 027a 2239 0000 		move.l num_valid_cells,%d1
 526      0000 
 527 0280 4FEF 001C 		lea (28,%sp),%sp
 528               		.cfi_def_cfa_offset 52
 529 0284 6F12      		jle .L32
 530 0286 41F9 0000 		lea valid_cells,%a0
 530      0000 
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 531               		.loc 1 37 14 is_stmt 0 view .LVU109
 532 028c 7000      		moveq #0,%d0
 533               	.LVL42:
 534               	.L31:
  38:test3.c       ****     }
 535               		.loc 1 38 9 is_stmt 1 view .LVU110
  38:test3.c       ****     }
 536               		.loc 1 38 12 is_stmt 0 view .LVU111
 537 028e BE98      		cmp.l (%a0)+,%d7
 538 0290 6722      		jeq .L30
68K GAS  /tmp/ccMFIMKI.s 			page 14


  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 539               		.loc 1 37 43 is_stmt 1 view .LVU112
 540 0292 5280      		addq.l #1,%d0
 541               	.LVL43:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 542               		.loc 1 37 23 view .LVU113
 543 0294 B280      		cmp.l %d0,%d1
 544 0296 66F6      		jne .L31
 545               	.LVL44:
 546               	.L32:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 547               		.loc 1 37 23 is_stmt 0 view .LVU114
 548               	.LBE24:
 549               	.LBE23:
  99:test3.c       **** 				valid = true;
 100:test3.c       **** 				update_board(cell, 'O');  // Place 'O' on the board
 101:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 102:test3.c       **** 			} else {
 103:test3.c       **** 				fprintf(com0out, "Invalid cell. Try again.\n");
 550               		.loc 1 103 5 is_stmt 1 view .LVU115
 551 0298 2F39 0000 		move.l com0out,-(%sp)
 551      0000 
 552               		.cfi_def_cfa_offset 56
 553 029e 4878 0019 		pea 25.w
 554               		.cfi_def_cfa_offset 60
 555 02a2 4878 0001 		pea 1.w
 556               		.cfi_def_cfa_offset 64
 557 02a6 4879 0000 		pea .LC6
 557      0000 
 558               		.cfi_def_cfa_offset 68
 559 02ac 4E92      		jsr (%a2)
 560               	.LVL45:
 561 02ae 4FEF 0010 		lea (16,%sp),%sp
 562               		.cfi_def_cfa_offset 52
 563 02b2 609C      		jra .L29
 564               	.LVL46:
 565               	.L30:
  99:test3.c       **** 				valid = true;
 566               		.loc 1 99 5 view .LVU116
 100:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 567               		.loc 1 100 5 view .LVU117
 568               	.LBB25:
 569               	.LBI25:
  56:test3.c       ****     int row = cell / 3;
 570               		.loc 1 56 6 view .LVU118
 571               	.LBB26:
  57:test3.c       ****     int col = cell % 3;
 572               		.loc 1 57 5 view .LVU119
  58:test3.c       ****     board[row][col] = mark;
 573               		.loc 1 58 5 view .LVU120
  59:test3.c       **** }
 574               		.loc 1 59 5 view .LVU121
  57:test3.c       ****     int col = cell % 3;
 575               		.loc 1 57 9 is_stmt 0 view .LVU122
 576 02b4 4878 0003 		pea 3.w
 577               		.cfi_def_cfa_offset 56
 578 02b8 2F07      		move.l %d7,-(%sp)
68K GAS  /tmp/ccMFIMKI.s 			page 15


 579               		.cfi_def_cfa_offset 60
 580 02ba 2044      		move.l %d4,%a0
 581 02bc 4E90      		jsr (%a0)
 582               	.LVL47:
 583 02be 508F      		addq.l #8,%sp
 584               		.cfi_def_cfa_offset 52
 585 02c0 2600      		move.l %d0,%d3
  58:test3.c       ****     board[row][col] = mark;
 586               		.loc 1 58 9 view .LVU123
 587 02c2 4878 0003 		pea 3.w
 588               		.cfi_def_cfa_offset 56
 589 02c6 2F07      		move.l %d7,-(%sp)
 590               		.cfi_def_cfa_offset 60
 591 02c8 4EB9 0000 		jsr __modsi3
 591      0000 
 592               	.LVL48:
 593 02ce 508F      		addq.l #8,%sp
 594               		.cfi_def_cfa_offset 52
  59:test3.c       **** }
 595               		.loc 1 59 21 view .LVU124
 596 02d0 2043      		move.l %d3,%a0
 597 02d2 D1C3      		add.l %d3,%a0
 598 02d4 D1C3      		add.l %d3,%a0
 599 02d6 D1C5      		add.l %d5,%a0
 600 02d8 11BC 004F 		move.b #79,(%a0,%d0.l)
 600      0800 
 601               	.LVL49:
  59:test3.c       **** }
 602               		.loc 1 59 21 view .LVU125
 603               	.LBE26:
 604               	.LBE25:
 101:test3.c       **** 			} else {
 605               		.loc 1 101 5 is_stmt 1 view .LVU126
 606 02de 2F07      		move.l %d7,-(%sp)
 607               		.cfi_def_cfa_offset 56
 608 02e0 4E96      		jsr (%a6)
 609               	.LVL50:
  92:test3.c       **** 			// Prompt the player to choose a cell
 610               		.loc 1 92 10 view .LVU127
 104:test3.c       **** 			}
 105:test3.c       **** 		}
 106:test3.c       **** 		display_board(); // Show the updated board
 611               		.loc 1 106 3 view .LVU128
 612 02e2 4E95      		jsr (%a5)
 613               	.LVL51:
 107:test3.c       **** 		V(0);
 614               		.loc 1 107 3 view .LVU129
 615 02e4 42A7      		clr.l -(%sp)
 616               		.cfi_def_cfa_offset 60
 617 02e6 4E94      		jsr (%a4)
 618               	.LVL52:
 619               	.LBE22:
  85:test3.c       **** 	{
 620               		.loc 1 85 8 view .LVU130
  86:test3.c       **** 		P(0);
 621               		.loc 1 86 2 is_stmt 0 view .LVU131
 622 02e8 508F      		addq.l #8,%sp
68K GAS  /tmp/ccMFIMKI.s 			page 16


 623               		.cfi_def_cfa_offset 52
  85:test3.c       **** 	{
 624               		.loc 1 85 2 is_stmt 1 view .LVU132
 625               	.LBB27:
  87:test3.c       **** 		int cell = -1;
 626               		.loc 1 87 3 view .LVU133
 627 02ea 42A7      		clr.l -(%sp)
 628               		.cfi_def_cfa_offset 56
 629 02ec 2046      		move.l %d6,%a0
 630 02ee 4E90      		jsr (%a0)
 631               	.LVL53:
  88:test3.c       **** 		bool valid = false;
 632               		.loc 1 88 3 view .LVU134
  88:test3.c       **** 		bool valid = false;
 633               		.loc 1 88 7 is_stmt 0 view .LVU135
 634 02f0 70FF      		moveq #-1,%d0
 635 02f2 2F40 0030 		move.l %d0,48(%sp)
  89:test3.c       **** 		player_X_playing = false;
 636               		.loc 1 89 3 is_stmt 1 view .LVU136
 637               	.LVL54:
  90:test3.c       **** 
 638               		.loc 1 90 3 view .LVU137
  90:test3.c       **** 
 639               		.loc 1 90 20 is_stmt 0 view .LVU138
 640 02f6 4239 0000 		clr.b player_X_playing
 640      0000 
  92:test3.c       **** 			// Prompt the player to choose a cell
 641               		.loc 1 92 3 is_stmt 1 view .LVU139
  90:test3.c       **** 
 642               		.loc 1 90 20 is_stmt 0 view .LVU140
 643 02fc 588F      		addq.l #4,%sp
 644               		.cfi_def_cfa_offset 52
 645 02fe 6000 FF50 		jra .L29
 646               	.LBE27:
 647               		.cfi_endproc
 648               	.LFE7:
 649               		.size	player_maru, .-player_maru
 650               		.section	.rodata.str1.1
 651               	.LC7:
 652 0061 506C 6179 		.string	"Player 'X', choose a cell (0-8): "
 652      6572 2027 
 652      5827 2C20 
 652      6368 6F6F 
 652      7365 2061 
 653               		.text
 654               		.align	2
 655               		.globl	player_x
 656               		.type	player_x, @function
 657               	player_x:
 658               	.LFB8:
 108:test3.c       **** 	}
 109:test3.c       **** }
 110:test3.c       **** void player_x() {
 659               		.loc 1 110 17 is_stmt 1 view -0
 660               		.cfi_startproc
 661 0302 598F      		subq.l #4,%sp
 662               		.cfi_def_cfa_offset 8
68K GAS  /tmp/ccMFIMKI.s 			page 17


 663 0304 48E7 3F3E 		movem.l #16190,-(%sp)
 664               		.cfi_def_cfa_offset 52
 665               		.cfi_offset 2, -52
 666               		.cfi_offset 3, -48
 667               		.cfi_offset 4, -44
 668               		.cfi_offset 5, -40
 669               		.cfi_offset 6, -36
 670               		.cfi_offset 7, -32
 671               		.cfi_offset 10, -28
 672               		.cfi_offset 11, -24
 673               		.cfi_offset 12, -20
 674               		.cfi_offset 13, -16
 675               		.cfi_offset 14, -12
 676 0308 2C3C 0000 		move.l #P,%d6
 676      0000 
 677 030e 45F9 0000 		lea fwrite,%a2
 677      0000 
 678 0314 742C      		moveq #44,%d2
 679 0316 D48F      		add.l %sp,%d2
 680 0318 47F9 0000 		lea fscanf,%a3
 680      0000 
 681 031e 2A3C 0000 		move.l #board,%d5
 681      0000 
 682 0324 283C 0000 		move.l #__divsi3,%d4
 682      0000 
 683 032a 4DFA FCFA 		lea remove_cell,%a6
 684 032e 4BFA FD9E 		lea display_board,%a5
 685 0332 49F9 0000 		lea V,%a4
 685      0000 
 111:test3.c       **** 	while(1){
 686               		.loc 1 111 2 view .LVU142
 687               	.LBB28:
 112:test3.c       **** 		P(0);
 688               		.loc 1 112 3 view .LVU143
 689 0338 42A7      		clr.l -(%sp)
 690               		.cfi_def_cfa_offset 56
 691 033a 2046      		move.l %d6,%a0
 692 033c 4E90      		jsr (%a0)
 693               	.LVL55:
 113:test3.c       **** 		int cell = -1;
 694               		.loc 1 113 3 view .LVU144
 695               		.loc 1 113 7 is_stmt 0 view .LVU145
 696 033e 70FF      		moveq #-1,%d0
 697 0340 2F40 0030 		move.l %d0,48(%sp)
 114:test3.c       **** 		bool valid = false;
 698               		.loc 1 114 3 is_stmt 1 view .LVU146
 699               	.LVL56:
 115:test3.c       **** 		player_X_playing = true;
 700               		.loc 1 115 3 view .LVU147
 701               		.loc 1 115 20 is_stmt 0 view .LVU148
 702 0344 13FC 0001 		move.b #1,player_X_playing
 702      0000 0000 
 116:test3.c       **** 
 117:test3.c       **** 		while (!valid) {
 703               		.loc 1 117 3 is_stmt 1 view .LVU149
 115:test3.c       **** 		player_X_playing = true;
 704               		.loc 1 115 20 is_stmt 0 view .LVU150
68K GAS  /tmp/ccMFIMKI.s 			page 18


 705 034c 588F      		addq.l #4,%sp
 706               		.cfi_def_cfa_offset 52
 707               	.L39:
 708               		.loc 1 117 10 is_stmt 1 view .LVU151
 118:test3.c       **** 			// Prompt the player to choose a cell
 119:test3.c       **** 			fprintf(com1out, "Player 'X', choose a cell (0-8): ");
 709               		.loc 1 119 4 view .LVU152
 710 034e 2F39 0000 		move.l com1out,-(%sp)
 710      0000 
 711               		.cfi_def_cfa_offset 56
 712 0354 4878 0021 		pea 33.w
 713               		.cfi_def_cfa_offset 60
 714 0358 4878 0001 		pea 1.w
 715               		.cfi_def_cfa_offset 64
 716 035c 4879 0000 		pea .LC7
 716      0000 
 717               		.cfi_def_cfa_offset 68
 718 0362 4E92      		jsr (%a2)
 719               	.LVL57:
 120:test3.c       **** 			fscanf(com1in, "%d", &cell);
 720               		.loc 1 120 4 view .LVU153
 721 0364 2F02      		move.l %d2,-(%sp)
 722               		.cfi_def_cfa_offset 72
 723 0366 4879 0000 		pea .LC5
 723      0000 
 724               		.cfi_def_cfa_offset 76
 725 036c 2F39 0000 		move.l com1in,-(%sp)
 725      0000 
 726               		.cfi_def_cfa_offset 80
 727 0372 4E93      		jsr (%a3)
 728               	.LVL58:
 121:test3.c       **** 
 122:test3.c       **** 			// Validate the chosen cell
 123:test3.c       **** 			if (is_valid_cell(cell)) {
 729               		.loc 1 123 4 view .LVU154
 730               		.loc 1 123 8 is_stmt 0 view .LVU155
 731 0374 2E2F 0048 		move.l 72(%sp),%d7
 732               	.LVL59:
 733               	.LBB29:
 734               	.LBI29:
  36:test3.c       ****     for (int i = 0; i < num_valid_cells; i++) {
 735               		.loc 1 36 6 is_stmt 1 view .LVU156
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 736               		.loc 1 37 5 view .LVU157
 737               	.LBB30:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 738               		.loc 1 37 10 view .LVU158
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 739               		.loc 1 37 23 view .LVU159
 740 0378 2239 0000 		move.l num_valid_cells,%d1
 740      0000 
 741 037e 4FEF 001C 		lea (28,%sp),%sp
 742               		.cfi_def_cfa_offset 52
 743 0382 6F12      		jle .L42
 744 0384 41F9 0000 		lea valid_cells,%a0
 744      0000 
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
68K GAS  /tmp/ccMFIMKI.s 			page 19


 745               		.loc 1 37 14 is_stmt 0 view .LVU160
 746 038a 7000      		moveq #0,%d0
 747               	.LVL60:
 748               	.L41:
  38:test3.c       ****     }
 749               		.loc 1 38 9 is_stmt 1 view .LVU161
  38:test3.c       ****     }
 750               		.loc 1 38 12 is_stmt 0 view .LVU162
 751 038c BE98      		cmp.l (%a0)+,%d7
 752 038e 6722      		jeq .L40
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 753               		.loc 1 37 43 is_stmt 1 view .LVU163
 754 0390 5280      		addq.l #1,%d0
 755               	.LVL61:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 756               		.loc 1 37 23 view .LVU164
 757 0392 B280      		cmp.l %d0,%d1
 758 0394 66F6      		jne .L41
 759               	.LVL62:
 760               	.L42:
  37:test3.c       ****         if (valid_cells[i] == cell) return true;
 761               		.loc 1 37 23 is_stmt 0 view .LVU165
 762               	.LBE30:
 763               	.LBE29:
 124:test3.c       **** 				valid = true;
 125:test3.c       **** 				update_board(cell, 'X');  // Place 'X' on the board
 126:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 127:test3.c       **** 			} else {
 128:test3.c       **** 				fprintf(com1out, "Invalid cell. Try again.\n");
 764               		.loc 1 128 5 is_stmt 1 view .LVU166
 765 0396 2F39 0000 		move.l com1out,-(%sp)
 765      0000 
 766               		.cfi_def_cfa_offset 56
 767 039c 4878 0019 		pea 25.w
 768               		.cfi_def_cfa_offset 60
 769 03a0 4878 0001 		pea 1.w
 770               		.cfi_def_cfa_offset 64
 771 03a4 4879 0000 		pea .LC6
 771      0000 
 772               		.cfi_def_cfa_offset 68
 773 03aa 4E92      		jsr (%a2)
 774               	.LVL63:
 775 03ac 4FEF 0010 		lea (16,%sp),%sp
 776               		.cfi_def_cfa_offset 52
 777 03b0 609C      		jra .L39
 778               	.LVL64:
 779               	.L40:
 124:test3.c       **** 				valid = true;
 780               		.loc 1 124 5 view .LVU167
 125:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 781               		.loc 1 125 5 view .LVU168
 782               	.LBB31:
 783               	.LBI31:
  56:test3.c       ****     int row = cell / 3;
 784               		.loc 1 56 6 view .LVU169
 785               	.LBB32:
  57:test3.c       ****     int col = cell % 3;
68K GAS  /tmp/ccMFIMKI.s 			page 20


 786               		.loc 1 57 5 view .LVU170
  58:test3.c       ****     board[row][col] = mark;
 787               		.loc 1 58 5 view .LVU171
  59:test3.c       **** }
 788               		.loc 1 59 5 view .LVU172
  57:test3.c       ****     int col = cell % 3;
 789               		.loc 1 57 9 is_stmt 0 view .LVU173
 790 03b2 4878 0003 		pea 3.w
 791               		.cfi_def_cfa_offset 56
 792 03b6 2F07      		move.l %d7,-(%sp)
 793               		.cfi_def_cfa_offset 60
 794 03b8 2044      		move.l %d4,%a0
 795 03ba 4E90      		jsr (%a0)
 796               	.LVL65:
 797 03bc 508F      		addq.l #8,%sp
 798               		.cfi_def_cfa_offset 52
 799 03be 2600      		move.l %d0,%d3
  58:test3.c       ****     board[row][col] = mark;
 800               		.loc 1 58 9 view .LVU174
 801 03c0 4878 0003 		pea 3.w
 802               		.cfi_def_cfa_offset 56
 803 03c4 2F07      		move.l %d7,-(%sp)
 804               		.cfi_def_cfa_offset 60
 805 03c6 4EB9 0000 		jsr __modsi3
 805      0000 
 806               	.LVL66:
 807 03cc 508F      		addq.l #8,%sp
 808               		.cfi_def_cfa_offset 52
  59:test3.c       **** }
 809               		.loc 1 59 21 view .LVU175
 810 03ce 2043      		move.l %d3,%a0
 811 03d0 D1C3      		add.l %d3,%a0
 812 03d2 D1C3      		add.l %d3,%a0
 813 03d4 D1C5      		add.l %d5,%a0
 814 03d6 11BC 0058 		move.b #88,(%a0,%d0.l)
 814      0800 
 815               	.LVL67:
  59:test3.c       **** }
 816               		.loc 1 59 21 view .LVU176
 817               	.LBE32:
 818               	.LBE31:
 126:test3.c       **** 			} else {
 819               		.loc 1 126 5 is_stmt 1 view .LVU177
 820 03dc 2F07      		move.l %d7,-(%sp)
 821               		.cfi_def_cfa_offset 56
 822 03de 4E96      		jsr (%a6)
 823               	.LVL68:
 117:test3.c       **** 			// Prompt the player to choose a cell
 824               		.loc 1 117 10 view .LVU178
 129:test3.c       **** 			}
 130:test3.c       **** 		}
 131:test3.c       **** 		display_board(); // Show the updated board
 825               		.loc 1 131 3 view .LVU179
 826 03e0 4E95      		jsr (%a5)
 827               	.LVL69:
 132:test3.c       **** 		V(0);
 828               		.loc 1 132 3 view .LVU180
68K GAS  /tmp/ccMFIMKI.s 			page 21


 829 03e2 42A7      		clr.l -(%sp)
 830               		.cfi_def_cfa_offset 60
 831 03e4 4E94      		jsr (%a4)
 832               	.LVL70:
 833               	.LBE28:
 111:test3.c       **** 		P(0);
 834               		.loc 1 111 7 view .LVU181
 111:test3.c       **** 		P(0);
 835               		.loc 1 111 10 is_stmt 0 view .LVU182
 836 03e6 508F      		addq.l #8,%sp
 837               		.cfi_def_cfa_offset 52
 111:test3.c       **** 		P(0);
 838               		.loc 1 111 2 is_stmt 1 view .LVU183
 839               	.LBB33:
 112:test3.c       **** 		int cell = -1;
 840               		.loc 1 112 3 view .LVU184
 841 03e8 42A7      		clr.l -(%sp)
 842               		.cfi_def_cfa_offset 56
 843 03ea 2046      		move.l %d6,%a0
 844 03ec 4E90      		jsr (%a0)
 845               	.LVL71:
 113:test3.c       **** 		bool valid = false;
 846               		.loc 1 113 3 view .LVU185
 113:test3.c       **** 		bool valid = false;
 847               		.loc 1 113 7 is_stmt 0 view .LVU186
 848 03ee 70FF      		moveq #-1,%d0
 849 03f0 2F40 0030 		move.l %d0,48(%sp)
 114:test3.c       **** 		player_X_playing = true;
 850               		.loc 1 114 3 is_stmt 1 view .LVU187
 851               	.LVL72:
 115:test3.c       **** 
 852               		.loc 1 115 3 view .LVU188
 115:test3.c       **** 
 853               		.loc 1 115 20 is_stmt 0 view .LVU189
 854 03f4 13FC 0001 		move.b #1,player_X_playing
 854      0000 0000 
 117:test3.c       **** 			// Prompt the player to choose a cell
 855               		.loc 1 117 3 is_stmt 1 view .LVU190
 115:test3.c       **** 
 856               		.loc 1 115 20 is_stmt 0 view .LVU191
 857 03fc 588F      		addq.l #4,%sp
 858               		.cfi_def_cfa_offset 52
 859 03fe 6000 FF4E 		jra .L39
 860               	.LBE33:
 861               		.cfi_endproc
 862               	.LFE8:
 863               		.size	player_x, .-player_x
 864               		.section	.rodata.str1.1
 865               	.LC8:
 866 0083 4875 7272 		.string	"Hurry up! you are taking sooo long!!!\n"
 866      7920 7570 
 866      2120 796F 
 866      7520 6172 
 866      6520 7461 
 867               		.text
 868               		.align	2
 869               		.globl	hurry_msg
68K GAS  /tmp/ccMFIMKI.s 			page 22


 870               		.type	hurry_msg, @function
 871               	hurry_msg:
 872               	.LFB9:
 133:test3.c       **** 	}
 134:test3.c       **** }
 135:test3.c       **** void hurry_msg() {
 873               		.loc 1 135 18 is_stmt 1 view -0
 874               		.cfi_startproc
 875 0402 2F0A      		move.l %a2,-(%sp)
 876               		.cfi_def_cfa_offset 8
 877               		.cfi_offset 10, -8
 136:test3.c       ****  
 137:test3.c       ****     if (player_X_playing) {
 878               		.loc 1 137 5 view .LVU193
 879               		.loc 1 137 8 is_stmt 0 view .LVU194
 880 0404 4A39 0000 		tst.b player_X_playing.l
 880      0000 
 881 040a 6728      		jeq .L49
 138:test3.c       ****         fprintf(com0out, "Hurry up! you are taking sooo long!!!\n");
 882               		.loc 1 138 9 is_stmt 1 view .LVU195
 883 040c 2F39 0000 		move.l com0out,-(%sp)
 883      0000 
 884               		.cfi_def_cfa_offset 12
 885 0412 4878 0026 		pea 38.w
 886               		.cfi_def_cfa_offset 16
 887 0416 4878 0001 		pea 1.w
 888               		.cfi_def_cfa_offset 20
 889 041a 4879 0000 		pea .LC8
 889      0000 
 890               		.cfi_def_cfa_offset 24
 891 0420 4EB9 0000 		jsr fwrite
 891      0000 
 892               	.LVL73:
 893 0426 4FEF 0010 		lea (16,%sp),%sp
 894               		.cfi_def_cfa_offset 8
 895 042a 45FA FCA2 		lea display_board,%a2
 896               	.L50:
 139:test3.c       ****     } else {
 140:test3.c       ****         fprintf(com1out, "Hurry up! you are taking sooo long!!!\n");
 141:test3.c       ****     }
 142:test3.c       **** 	while (1) {
 897               		.loc 1 142 2 discriminator 1 view .LVU196
 143:test3.c       **** 		display_board();
 898               		.loc 1 143 3 discriminator 1 view .LVU197
 899 042e 4E92      		jsr (%a2)
 900               	.LVL74:
 142:test3.c       **** 		display_board();
 901               		.loc 1 142 8 discriminator 1 view .LVU198
 142:test3.c       **** 		display_board();
 902               		.loc 1 142 2 discriminator 1 view .LVU199
 903               		.loc 1 143 3 discriminator 1 view .LVU200
 904 0430 4E92      		jsr (%a2)
 905               	.LVL75:
 142:test3.c       **** 		display_board();
 906               		.loc 1 142 8 discriminator 1 view .LVU201
 907 0432 60FA      		jra .L50
 908               	.L49:
68K GAS  /tmp/ccMFIMKI.s 			page 23


 140:test3.c       ****     }
 909               		.loc 1 140 9 view .LVU202
 910 0434 2F39 0000 		move.l com1out,-(%sp)
 910      0000 
 911               		.cfi_def_cfa_offset 12
 138:test3.c       ****     } else {
 912               		.loc 1 138 9 is_stmt 0 view .LVU203
 913 043a 4878 0026 		pea 38.w
 914               		.cfi_def_cfa_offset 16
 915 043e 4878 0001 		pea 1.w
 916               		.cfi_def_cfa_offset 20
 917 0442 4879 0000 		pea .LC8
 917      0000 
 918               		.cfi_def_cfa_offset 24
 919 0448 4EB9 0000 		jsr fwrite
 919      0000 
 920               	.LVL76:
 921 044e 4FEF 0010 		lea (16,%sp),%sp
 922               		.cfi_def_cfa_offset 8
 923 0452 45FA FC7A 		lea display_board,%a2
 924 0456 60D6      		jra .L50
 925               		.cfi_endproc
 926               	.LFE9:
 927               		.size	hurry_msg, .-hurry_msg
 928               		.section	.rodata.str1.1
 929               	.LC9:
 930 00aa 0A54 6963 		.string	"\nTic-Tac-Toe Board:\n"
 930      2D54 6163 
 930      2D54 6F65 
 930      2042 6F61 
 930      7264 3A0A 
 931               	.LC10:
 932 00bf 7C20 00   		.string	"| "
 933               	.LC11:
 934 00c2 2563 2000 		.string	"%c "
 935               	.LC12:
 936 00c6 2D2D 2D2D 		.string	"---------\n"
 936      2D2D 2D2D 
 936      2D0A 00
 937               		.text
 938               		.align	2
 939               		.globl	init_board
 940               		.type	init_board, @function
 941               	init_board:
 942               	.LFB10:
 144:test3.c       **** 	}
 145:test3.c       **** }
 146:test3.c       **** //draws the init Tic-Tac-Toe board for both players
 147:test3.c       **** void init_board() {
 943               		.loc 1 147 19 is_stmt 1 view -0
 944               		.cfi_startproc
 945 0458 48E7 203E 		movem.l #8254,-(%sp)
 946               		.cfi_def_cfa_offset 28
 947               		.cfi_offset 2, -28
 948               		.cfi_offset 10, -24
 949               		.cfi_offset 11, -20
 950               		.cfi_offset 12, -16
68K GAS  /tmp/ccMFIMKI.s 			page 24


 951               		.cfi_offset 13, -12
 952               		.cfi_offset 14, -8
 148:test3.c       ****     fprintf(com0out, "\nTic-Tac-Toe Board:\n");
 953               		.loc 1 148 5 view .LVU205
 954 045c 2F39 0000 		move.l com0out,-(%sp)
 954      0000 
 955               		.cfi_def_cfa_offset 32
 956 0462 4878 0014 		pea 20.w
 957               		.cfi_def_cfa_offset 36
 958 0466 4878 0001 		pea 1.w
 959               		.cfi_def_cfa_offset 40
 960 046a 4879 0000 		pea .LC9
 960      0000 
 961               		.cfi_def_cfa_offset 44
 962 0470 49F9 0000 		lea fwrite,%a4
 962      0000 
 963 0476 4E94      		jsr (%a4)
 964               	.LVL77:
 149:test3.c       ****     fprintf(com1out, "\nTic-Tac-Toe Board:\n");
 965               		.loc 1 149 5 view .LVU206
 966 0478 2F39 0000 		move.l com1out,-(%sp)
 966      0000 
 967               		.cfi_def_cfa_offset 48
 968 047e 4878 0014 		pea 20.w
 969               		.cfi_def_cfa_offset 52
 970 0482 4878 0001 		pea 1.w
 971               		.cfi_def_cfa_offset 56
 972 0486 4879 0000 		pea .LC9
 972      0000 
 973               		.cfi_def_cfa_offset 60
 974 048c 4E94      		jsr (%a4)
 975               	.LVL78:
 150:test3.c       **** 
 151:test3.c       ****     for (int i = 0; i < 3; i++) {
 976               		.loc 1 151 5 view .LVU207
 977               	.LBB34:
 978               		.loc 1 151 10 view .LVU208
 979               		.loc 1 151 23 view .LVU209
 980 048e 4BF9 0000 		lea board,%a5
 980      0000 
 981 0494 4FEF 0020 		lea (32,%sp),%sp
 982               		.cfi_def_cfa_offset 28
 983 0498 4DF9 0000 		lea fputc,%a6
 983      0000 
 984 049e 47F9 0000 		lea fprintf,%a3
 984      0000 
 985               	.LVL79:
 986               	.L56:
 987               	.LBB35:
 152:test3.c       ****         for (int j = 0; j < 3; j++) {
 988               		.loc 1 152 27 view .LVU210
 153:test3.c       ****             // Print the current cell (e.g., 0..8 initially)
 154:test3.c       ****             fprintf(com0out, "%c ", board[i][j]);
 989               		.loc 1 154 13 view .LVU211
 990 04a4 1015      		move.b (%a5),%d0
 991 04a6 4880      		ext.w %d0
 992 04a8 3040      		move.w %d0,%a0
68K GAS  /tmp/ccMFIMKI.s 			page 25


 993 04aa 2F08      		move.l %a0,-(%sp)
 994               		.cfi_def_cfa_offset 32
 995 04ac 4879 0000 		pea .LC11
 995      0000 
 996               		.cfi_def_cfa_offset 36
 997 04b2 2F39 0000 		move.l com0out,-(%sp)
 997      0000 
 998               		.cfi_def_cfa_offset 40
 999 04b8 4E93      		jsr (%a3)
 1000               	.LVL80:
 155:test3.c       ****             fprintf(com1out, "%c ", board[i][j]);
 1001               		.loc 1 155 13 view .LVU212
 1002 04ba 244D      		move.l %a5,%a2
 1003 04bc 101A      		move.b (%a2)+,%d0
 1004 04be 4880      		ext.w %d0
 1005 04c0 3040      		move.w %d0,%a0
 1006 04c2 2F08      		move.l %a0,-(%sp)
 1007               		.cfi_def_cfa_offset 44
 1008 04c4 4879 0000 		pea .LC11
 1008      0000 
 1009               		.cfi_def_cfa_offset 48
 1010 04ca 2F39 0000 		move.l com1out,-(%sp)
 1010      0000 
 1011               		.cfi_def_cfa_offset 52
 1012 04d0 4E93      		jsr (%a3)
 1013               	.LVL81:
 156:test3.c       **** 
 157:test3.c       ****             if (j < 2) {
 1014               		.loc 1 157 13 view .LVU213
 1015 04d2 4FEF 0018 		lea (24,%sp),%sp
 1016               		.cfi_def_cfa_offset 28
 155:test3.c       ****             fprintf(com1out, "%c ", board[i][j]);
 1017               		.loc 1 155 13 is_stmt 0 view .LVU214
 1018 04d6 7402      		moveq #2,%d2
 1019               	.LVL82:
 1020               	.L59:
 158:test3.c       ****                 fprintf(com0out, "| ");
 1021               		.loc 1 158 17 is_stmt 1 view .LVU215
 1022 04d8 2F39 0000 		move.l com0out,-(%sp)
 1022      0000 
 1023               		.cfi_def_cfa_offset 32
 1024 04de 4878 0002 		pea 2.w
 1025               		.cfi_def_cfa_offset 36
 1026 04e2 4878 0001 		pea 1.w
 1027               		.cfi_def_cfa_offset 40
 1028 04e6 4879 0000 		pea .LC10
 1028      0000 
 1029               		.cfi_def_cfa_offset 44
 1030 04ec 4E94      		jsr (%a4)
 1031               	.LVL83:
 159:test3.c       ****                 fprintf(com1out, "| ");
 1032               		.loc 1 159 17 view .LVU216
 1033 04ee 2F39 0000 		move.l com1out,-(%sp)
 1033      0000 
 1034               		.cfi_def_cfa_offset 48
 1035 04f4 4878 0002 		pea 2.w
 1036               		.cfi_def_cfa_offset 52
68K GAS  /tmp/ccMFIMKI.s 			page 26


 1037 04f8 4878 0001 		pea 1.w
 1038               		.cfi_def_cfa_offset 56
 1039 04fc 4879 0000 		pea .LC10
 1039      0000 
 1040               		.cfi_def_cfa_offset 60
 1041 0502 4E94      		jsr (%a4)
 1042               	.LVL84:
 152:test3.c       ****             // Print the current cell (e.g., 0..8 initially)
 1043               		.loc 1 152 33 view .LVU217
 152:test3.c       ****             // Print the current cell (e.g., 0..8 initially)
 1044               		.loc 1 152 27 view .LVU218
 154:test3.c       ****             fprintf(com1out, "%c ", board[i][j]);
 1045               		.loc 1 154 13 view .LVU219
 1046 0504 4FEF 0020 		lea (32,%sp),%sp
 1047               		.cfi_def_cfa_offset 28
 1048 0508 1012      		move.b (%a2),%d0
 1049 050a 4880      		ext.w %d0
 1050 050c 3040      		move.w %d0,%a0
 1051 050e 2F08      		move.l %a0,-(%sp)
 1052               		.cfi_def_cfa_offset 32
 1053 0510 4879 0000 		pea .LC11
 1053      0000 
 1054               		.cfi_def_cfa_offset 36
 1055 0516 2F39 0000 		move.l com0out,-(%sp)
 1055      0000 
 1056               		.cfi_def_cfa_offset 40
 1057 051c 4E93      		jsr (%a3)
 1058               	.LVL85:
 155:test3.c       **** 
 1059               		.loc 1 155 13 view .LVU220
 1060 051e 101A      		move.b (%a2)+,%d0
 1061 0520 4880      		ext.w %d0
 1062 0522 3040      		move.w %d0,%a0
 1063 0524 2F08      		move.l %a0,-(%sp)
 1064               		.cfi_def_cfa_offset 44
 1065 0526 4879 0000 		pea .LC11
 1065      0000 
 1066               		.cfi_def_cfa_offset 48
 1067 052c 2F39 0000 		move.l com1out,-(%sp)
 1067      0000 
 1068               		.cfi_def_cfa_offset 52
 1069 0532 4E93      		jsr (%a3)
 1070               	.LVL86:
 157:test3.c       ****                 fprintf(com0out, "| ");
 1071               		.loc 1 157 13 view .LVU221
 157:test3.c       ****                 fprintf(com0out, "| ");
 1072               		.loc 1 157 16 is_stmt 0 view .LVU222
 1073 0534 4FEF 0018 		lea (24,%sp),%sp
 1074               		.cfi_def_cfa_offset 28
 1075 0538 5382      		subq.l #1,%d2
 1076 053a 6600 0084 		jne .L67
 157:test3.c       ****                 fprintf(com0out, "| ");
 1077               		.loc 1 157 16 view .LVU223
 1078               	.LBE35:
 160:test3.c       ****             }
 161:test3.c       ****         }
 162:test3.c       ****         fprintf(com0out, "\n");
68K GAS  /tmp/ccMFIMKI.s 			page 27


 1079               		.loc 1 162 9 is_stmt 1 view .LVU224
 1080 053e 2F39 0000 		move.l com0out,-(%sp)
 1080      0000 
 1081               		.cfi_def_cfa_offset 32
 1082 0544 4878 000A 		pea 10.w
 1083               		.cfi_def_cfa_offset 36
 1084 0548 4E96      		jsr (%a6)
 1085               	.LVL87:
 163:test3.c       ****         fprintf(com1out, "\n");
 1086               		.loc 1 163 9 view .LVU225
 1087 054a 2F39 0000 		move.l com1out,-(%sp)
 1087      0000 
 1088               		.cfi_def_cfa_offset 40
 1089 0550 4878 000A 		pea 10.w
 1090               		.cfi_def_cfa_offset 44
 1091 0554 4E96      		jsr (%a6)
 1092               	.LVL88:
 164:test3.c       **** 
 165:test3.c       ****         if (i < 2) {
 1093               		.loc 1 165 9 view .LVU226
 1094               		.loc 1 165 12 is_stmt 0 view .LVU227
 1095 0556 4FEF 0010 		lea (16,%sp),%sp
 1096               		.cfi_def_cfa_offset 28
 1097 055a BBFC 0000 		cmp.l #board+6,%a5
 1097      0000 
 1098 0560 673C      		jeq .L58
 166:test3.c       ****             // Print separator between rows
 167:test3.c       ****             fprintf(com0out, "---------\n");
 1099               		.loc 1 167 13 is_stmt 1 view .LVU228
 1100 0562 2F39 0000 		move.l com0out,-(%sp)
 1100      0000 
 1101               		.cfi_def_cfa_offset 32
 1102 0568 4878 000A 		pea 10.w
 1103               		.cfi_def_cfa_offset 36
 1104 056c 4878 0001 		pea 1.w
 1105               		.cfi_def_cfa_offset 40
 1106 0570 4879 0000 		pea .LC12
 1106      0000 
 1107               		.cfi_def_cfa_offset 44
 1108 0576 4E94      		jsr (%a4)
 1109               	.LVL89:
 168:test3.c       ****             fprintf(com1out, "---------\n");
 1110               		.loc 1 168 13 view .LVU229
 1111 0578 2F39 0000 		move.l com1out,-(%sp)
 1111      0000 
 1112               		.cfi_def_cfa_offset 48
 1113 057e 4878 000A 		pea 10.w
 1114               		.cfi_def_cfa_offset 52
 1115 0582 4878 0001 		pea 1.w
 1116               		.cfi_def_cfa_offset 56
 1117 0586 4879 0000 		pea .LC12
 1117      0000 
 1118               		.cfi_def_cfa_offset 60
 1119 058c 4E94      		jsr (%a4)
 1120               	.LVL90:
 151:test3.c       ****         for (int j = 0; j < 3; j++) {
 1121               		.loc 1 151 29 view .LVU230
68K GAS  /tmp/ccMFIMKI.s 			page 28


 151:test3.c       ****         for (int j = 0; j < 3; j++) {
 1122               		.loc 1 151 23 view .LVU231
 1123 058e 568D      		addq.l #3,%a5
 1124 0590 4FEF 0020 		lea (32,%sp),%sp
 1125               		.cfi_def_cfa_offset 28
 1126 0594 BBFC 0000 		cmp.l #board+9,%a5
 1126      0000 
 1127 059a 6600 FF08 		jne .L56
 1128               	.L58:
 1129               	.LBE34:
 169:test3.c       ****         }
 170:test3.c       ****     }
 171:test3.c       **** 
 172:test3.c       ****     fprintf(com0out, "\n");
 1130               		.loc 1 172 5 view .LVU232
 1131 059e 2F39 0000 		move.l com0out,-(%sp)
 1131      0000 
 1132               		.cfi_def_cfa_offset 32
 1133 05a4 4878 000A 		pea 10.w
 1134               		.cfi_def_cfa_offset 36
 1135 05a8 4E96      		jsr (%a6)
 1136               	.LVL91:
 173:test3.c       ****     fprintf(com1out, "\n");
 1137               		.loc 1 173 5 view .LVU233
 1138 05aa 2F39 0000 		move.l com1out,-(%sp)
 1138      0000 
 1139               		.cfi_def_cfa_offset 40
 1140 05b0 4878 000A 		pea 10.w
 1141               		.cfi_def_cfa_offset 44
 1142 05b4 4E96      		jsr (%a6)
 1143               	.LVL92:
 174:test3.c       **** }
 1144               		.loc 1 174 1 is_stmt 0 view .LVU234
 1145 05b6 4FEF 0010 		lea (16,%sp),%sp
 1146               		.cfi_def_cfa_offset 28
 1147 05ba 4CDF 7C04 		movem.l (%sp)+,#31748
 1148 05be 4E75      		rts
 1149               	.L67:
 1150               	.LBB37:
 1151               	.LBB36:
 1152 05c0 7401      		moveq #1,%d2
 1153 05c2 6000 FF14 		jra .L59
 1154               	.LBE36:
 1155               	.LBE37:
 1156               		.cfi_endproc
 1157               	.LFE10:
 1158               		.size	init_board, .-init_board
 1159               		.align	2
 1160               		.globl	binary_board
 1161               		.type	binary_board, @function
 1162               	binary_board:
 1163               	.LVL93:
 1164               	.LFB11:
 175:test3.c       **** 
 176:test3.c       **** void binary_board(char board[3][3],char mark){//changes the X/O to 0/1
 1165               		.loc 1 176 46 is_stmt 1 view -0
 1166               		.cfi_startproc
68K GAS  /tmp/ccMFIMKI.s 			page 29


 1167               		.loc 1 176 46 is_stmt 0 view .LVU236
 1168 05c6 102F 000B 		move.b 11(%sp),%d0
 177:test3.c       **** 	for (int i = 0; i < 3;i++){
 1169               		.loc 1 177 2 is_stmt 1 view .LVU237
 1170               	.LBB40:
 1171               		.loc 1 177 7 view .LVU238
 1172               	.LVL94:
 1173               		.loc 1 177 20 view .LVU239
 1174 05ca 206F 0004 		move.l 4(%sp),%a0
 1175 05ce 43F9 0000 		lea b_board,%a1
 1175      0000 
 1176               	.LVL95:
 1177               	.L69:
 1178               	.LBB41:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1179               		.loc 1 178 21 view .LVU240
 179:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1180               		.loc 1 179 4 view .LVU241
 1181               		.loc 1 179 6 is_stmt 0 view .LVU242
 1182 05d4 B010      		cmp.b (%a0),%d0
 1183 05d6 6740      		jeq .L77
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1184               		.loc 1 178 26 is_stmt 1 view .LVU243
 1185               	.LVL96:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1186               		.loc 1 178 21 view .LVU244
 1187               		.loc 1 179 4 view .LVU245
 1188               		.loc 1 179 6 is_stmt 0 view .LVU246
 1189 05d8 B028 0001 		cmp.b 1(%a0),%d0
 1190 05dc 672C      		jeq .L78
 1191               	.L72:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1192               		.loc 1 178 26 is_stmt 1 view .LVU247
 1193               	.LVL97:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1194               		.loc 1 178 21 view .LVU248
 1195               		.loc 1 179 4 view .LVU249
 1196               		.loc 1 179 6 is_stmt 0 view .LVU250
 1197 05de B028 0002 		cmp.b 2(%a0),%d0
 1198 05e2 6710      		jeq .L79
 1199               	.L74:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1200               		.loc 1 178 26 is_stmt 1 discriminator 2 view .LVU251
 1201               	.LVL98:
 178:test3.c       **** 		for (int j = 0; j < 3;j++){
 1202               		.loc 1 178 21 discriminator 2 view .LVU252
 1203               	.LBE41:
 177:test3.c       **** 	for (int i = 0; i < 3;i++){
 1204               		.loc 1 177 25 discriminator 2 view .LVU253
 177:test3.c       **** 	for (int i = 0; i < 3;i++){
 1205               		.loc 1 177 20 discriminator 2 view .LVU254
 1206 05e4 5688      		addq.l #3,%a0
 1207 05e6 43E9 000C 		lea (12,%a1),%a1
 1208 05ea B3FC 0000 		cmp.l #b_board+36,%a1
 1208      0000 
 1209 05f0 66E2      		jne .L69
 1210               	.L68:
68K GAS  /tmp/ccMFIMKI.s 			page 30


 1211               	.LBE40:
 180:test3.c       **** 				b_board[i][j] = 1;
 181:test3.c       **** 			}
 182:test3.c       **** 		}
 183:test3.c       **** 	}
 184:test3.c       **** }
 1212               		.loc 1 184 1 is_stmt 0 view .LVU255
 1213 05f2 4E75      		rts
 1214               	.LVL99:
 1215               	.L79:
 1216               	.LBB44:
 1217               	.LBB42:
 180:test3.c       **** 				b_board[i][j] = 1;
 1218               		.loc 1 180 5 is_stmt 1 view .LVU256
 180:test3.c       **** 				b_board[i][j] = 1;
 1219               		.loc 1 180 19 is_stmt 0 view .LVU257
 1220 05f4 7201      		moveq #1,%d1
 1221 05f6 2341 0008 		move.l %d1,8(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1222               		.loc 1 178 26 is_stmt 1 view .LVU258
 1223               	.LVL100:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1224               		.loc 1 178 21 view .LVU259
 1225               	.LBE42:
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1226               		.loc 1 177 25 view .LVU260
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1227               		.loc 1 177 20 view .LVU261
 1228 05fa 5688      		addq.l #3,%a0
 1229 05fc 43E9 000C 		lea (12,%a1),%a1
 1230 0600 B3FC 0000 		cmp.l #b_board+36,%a1
 1230      0000 
 1231 0606 66CC      		jne .L69
 1232 0608 60E8      		jra .L68
 1233               	.LVL101:
 1234               	.L78:
 1235               	.LBB43:
 180:test3.c       **** 				b_board[i][j] = 1;
 1236               		.loc 1 180 5 view .LVU262
 180:test3.c       **** 				b_board[i][j] = 1;
 1237               		.loc 1 180 19 is_stmt 0 view .LVU263
 1238 060a 7201      		moveq #1,%d1
 1239 060c 2341 0004 		move.l %d1,4(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1240               		.loc 1 178 26 is_stmt 1 view .LVU264
 1241               	.LVL102:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1242               		.loc 1 178 21 view .LVU265
 179:test3.c       **** 				b_board[i][j] = 1;
 1243               		.loc 1 179 4 view .LVU266
 179:test3.c       **** 				b_board[i][j] = 1;
 1244               		.loc 1 179 6 is_stmt 0 view .LVU267
 1245 0610 B028 0002 		cmp.b 2(%a0),%d0
 1246 0614 66CE      		jne .L74
 1247 0616 60DC      		jra .L79
 1248               	.LVL103:
 1249               	.L77:
68K GAS  /tmp/ccMFIMKI.s 			page 31


 180:test3.c       **** 			}
 1250               		.loc 1 180 5 is_stmt 1 view .LVU268
 180:test3.c       **** 			}
 1251               		.loc 1 180 19 is_stmt 0 view .LVU269
 1252 0618 7201      		moveq #1,%d1
 1253 061a 2281      		move.l %d1,(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1254               		.loc 1 178 26 is_stmt 1 view .LVU270
 1255               	.LVL104:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1256               		.loc 1 178 21 view .LVU271
 179:test3.c       **** 				b_board[i][j] = 1;
 1257               		.loc 1 179 4 view .LVU272
 179:test3.c       **** 				b_board[i][j] = 1;
 1258               		.loc 1 179 6 is_stmt 0 view .LVU273
 1259 061c B028 0001 		cmp.b 1(%a0),%d0
 1260 0620 66BC      		jne .L72
 1261 0622 60E6      		jra .L78
 1262               	.LBE43:
 1263               	.LBE44:
 1264               		.cfi_endproc
 1265               	.LFE11:
 1266               		.size	binary_board, .-binary_board
 1267               		.align	2
 1268               		.globl	check_win
 1269               		.type	check_win, @function
 1270               	check_win:
 1271               	.LVL105:
 1272               	.LFB12:
 185:test3.c       **** //we check after changing the X/O to 1/0 depending on who's playing
 186:test3.c       **** int check_win(char board[3][3],int in,char mark){//in is the last input cell [0..8]
 1273               		.loc 1 186 49 is_stmt 1 view -0
 1274               		.cfi_startproc
 1275               		.loc 1 186 49 is_stmt 0 view .LVU275
 1276 0624 48E7 3C3C 		movem.l #15420,-(%sp)
 1277               		.cfi_def_cfa_offset 36
 1278               		.cfi_offset 2, -36
 1279               		.cfi_offset 3, -32
 1280               		.cfi_offset 4, -28
 1281               		.cfi_offset 5, -24
 1282               		.cfi_offset 10, -20
 1283               		.cfi_offset 11, -16
 1284               		.cfi_offset 12, -12
 1285               		.cfi_offset 13, -8
 1286 0628 262F 0028 		move.l 40(%sp),%d3
 1287 062c 142F 002F 		move.b 47(%sp),%d2
 187:test3.c       **** 	int row= in/3;
 1288               		.loc 1 187 2 is_stmt 1 view .LVU276
 1289               		.loc 1 187 6 is_stmt 0 view .LVU277
 1290 0630 4878 0003 		pea 3.w
 1291               		.cfi_def_cfa_offset 40
 1292 0634 2F03      		move.l %d3,-(%sp)
 1293               		.cfi_def_cfa_offset 44
 1294 0636 4EB9 0000 		jsr __divsi3
 1294      0000 
 1295               	.LVL106:
 1296 063c 508F      		addq.l #8,%sp
68K GAS  /tmp/ccMFIMKI.s 			page 32


 1297               		.cfi_def_cfa_offset 36
 1298 063e 2800      		move.l %d0,%d4
 1299               	.LVL107:
 188:test3.c       **** 	int col = in % 3;
 1300               		.loc 1 188 2 is_stmt 1 view .LVU278
 1301               		.loc 1 188 6 is_stmt 0 view .LVU279
 1302 0640 4878 0003 		pea 3.w
 1303               		.cfi_def_cfa_offset 40
 1304 0644 2F03      		move.l %d3,-(%sp)
 1305               		.cfi_def_cfa_offset 44
 1306 0646 4EB9 0000 		jsr __modsi3
 1306      0000 
 1307               	.LVL108:
 1308               		.loc 1 188 6 view .LVU280
 1309 064c 508F      		addq.l #8,%sp
 1310               		.cfi_def_cfa_offset 36
 1311 064e 2440      		move.l %d0,%a2
 1312               	.LVL109:
 189:test3.c       **** 	int win = 1;//if equals 3 means win
 1313               		.loc 1 189 2 is_stmt 1 view .LVU281
 190:test3.c       **** 	binary_board(board, mark);
 1314               		.loc 1 190 2 view .LVU282
 1315               	.LBB53:
 1316               	.LBI53:
 176:test3.c       **** 	for (int i = 0; i < 3;i++){
 1317               		.loc 1 176 6 view .LVU283
 1318               	.LBB54:
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1319               		.loc 1 177 20 view .LVU284
 1320 0650 206F 0024 		move.l 36(%sp),%a0
 1321 0654 47F9 0000 		lea b_board,%a3
 1321      0000 
 1322 065a 224B      		move.l %a3,%a1
 1323               	.LVL110:
 1324               	.L81:
 1325               	.LBB55:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1326               		.loc 1 178 21 view .LVU285
 179:test3.c       **** 				b_board[i][j] = 1;
 1327               		.loc 1 179 4 view .LVU286
 179:test3.c       **** 				b_board[i][j] = 1;
 1328               		.loc 1 179 6 is_stmt 0 view .LVU287
 1329 065c B410      		cmp.b (%a0),%d2
 1330 065e 6700 0106 		jeq .L103
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1331               		.loc 1 178 26 is_stmt 1 view .LVU288
 1332               	.LVL111:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1333               		.loc 1 178 21 view .LVU289
 179:test3.c       **** 				b_board[i][j] = 1;
 1334               		.loc 1 179 4 view .LVU290
 179:test3.c       **** 				b_board[i][j] = 1;
 1335               		.loc 1 179 6 is_stmt 0 view .LVU291
 1336 0662 B428 0001 		cmp.b 1(%a0),%d2
 1337 0666 6700 00EE 		jeq .L104
 1338               	.L84:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
68K GAS  /tmp/ccMFIMKI.s 			page 33


 1339               		.loc 1 178 26 is_stmt 1 view .LVU292
 1340               	.LVL112:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1341               		.loc 1 178 21 view .LVU293
 179:test3.c       **** 				b_board[i][j] = 1;
 1342               		.loc 1 179 4 view .LVU294
 179:test3.c       **** 				b_board[i][j] = 1;
 1343               		.loc 1 179 6 is_stmt 0 view .LVU295
 1344 066a B428 0002 		cmp.b 2(%a0),%d2
 1345 066e 6700 00CC 		jeq .L105
 1346               	.L86:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1347               		.loc 1 178 26 is_stmt 1 view .LVU296
 1348               	.LVL113:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1349               		.loc 1 178 21 view .LVU297
 1350               	.LBE55:
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1351               		.loc 1 177 25 view .LVU298
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1352               		.loc 1 177 20 view .LVU299
 1353 0672 5688      		addq.l #3,%a0
 1354 0674 43E9 000C 		lea (12,%a1),%a1
 1355 0678 B3FC 0000 		cmp.l #b_board+36,%a1
 1355      0000 
 1356 067e 66DC      		jne .L81
 1357               	.L82:
 1358 0680 2044      		move.l %d4,%a0
 1359 0682 D1C4      		add.l %d4,%a0
 1360 0684 D1C4      		add.l %d4,%a0
 1361 0686 287C 3FFF 		move.l #1073741821,%a4
 1361      FFFD 
 1362 068c D9CA      		add.l %a2,%a4
 1363 068e D9C8      		add.l %a0,%a4
 1364 0690 D9CC      		add.l %a4,%a4
 1365 0692 D9CC      		add.l %a4,%a4
 1366 0694 D9FC 0000 		add.l #b_board,%a4
 1366      0000 
 1367 069a 4BF2 8803 		lea 3(%a2,%a0.l),%a5
 1368 069e DBCD      		add.l %a5,%a5
 1369 06a0 DBCD      		add.l %a5,%a5
 1370 06a2 DBFC 0000 		add.l #b_board,%a5
 1370      0000 
 1371 06a8 227C 3FFF 		move.l #1073741823,%a1
 1371      FFFF 
 1372 06ae D3CA      		add.l %a2,%a1
 1373 06b0 D3C8      		add.l %a0,%a1
 1374 06b2 D3C9      		add.l %a1,%a1
 1375 06b4 D3C9      		add.l %a1,%a1
 1376 06b6 D3FC 0000 		add.l #b_board,%a1
 1376      0000 
 1377 06bc 41F2 8800 		lea (%a2,%a0.l),%a0
 1378 06c0 D1C8      		add.l %a0,%a0
 1379 06c2 D1C8      		add.l %a0,%a0
 1380 06c4 D1FC 0000 		add.l #b_board,%a0
 1380      0000 
 1381               	.LBE54:
68K GAS  /tmp/ccMFIMKI.s 			page 34


 1382               	.LBE53:
 1383               	.LBB59:
 191:test3.c       **** 	// this for loop can detect if there's a win vertically or horizontally
 192:test3.c       **** 	for (int i = 1; i < 3; i++)
 1384               		.loc 1 192 11 is_stmt 0 view .LVU300
 1385 06ca 7201      		moveq #1,%d1
 1386               	.LBE59:
 189:test3.c       **** 	binary_board(board, mark);
 1387               		.loc 1 189 6 view .LVU301
 1388 06cc 7001      		moveq #1,%d0
 1389               	.LVL114:
 1390               	.L91:
 1391               	.LBB60:
 193:test3.c       **** 	{
 194:test3.c       **** 		if (col+i-1 < 2)
 1392               		.loc 1 194 3 is_stmt 1 view .LVU302
 1393               		.loc 1 194 6 is_stmt 0 view .LVU303
 1394 06ce 240A      		move.l %a2,%d2
 1395 06d0 D481      		add.l %d1,%d2
 1396 06d2 7A02      		moveq #2,%d5
 1397 06d4 BA82      		cmp.l %d2,%d5
 1398 06d6 6D04      		jlt .L87
 195:test3.c       **** 		{
 196:test3.c       **** 			win = +b_board[row][col + i];
 1399               		.loc 1 196 4 is_stmt 1 view .LVU304
 1400               		.loc 1 196 8 is_stmt 0 view .LVU305
 1401 06d8 2028 0004 		move.l 4(%a0),%d0
 1402               	.LVL115:
 1403               	.L87:
 197:test3.c       **** 		}
 198:test3.c       **** 		if (col-i+1>0){
 1404               		.loc 1 198 3 is_stmt 1 view .LVU306
 1405               		.loc 1 198 6 is_stmt 0 view .LVU307
 1406 06dc 240A      		move.l %a2,%d2
 1407 06de 9481      		sub.l %d1,%d2
 1408 06e0 6B02      		jmi .L88
 199:test3.c       **** 			win = +b_board[row][col - i];
 1409               		.loc 1 199 4 is_stmt 1 view .LVU308
 1410               		.loc 1 199 8 is_stmt 0 view .LVU309
 1411 06e2 2011      		move.l (%a1),%d0
 1412               	.LVL116:
 1413               	.L88:
 200:test3.c       **** 		}
 201:test3.c       **** 		if(row+i-1<2){
 1414               		.loc 1 201 3 is_stmt 1 view .LVU310
 1415               		.loc 1 201 5 is_stmt 0 view .LVU311
 1416 06e4 2404      		move.l %d4,%d2
 1417 06e6 D481      		add.l %d1,%d2
 1418 06e8 7A02      		moveq #2,%d5
 1419 06ea BA82      		cmp.l %d2,%d5
 1420 06ec 6D02      		jlt .L89
 202:test3.c       **** 			win = +b_board[row+i][col];
 1421               		.loc 1 202 4 is_stmt 1 view .LVU312
 1422               		.loc 1 202 8 is_stmt 0 view .LVU313
 1423 06ee 2015      		move.l (%a5),%d0
 1424               	.LVL117:
 1425               	.L89:
68K GAS  /tmp/ccMFIMKI.s 			page 35


 203:test3.c       **** 		}
 204:test3.c       **** 		if(row-i+1>0){
 1426               		.loc 1 204 3 is_stmt 1 view .LVU314
 1427               		.loc 1 204 5 is_stmt 0 view .LVU315
 1428 06f0 2404      		move.l %d4,%d2
 1429 06f2 9481      		sub.l %d1,%d2
 1430 06f4 6B02      		jmi .L90
 205:test3.c       **** 			win = +b_board[row-i][col];
 1431               		.loc 1 205 4 is_stmt 1 view .LVU316
 1432               		.loc 1 205 8 is_stmt 0 view .LVU317
 1433 06f6 2014      		move.l (%a4),%d0
 1434               	.LVL118:
 1435               	.L90:
 192:test3.c       **** 	{
 1436               		.loc 1 192 26 is_stmt 1 discriminator 2 view .LVU318
 192:test3.c       **** 	{
 1437               		.loc 1 192 20 discriminator 2 view .LVU319
 1438 06f8 49EC FFF4 		lea (-12,%a4),%a4
 1439 06fc 4BED 000C 		lea (12,%a5),%a5
 1440 0700 5989      		subq.l #4,%a1
 1441 0702 5888      		addq.l #4,%a0
 1442 0704 5581      		subq.l #2,%d1
 1443               	.LVL119:
 192:test3.c       **** 	{
 1444               		.loc 1 192 20 is_stmt 0 discriminator 2 view .LVU320
 1445 0706 666C      		jne .L96
 192:test3.c       **** 	{
 1446               		.loc 1 192 20 discriminator 2 view .LVU321
 1447               	.LBE60:
 206:test3.c       **** 		}
 207:test3.c       **** 	}
 208:test3.c       **** 	if(win==3)
 1448               		.loc 1 208 2 is_stmt 1 view .LVU322
 1449               		.loc 1 208 4 is_stmt 0 view .LVU323
 1450 0708 7A03      		moveq #3,%d5
 1451 070a BA80      		cmp.l %d0,%d5
 1452 070c 6700 00BA 		jeq .L98
 209:test3.c       **** 		return 1;
 210:test3.c       **** 
 211:test3.c       **** 	if (in == 4)
 1453               		.loc 1 211 2 is_stmt 1 view .LVU324
 1454               		.loc 1 211 5 is_stmt 0 view .LVU325
 1455 0710 7004      		moveq #4,%d0
 1456               	.LVL120:
 1457               		.loc 1 211 5 view .LVU326
 1458 0712 B083      		cmp.l %d3,%d0
 1459 0714 6700 0092 		jeq .L106
 212:test3.c       **** 	{
 213:test3.c       **** 		int win1 = b_board[0][0] + b_board[1][1] + b_board[2][2];
 214:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 215:test3.c       **** 		if(win1==3||win2==3)
 216:test3.c       **** 			return 1;
 217:test3.c       **** 	} else if(in%4==0){
 1460               		.loc 1 217 9 is_stmt 1 view .LVU327
 1461               		.loc 1 217 16 is_stmt 0 view .LVU328
 1462 0718 7003      		moveq #3,%d0
 1463 071a C083      		and.l %d3,%d0
68K GAS  /tmp/ccMFIMKI.s 			page 36


 1464               		.loc 1 217 11 view .LVU329
 1465 071c 665C      		jne .L94
 1466               	.LBB61:
 218:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1467               		.loc 1 218 3 is_stmt 1 view .LVU330
 1468               	.LVL121:
 219:test3.c       **** 		if (win==3)
 1469               		.loc 1 219 3 view .LVU331
 218:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1470               		.loc 1 218 25 is_stmt 0 view .LVU332
 1471 071e 2013      		move.l (%a3),%d0
 1472 0720 D0AB 0010 		add.l 16(%a3),%d0
 218:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1473               		.loc 1 218 7 view .LVU333
 1474 0724 D0B9 0000 		add.l b_board+32,%d0
 1474      0000 
 1475               		.loc 1 219 6 view .LVU334
 1476 072a 7203      		moveq #3,%d1
 1477               	.LVL122:
 1478               		.loc 1 219 6 view .LVU335
 1479 072c B280      		cmp.l %d0,%d1
 1480 072e 57C0      		seq %d0
 1481 0730 4880      		ext.w %d0
 1482 0732 48C0      		ext.l %d0
 1483 0734 4480      		neg.l %d0
 1484               	.LBE61:
 220:test3.c       **** 			return 1;
 221:test3.c       **** 	}else if(in%4==2){
 222:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
 223:test3.c       **** 		if(win==3)
 224:test3.c       **** 			return 1;
 225:test3.c       **** 	}
 226:test3.c       **** 	else
 227:test3.c       **** 		return 0;
 228:test3.c       **** 	return 0;
 229:test3.c       **** }
 1485               		.loc 1 229 1 view .LVU336
 1486 0736 4CDF 3C3C 		movem.l (%sp)+,#15420
 1487               	.LVL123:
 1488               		.loc 1 229 1 view .LVU337
 1489 073a 4E75      		rts
 1490               	.LVL124:
 1491               	.L105:
 1492               	.LBB62:
 1493               	.LBB58:
 1494               	.LBB56:
 180:test3.c       **** 			}
 1495               		.loc 1 180 5 is_stmt 1 view .LVU338
 180:test3.c       **** 			}
 1496               		.loc 1 180 19 is_stmt 0 view .LVU339
 1497 073c 7001      		moveq #1,%d0
 1498 073e 2340 0008 		move.l %d0,8(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1499               		.loc 1 178 26 is_stmt 1 view .LVU340
 1500               	.LVL125:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1501               		.loc 1 178 21 view .LVU341
68K GAS  /tmp/ccMFIMKI.s 			page 37


 1502               	.LBE56:
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1503               		.loc 1 177 25 view .LVU342
 177:test3.c       **** 		for (int j = 0; j < 3;j++){
 1504               		.loc 1 177 20 view .LVU343
 1505 0742 5688      		addq.l #3,%a0
 1506 0744 43E9 000C 		lea (12,%a1),%a1
 1507 0748 B3FC 0000 		cmp.l #b_board+36,%a1
 1507      0000 
 1508 074e 6600 FF0C 		jne .L81
 1509 0752 6000 FF2C 		jra .L82
 1510               	.LVL126:
 1511               	.L104:
 1512               	.LBB57:
 180:test3.c       **** 			}
 1513               		.loc 1 180 5 view .LVU344
 180:test3.c       **** 			}
 1514               		.loc 1 180 19 is_stmt 0 view .LVU345
 1515 0756 7A01      		moveq #1,%d5
 1516 0758 2345 0004 		move.l %d5,4(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1517               		.loc 1 178 26 is_stmt 1 view .LVU346
 1518               	.LVL127:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1519               		.loc 1 178 21 view .LVU347
 179:test3.c       **** 				b_board[i][j] = 1;
 1520               		.loc 1 179 4 view .LVU348
 179:test3.c       **** 				b_board[i][j] = 1;
 1521               		.loc 1 179 6 is_stmt 0 view .LVU349
 1522 075c B428 0002 		cmp.b 2(%a0),%d2
 1523 0760 6600 FF10 		jne .L86
 1524 0764 60D6      		jra .L105
 1525               	.LVL128:
 1526               	.L103:
 180:test3.c       **** 			}
 1527               		.loc 1 180 5 is_stmt 1 view .LVU350
 180:test3.c       **** 			}
 1528               		.loc 1 180 19 is_stmt 0 view .LVU351
 1529 0766 7201      		moveq #1,%d1
 1530 0768 2281      		move.l %d1,(%a1)
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1531               		.loc 1 178 26 is_stmt 1 view .LVU352
 1532               	.LVL129:
 178:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1533               		.loc 1 178 21 view .LVU353
 179:test3.c       **** 				b_board[i][j] = 1;
 1534               		.loc 1 179 4 view .LVU354
 179:test3.c       **** 				b_board[i][j] = 1;
 1535               		.loc 1 179 6 is_stmt 0 view .LVU355
 1536 076a B428 0001 		cmp.b 1(%a0),%d2
 1537 076e 6600 FEFA 		jne .L84
 1538 0772 60E2      		jra .L104
 1539               	.LVL130:
 1540               	.L96:
 179:test3.c       **** 				b_board[i][j] = 1;
 1541               		.loc 1 179 6 view .LVU356
 1542               	.LBE57:
68K GAS  /tmp/ccMFIMKI.s 			page 38


 1543               	.LBE58:
 1544               	.LBE62:
 1545               	.LBB63:
 1546 0774 7202      		moveq #2,%d1
 1547               	.LVL131:
 179:test3.c       **** 				b_board[i][j] = 1;
 1548               		.loc 1 179 6 view .LVU357
 1549 0776 6000 FF56 		jra .L91
 1550               	.LVL132:
 1551               	.L94:
 179:test3.c       **** 				b_board[i][j] = 1;
 1552               		.loc 1 179 6 view .LVU358
 1553               	.LBE63:
 221:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
 1554               		.loc 1 221 8 is_stmt 1 view .LVU359
 1555               	.LBB64:
 1556 077a 0283 8000 		and.l #-2147483645,%d3
 1556      0003 
 1557               	.LBE64:
 221:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
 1558               		.loc 1 221 10 is_stmt 0 view .LVU360
 1559 0780 5583      		subq.l #2,%d3
 1560 0782 664C      		jne .L99
 1561               	.LBB65:
 222:test3.c       **** 		if(win==3)
 1562               		.loc 1 222 3 is_stmt 1 view .LVU361
 1563               	.LVL133:
 223:test3.c       **** 			return 1;
 1564               		.loc 1 223 3 view .LVU362
 222:test3.c       **** 		if(win==3)
 1565               		.loc 1 222 25 is_stmt 0 view .LVU363
 1566 0784 2039 0000 		move.l b_board+8,%d0
 1566      0000 
 1567 078a D0B9 0000 		add.l b_board+16,%d0
 1567      0000 
 222:test3.c       **** 		if(win==3)
 1568               		.loc 1 222 7 view .LVU364
 1569 0790 D0B9 0000 		add.l b_board+24,%d0
 1569      0000 
 223:test3.c       **** 			return 1;
 1570               		.loc 1 223 5 view .LVU365
 1571 0796 7A03      		moveq #3,%d5
 1572               	.LVL134:
 1573               	.L100:
 223:test3.c       **** 			return 1;
 1574               		.loc 1 223 5 view .LVU366
 1575 0798 BA80      		cmp.l %d0,%d5
 1576 079a 57C0      		seq %d0
 1577 079c 4880      		ext.w %d0
 1578 079e 48C0      		ext.l %d0
 1579 07a0 4480      		neg.l %d0
 1580               	.LBE65:
 1581               		.loc 1 229 1 view .LVU367
 1582 07a2 4CDF 3C3C 		movem.l (%sp)+,#15420
 1583               	.LVL135:
 1584               		.loc 1 229 1 view .LVU368
 1585 07a6 4E75      		rts
68K GAS  /tmp/ccMFIMKI.s 			page 39


 1586               	.LVL136:
 1587               	.L106:
 1588               	.LBB66:
 213:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1589               		.loc 1 213 3 is_stmt 1 view .LVU369
 213:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1590               		.loc 1 213 40 is_stmt 0 view .LVU370
 1591 07a8 2239 0000 		move.l b_board+16,%d1
 1591      0000 
 1592               	.LVL137:
 214:test3.c       **** 		if(win1==3||win2==3)
 1593               		.loc 1 214 3 is_stmt 1 view .LVU371
 214:test3.c       **** 		if(win1==3||win2==3)
 1594               		.loc 1 214 28 is_stmt 0 view .LVU372
 1595 07ae 2001      		move.l %d1,%d0
 1596 07b0 D0B9 0000 		add.l b_board+8,%d0
 1596      0000 
 214:test3.c       **** 		if(win1==3||win2==3)
 1597               		.loc 1 214 7 view .LVU373
 1598 07b6 D0B9 0000 		add.l b_board+24,%d0
 1598      0000 
 1599               	.LVL138:
 215:test3.c       **** 			return 1;
 1600               		.loc 1 215 3 is_stmt 1 view .LVU374
 213:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1601               		.loc 1 213 28 is_stmt 0 view .LVU375
 1602 07bc D293      		add.l (%a3),%d1
 1603               	.LVL139:
 213:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1604               		.loc 1 213 7 view .LVU376
 1605 07be D2B9 0000 		add.l b_board+32,%d1
 1605      0000 
 215:test3.c       **** 			return 1;
 1606               		.loc 1 215 5 view .LVU377
 1607 07c4 BA81      		cmp.l %d1,%d5
 1608 07c6 66D0      		jne .L100
 1609               	.LVL140:
 1610               	.L98:
 216:test3.c       **** 	} else if(in%4==0){
 1611               		.loc 1 216 11 view .LVU378
 1612 07c8 7001      		moveq #1,%d0
 1613               	.LBE66:
 1614               		.loc 1 229 1 view .LVU379
 1615 07ca 4CDF 3C3C 		movem.l (%sp)+,#15420
 1616               	.LVL141:
 1617               		.loc 1 229 1 view .LVU380
 1618 07ce 4E75      		rts
 1619               	.LVL142:
 1620               	.L99:
 228:test3.c       **** }
 1621               		.loc 1 228 9 view .LVU381
 1622 07d0 7000      		moveq #0,%d0
 1623               		.loc 1 229 1 view .LVU382
 1624 07d2 4CDF 3C3C 		movem.l (%sp)+,#15420
 1625               	.LVL143:
 1626               		.loc 1 229 1 view .LVU383
 1627 07d6 4E75      		rts
68K GAS  /tmp/ccMFIMKI.s 			page 40


 1628               		.cfi_endproc
 1629               	.LFE12:
 1630               		.size	check_win, .-check_win
 1631               		.section	.rodata.str1.1
 1632               	.LC13:
 1633 00d1 7200      		.string	"r"
 1634               	.LC14:
 1635 00d3 7700      		.string	"w"
 1636               	.LC15:
 1637 00d5 506F 7274 		.string	"Ports Initialized! \n"
 1637      7320 496E 
 1637      6974 6961 
 1637      6C69 7A65 
 1637      6421 200A 
 1638               		.text
 1639               		.align	2
 1640               		.globl	init_ports
 1641               		.type	init_ports, @function
 1642               	init_ports:
 1643               	.LFB13:
 230:test3.c       **** 
 231:test3.c       **** 
 232:test3.c       **** void init_ports() {
 1644               		.loc 1 232 19 is_stmt 1 view -0
 1645               		.cfi_startproc
 1646 07d8 2F0A      		move.l %a2,-(%sp)
 1647               		.cfi_def_cfa_offset 8
 1648               		.cfi_offset 10, -8
 1649 07da 2F02      		move.l %d2,-(%sp)
 1650               		.cfi_def_cfa_offset 12
 1651               		.cfi_offset 2, -12
 233:test3.c       **** 	int success = 4;
 1652               		.loc 1 233 2 view .LVU385
 1653               	.LVL144:
 234:test3.c       **** 	while(success > 0){
 1654               		.loc 1 234 2 view .LVU386
 1655               		.loc 1 234 16 view .LVU387
 233:test3.c       **** 	int success = 4;
 1656               		.loc 1 233 6 is_stmt 0 view .LVU388
 1657 07dc 7404      		moveq #4,%d2
 1658 07de 45F9 0000 		lea fdopen,%a2
 1658      0000 
 1659               	.LVL145:
 1660               	.L112:
 235:test3.c       **** 		com0in = fdopen(3, "r");
 1661               		.loc 1 235 3 is_stmt 1 view .LVU389
 1662               		.loc 1 235 12 is_stmt 0 view .LVU390
 1663 07e4 4879 0000 		pea .LC13
 1663      0000 
 1664               		.cfi_def_cfa_offset 16
 1665 07ea 4878 0003 		pea 3.w
 1666               		.cfi_def_cfa_offset 20
 1667 07ee 4E92      		jsr (%a2)
 1668               	.LVL146:
 1669               		.loc 1 235 10 view .LVU391
 1670 07f0 23C0 0000 		move.l %d0,com0in
 1670      0000 
68K GAS  /tmp/ccMFIMKI.s 			page 41


 236:test3.c       **** 		if (com0in != NULL) success--;
 1671               		.loc 1 236 3 is_stmt 1 view .LVU392
 1672               		.loc 1 236 6 is_stmt 0 view .LVU393
 1673 07f6 508F      		addq.l #8,%sp
 1674               		.cfi_def_cfa_offset 12
 1675 07f8 6702      		jeq .L108
 1676               		.loc 1 236 23 is_stmt 1 discriminator 1 view .LVU394
 1677               		.loc 1 236 30 is_stmt 0 discriminator 1 view .LVU395
 1678 07fa 5382      		subq.l #1,%d2
 1679               	.LVL147:
 1680               	.L108:
 237:test3.c       **** 	
 238:test3.c       **** 		com0out = fdopen(3, "w");
 1681               		.loc 1 238 3 is_stmt 1 view .LVU396
 1682               		.loc 1 238 13 is_stmt 0 view .LVU397
 1683 07fc 4879 0000 		pea .LC14
 1683      0000 
 1684               		.cfi_def_cfa_offset 16
 1685 0802 4878 0003 		pea 3.w
 1686               		.cfi_def_cfa_offset 20
 1687 0806 4E92      		jsr (%a2)
 1688               	.LVL148:
 1689               		.loc 1 238 11 view .LVU398
 1690 0808 23C0 0000 		move.l %d0,com0out
 1690      0000 
 239:test3.c       **** 		if (com0out != NULL) success--;
 1691               		.loc 1 239 3 is_stmt 1 view .LVU399
 1692               		.loc 1 239 6 is_stmt 0 view .LVU400
 1693 080e 508F      		addq.l #8,%sp
 1694               		.cfi_def_cfa_offset 12
 1695 0810 6702      		jeq .L109
 1696               		.loc 1 239 24 is_stmt 1 discriminator 1 view .LVU401
 1697               		.loc 1 239 31 is_stmt 0 discriminator 1 view .LVU402
 1698 0812 5382      		subq.l #1,%d2
 1699               	.LVL149:
 1700               	.L109:
 240:test3.c       **** 	
 241:test3.c       **** 		com1in = fdopen(4, "r");
 1701               		.loc 1 241 3 is_stmt 1 view .LVU403
 1702               		.loc 1 241 12 is_stmt 0 view .LVU404
 1703 0814 4879 0000 		pea .LC13
 1703      0000 
 1704               		.cfi_def_cfa_offset 16
 1705 081a 4878 0004 		pea 4.w
 1706               		.cfi_def_cfa_offset 20
 1707 081e 4E92      		jsr (%a2)
 1708               	.LVL150:
 1709               		.loc 1 241 10 view .LVU405
 1710 0820 23C0 0000 		move.l %d0,com1in
 1710      0000 
 242:test3.c       **** 		if (com1in != NULL) success--;
 1711               		.loc 1 242 3 is_stmt 1 view .LVU406
 1712               		.loc 1 242 6 is_stmt 0 view .LVU407
 1713 0826 508F      		addq.l #8,%sp
 1714               		.cfi_def_cfa_offset 12
 1715 0828 6702      		jeq .L110
 1716               		.loc 1 242 23 is_stmt 1 discriminator 1 view .LVU408
68K GAS  /tmp/ccMFIMKI.s 			page 42


 1717               		.loc 1 242 30 is_stmt 0 discriminator 1 view .LVU409
 1718 082a 5382      		subq.l #1,%d2
 1719               	.LVL151:
 1720               	.L110:
 243:test3.c       **** 	
 244:test3.c       **** 		com1out = fdopen(4, "w");
 1721               		.loc 1 244 3 is_stmt 1 view .LVU410
 1722               		.loc 1 244 13 is_stmt 0 view .LVU411
 1723 082c 4879 0000 		pea .LC14
 1723      0000 
 1724               		.cfi_def_cfa_offset 16
 1725 0832 4878 0004 		pea 4.w
 1726               		.cfi_def_cfa_offset 20
 1727 0836 4E92      		jsr (%a2)
 1728               	.LVL152:
 1729               		.loc 1 244 11 view .LVU412
 1730 0838 23C0 0000 		move.l %d0,com1out
 1730      0000 
 245:test3.c       **** 		if (com1out != NULL) success--;
 1731               		.loc 1 245 3 is_stmt 1 view .LVU413
 1732               		.loc 1 245 6 is_stmt 0 view .LVU414
 1733 083e 508F      		addq.l #8,%sp
 1734               		.cfi_def_cfa_offset 12
 1735 0840 6702      		jeq .L111
 1736               		.loc 1 245 24 is_stmt 1 discriminator 1 view .LVU415
 1737               		.loc 1 245 31 is_stmt 0 discriminator 1 view .LVU416
 1738 0842 5382      		subq.l #1,%d2
 1739               	.LVL153:
 1740               	.L111:
 234:test3.c       **** 		com0in = fdopen(3, "r");
 1741               		.loc 1 234 16 is_stmt 1 view .LVU417
 1742 0844 4A82      		tst.l %d2
 1743 0846 6E9C      		jgt .L112
 246:test3.c       **** 	}
 247:test3.c       **** 	
 248:test3.c       **** 	fprintf(com0out, "Ports Initialized! \n");
 1744               		.loc 1 248 2 view .LVU418
 1745 0848 2F39 0000 		move.l com0out,-(%sp)
 1745      0000 
 1746               		.cfi_def_cfa_offset 16
 1747 084e 4878 0014 		pea 20.w
 1748               		.cfi_def_cfa_offset 20
 1749 0852 4878 0001 		pea 1.w
 1750               		.cfi_def_cfa_offset 24
 1751 0856 4879 0000 		pea .LC15
 1751      0000 
 1752               		.cfi_def_cfa_offset 28
 1753 085c 45F9 0000 		lea fwrite,%a2
 1753      0000 
 1754 0862 4E92      		jsr (%a2)
 1755               	.LVL154:
 249:test3.c       **** 	fprintf(com1out, "Ports Initialized! \n");
 1756               		.loc 1 249 2 view .LVU419
 1757 0864 2F39 0000 		move.l com1out,-(%sp)
 1757      0000 
 1758               		.cfi_def_cfa_offset 32
 1759 086a 4878 0014 		pea 20.w
68K GAS  /tmp/ccMFIMKI.s 			page 43


 1760               		.cfi_def_cfa_offset 36
 1761 086e 4878 0001 		pea 1.w
 1762               		.cfi_def_cfa_offset 40
 1763 0872 4879 0000 		pea .LC15
 1763      0000 
 1764               		.cfi_def_cfa_offset 44
 1765 0878 4E92      		jsr (%a2)
 1766               	.LVL155:
 250:test3.c       **** }
 1767               		.loc 1 250 1 is_stmt 0 view .LVU420
 1768 087a 4FEF 0020 		lea (32,%sp),%sp
 1769               		.cfi_def_cfa_offset 12
 1770 087e 241F      		move.l (%sp)+,%d2
 1771               	.LVL156:
 1772               		.loc 1 250 1 view .LVU421
 1773 0880 245F      		move.l (%sp)+,%a2
 1774 0882 4E75      		rts
 1775               		.cfi_endproc
 1776               	.LFE13:
 1777               		.size	init_ports, .-init_ports
 1778               		.section	.text.startup,"ax",@progbits
 1779               		.align	2
 1780               		.globl	main
 1781               		.type	main, @function
 1782               	main:
 1783               	.LFB14:
 251:test3.c       **** 
 252:test3.c       **** int main()
 253:test3.c       **** {
 1784               		.loc 1 253 1 is_stmt 1 view -0
 1785               		.cfi_startproc
 1786 0000 2F0A      		move.l %a2,-(%sp)
 1787               		.cfi_def_cfa_offset 8
 1788               		.cfi_offset 10, -8
 254:test3.c       **** 	// initialization
 255:test3.c       **** 
 256:test3.c       **** 	init_ports();
 1789               		.loc 1 256 2 view .LVU423
 1790 0002 4EB9 0000 		jsr init_ports
 1790      0000 
 1791               	.LVL157:
 257:test3.c       **** 
 258:test3.c       **** 	init_board();
 1792               		.loc 1 258 2 view .LVU424
 1793 0008 4EB9 0000 		jsr init_board
 1793      0000 
 1794               	.LVL158:
 259:test3.c       **** 	set_task(player_maru);
 1795               		.loc 1 259 2 view .LVU425
 1796 000e 4879 0000 		pea player_maru
 1796      0000 
 1797               		.cfi_def_cfa_offset 12
 1798 0014 45F9 0000 		lea set_task,%a2
 1798      0000 
 1799 001a 4E92      		jsr (%a2)
 1800               	.LVL159:
 260:test3.c       **** 	set_task(player_x);
68K GAS  /tmp/ccMFIMKI.s 			page 44


 1801               		.loc 1 260 2 view .LVU426
 1802 001c 4879 0000 		pea player_x
 1802      0000 
 1803               		.cfi_def_cfa_offset 16
 1804 0022 4E92      		jsr (%a2)
 1805               	.LVL160:
 261:test3.c       ****     	set_task(hurry_msg);
 1806               		.loc 1 261 6 view .LVU427
 1807 0024 4879 0000 		pea hurry_msg
 1807      0000 
 1808               		.cfi_def_cfa_offset 20
 1809 002a 4E92      		jsr (%a2)
 1810               	.LVL161:
 262:test3.c       **** 
 263:test3.c       ****     	begin_sch();
 1811               		.loc 1 263 6 view .LVU428
 1812 002c 4EB9 0000 		jsr begin_sch
 1812      0000 
 1813               	.LVL162:
 264:test3.c       ****     	return 0;
 1814               		.loc 1 264 6 view .LVU429
 265:test3.c       **** 	
 266:test3.c       **** }
 1815               		.loc 1 266 1 is_stmt 0 view .LVU430
 1816 0032 4FEF 000C 		lea (12,%sp),%sp
 1817               		.cfi_def_cfa_offset 8
 1818 0036 7000      		moveq #0,%d0
 1819 0038 245F      		move.l (%sp)+,%a2
 1820 003a 4E75      		rts
 1821               		.cfi_endproc
 1822               	.LFE14:
 1823               		.size	main, .-main
 1824               		.globl	player_X_playing
 1825               		.section	.bss
 1826               		.type	player_X_playing, @object
 1827               		.size	player_X_playing, 1
 1828               	player_X_playing:
 1829 0000 00        		.zero	1
 1830               		.globl	num_valid_cells
 1831               		.data
 1832               		.align	2
 1833               		.type	num_valid_cells, @object
 1834               		.size	num_valid_cells, 4
 1835               	num_valid_cells:
 1836 0000 0000 0009 		.long	9
 1837               		.globl	valid_cells
 1838               		.align	2
 1839               		.type	valid_cells, @object
 1840               		.size	valid_cells, 36
 1841               	valid_cells:
 1842 0004 0000 0000 		.long	0
 1843 0008 0000 0001 		.long	1
 1844 000c 0000 0002 		.long	2
 1845 0010 0000 0003 		.long	3
 1846 0014 0000 0004 		.long	4
 1847 0018 0000 0005 		.long	5
 1848 001c 0000 0006 		.long	6
68K GAS  /tmp/ccMFIMKI.s 			page 45


 1849 0020 0000 0007 		.long	7
 1850 0024 0000 0008 		.long	8
 1851               		.globl	board
 1852               		.type	board, @object
 1853               		.size	board, 9
 1854               	board:
 1855 0028 3031 32   		.ascii	"012"
 1856 002b 3334 35   		.ascii	"345"
 1857 002e 3637 38   		.ascii	"678"
 1858               		.globl	b_board
 1859               		.section	.bss
 1860 0001 00        		.align	2
 1861               		.type	b_board, @object
 1862               		.size	b_board, 36
 1863               	b_board:
 1864 0002 0000 0000 		.zero	36
 1864      0000 0000 
 1864      0000 0000 
 1864      0000 0000 
 1864      0000 0000 
 1865               		.globl	com1out
 1866               		.align	2
 1867               		.type	com1out, @object
 1868               		.size	com1out, 4
 1869               	com1out:
 1870 0026 0000 0000 		.zero	4
 1871               		.globl	com1in
 1872               		.align	2
 1873               		.type	com1in, @object
 1874               		.size	com1in, 4
 1875               	com1in:
 1876 002a 0000 0000 		.zero	4
 1877               		.globl	com0out
 1878               		.align	2
 1879               		.type	com0out, @object
 1880               		.size	com0out, 4
 1881               	com0out:
 1882 002e 0000 0000 		.zero	4
 1883               		.globl	com0in
 1884               		.align	2
 1885               		.type	com0in, @object
 1886               		.size	com0in, 4
 1887               	com0in:
 1888 0032 0000 0000 		.zero	4
 1889               		.text
 1890               	.Letext0:
 1891               		.file 2 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stddef.h"
 1892               		.file 3 "/usr/local/m68k-elf/include/sys/_types.h"
 1893               		.file 4 "/usr/local/m68k-elf/include/sys/reent.h"
 1894               		.file 5 "/usr/local/m68k-elf/include/sys/lock.h"
 1895               		.file 6 "/usr/local/m68k-elf/include/stdio.h"
 1896               		.file 7 "mtk_c.h"
 1897               		.file 8 "<built-in>"
 1898               		.section	.debug_info,"",@progbits
 1899               	.Ldebug_info0:
 1900 0000 0000 1127 		.long	0x1127
 1901 0004 0005      		.word	0x5
68K GAS  /tmp/ccMFIMKI.s 			page 46


 1902 0006 01        		.byte	0x1
 1903 0007 04        		.byte	0x4
 1904 0008 0000 0000 		.long	.Ldebug_abbrev0
 1905 000c 2B        		.uleb128 0x2b
 1906 000d 0000 0000 		.long	.LASF142
 1907 0011 1D        		.byte	0x1d
 1908 0012 0000 0000 		.long	.LASF143
 1909 0016 0000 0000 		.long	.LASF144
 1910 001a 0000 0000 		.long	.LLRL52
 1911 001e 0000 0000 		.long	0
 1912 0022 0000 0000 		.long	.Ldebug_line0
 1913 0026 09        		.uleb128 0x9
 1914 0027 01        		.byte	0x1
 1915 0028 06        		.byte	0x6
 1916 0029 0000 0000 		.long	.LASF0
 1917 002d 09        		.uleb128 0x9
 1918 002e 01        		.byte	0x1
 1919 002f 08        		.byte	0x8
 1920 0030 0000 0000 		.long	.LASF1
 1921 0034 09        		.uleb128 0x9
 1922 0035 02        		.byte	0x2
 1923 0036 05        		.byte	0x5
 1924 0037 0000 0000 		.long	.LASF2
 1925 003b 09        		.uleb128 0x9
 1926 003c 02        		.byte	0x2
 1927 003d 07        		.byte	0x7
 1928 003e 0000 0000 		.long	.LASF3
 1929 0042 09        		.uleb128 0x9
 1930 0043 04        		.byte	0x4
 1931 0044 05        		.byte	0x5
 1932 0045 0000 0000 		.long	.LASF4
 1933 0049 09        		.uleb128 0x9
 1934 004a 04        		.byte	0x4
 1935 004b 07        		.byte	0x7
 1936 004c 0000 0000 		.long	.LASF5
 1937 0050 09        		.uleb128 0x9
 1938 0051 08        		.byte	0x8
 1939 0052 05        		.byte	0x5
 1940 0053 0000 0000 		.long	.LASF6
 1941 0057 09        		.uleb128 0x9
 1942 0058 08        		.byte	0x8
 1943 0059 07        		.byte	0x7
 1944 005a 0000 0000 		.long	.LASF7
 1945 005e 09        		.uleb128 0x9
 1946 005f 0C        		.byte	0xc
 1947 0060 04        		.byte	0x4
 1948 0061 0000 0000 		.long	.LASF8
 1949 0065 22        		.uleb128 0x22
 1950 0066 0000 0000 		.long	.LASF10
 1951 006a 02        		.byte	0x2
 1952 006b 015E      		.word	0x15e
 1953 006d 17        		.byte	0x17
 1954 006e 0000 0072 		.long	0x72
 1955 0072 09        		.uleb128 0x9
 1956 0073 04        		.byte	0x4
 1957 0074 07        		.byte	0x7
 1958 0075 0000 0000 		.long	.LASF9
68K GAS  /tmp/ccMFIMKI.s 			page 47


 1959 0079 0E        		.uleb128 0xe
 1960 007a 0000 0000 		.long	.LASF11
 1961 007e 03        		.byte	0x3
 1962 007f 2E        		.byte	0x2e
 1963 0080 0E        		.byte	0xe
 1964 0081 0000 0042 		.long	0x42
 1965 0085 2C        		.uleb128 0x2c
 1966 0086 04        		.byte	0x4
 1967 0087 05        		.byte	0x5
 1968 0088 696E 7400 		.string	"int"
 1969 008c 0E        		.uleb128 0xe
 1970 008d 0000 0000 		.long	.LASF12
 1971 0091 03        		.byte	0x3
 1972 0092 74        		.byte	0x74
 1973 0093 0E        		.byte	0xe
 1974 0094 0000 0042 		.long	0x42
 1975 0098 0E        		.uleb128 0xe
 1976 0099 0000 0000 		.long	.LASF13
 1977 009d 03        		.byte	0x3
 1978 009e 93        		.byte	0x93
 1979 009f 17        		.byte	0x17
 1980 00a0 0000 0042 		.long	0x42
 1981 00a4 2D        		.uleb128 0x2d
 1982 00a5 04        		.byte	0x4
 1983 00a6 03        		.byte	0x3
 1984 00a7 A5        		.byte	0xa5
 1985 00a8 03        		.byte	0x3
 1986 00a9 0000 00C4 		.long	0xc4
 1987 00ad 23        		.uleb128 0x23
 1988 00ae 0000 0000 		.long	.LASF14
 1989 00b2 A7        		.byte	0xa7
 1990 00b3 0C        		.byte	0xc
 1991 00b4 0000 0065 		.long	0x65
 1992 00b8 23        		.uleb128 0x23
 1993 00b9 0000 0000 		.long	.LASF15
 1994 00bd A8        		.byte	0xa8
 1995 00be 13        		.byte	0x13
 1996 00bf 0000 00C4 		.long	0xc4
 1997 00c3 00        		.byte	0
 1998 00c4 07        		.uleb128 0x7
 1999 00c5 0000 002D 		.long	0x2d
 2000 00c9 0000 00D4 		.long	0xd4
 2001 00cd 06        		.uleb128 0x6
 2002 00ce 0000 0049 		.long	0x49
 2003 00d2 03        		.byte	0x3
 2004 00d3 00        		.byte	0
 2005 00d4 2E        		.uleb128 0x2e
 2006 00d5 08        		.byte	0x8
 2007 00d6 03        		.byte	0x3
 2008 00d7 A2        		.byte	0xa2
 2009 00d8 09        		.byte	0x9
 2010 00d9 0000 00F8 		.long	0xf8
 2011 00dd 03        		.uleb128 0x3
 2012 00de 0000 0000 		.long	.LASF16
 2013 00e2 03        		.byte	0x3
 2014 00e3 A4        		.byte	0xa4
 2015 00e4 07        		.byte	0x7
68K GAS  /tmp/ccMFIMKI.s 			page 48


 2016 00e5 0000 0085 		.long	0x85
 2017 00e9 00        		.byte	0
 2018 00ea 03        		.uleb128 0x3
 2019 00eb 0000 0000 		.long	.LASF17
 2020 00ef 03        		.byte	0x3
 2021 00f0 A9        		.byte	0xa9
 2022 00f1 05        		.byte	0x5
 2023 00f2 0000 00A4 		.long	0xa4
 2024 00f6 04        		.byte	0x4
 2025 00f7 00        		.byte	0
 2026 00f8 0E        		.uleb128 0xe
 2027 00f9 0000 0000 		.long	.LASF18
 2028 00fd 03        		.byte	0x3
 2029 00fe AA        		.byte	0xaa
 2030 00ff 03        		.byte	0x3
 2031 0100 0000 00D4 		.long	0xd4
 2032 0104 2F        		.uleb128 0x2f
 2033 0105 04        		.byte	0x4
 2034 0106 0E        		.uleb128 0xe
 2035 0107 0000 0000 		.long	.LASF19
 2036 010b 04        		.byte	0x4
 2037 010c 16        		.byte	0x16
 2038 010d 19        		.byte	0x19
 2039 010e 0000 0049 		.long	0x49
 2040 0112 0E        		.uleb128 0xe
 2041 0113 0000 0000 		.long	.LASF20
 2042 0117 05        		.byte	0x5
 2043 0118 0C        		.byte	0xc
 2044 0119 0D        		.byte	0xd
 2045 011a 0000 0085 		.long	0x85
 2046 011e 0E        		.uleb128 0xe
 2047 011f 0000 0000 		.long	.LASF21
 2048 0123 04        		.byte	0x4
 2049 0124 23        		.byte	0x23
 2050 0125 1B        		.byte	0x1b
 2051 0126 0000 0112 		.long	0x112
 2052 012a 19        		.uleb128 0x19
 2053 012b 0000 0000 		.long	.LASF26
 2054 012f 18        		.byte	0x18
 2055 0130 34        		.byte	0x34
 2056 0131 0000 0180 		.long	0x180
 2057 0135 03        		.uleb128 0x3
 2058 0136 0000 0000 		.long	.LASF22
 2059 013a 04        		.byte	0x4
 2060 013b 36        		.byte	0x36
 2061 013c 13        		.byte	0x13
 2062 013d 0000 0180 		.long	0x180
 2063 0141 00        		.byte	0
 2064 0142 0B        		.uleb128 0xb
 2065 0143 5F6B 00   		.string	"_k"
 2066 0146 37        		.byte	0x37
 2067 0147 07        		.byte	0x7
 2068 0148 0000 0085 		.long	0x85
 2069 014c 04        		.byte	0x4
 2070 014d 03        		.uleb128 0x3
 2071 014e 0000 0000 		.long	.LASF23
 2072 0152 04        		.byte	0x4
68K GAS  /tmp/ccMFIMKI.s 			page 49


 2073 0153 37        		.byte	0x37
 2074 0154 0B        		.byte	0xb
 2075 0155 0000 0085 		.long	0x85
 2076 0159 08        		.byte	0x8
 2077 015a 03        		.uleb128 0x3
 2078 015b 0000 0000 		.long	.LASF24
 2079 015f 04        		.byte	0x4
 2080 0160 37        		.byte	0x37
 2081 0161 14        		.byte	0x14
 2082 0162 0000 0085 		.long	0x85
 2083 0166 0C        		.byte	0xc
 2084 0167 03        		.uleb128 0x3
 2085 0168 0000 0000 		.long	.LASF25
 2086 016c 04        		.byte	0x4
 2087 016d 37        		.byte	0x37
 2088 016e 1B        		.byte	0x1b
 2089 016f 0000 0085 		.long	0x85
 2090 0173 10        		.byte	0x10
 2091 0174 0B        		.uleb128 0xb
 2092 0175 5F78 00   		.string	"_x"
 2093 0178 38        		.byte	0x38
 2094 0179 0B        		.byte	0xb
 2095 017a 0000 0185 		.long	0x185
 2096 017e 14        		.byte	0x14
 2097 017f 00        		.byte	0
 2098 0180 05        		.uleb128 0x5
 2099 0181 0000 012A 		.long	0x12a
 2100 0185 07        		.uleb128 0x7
 2101 0186 0000 0106 		.long	0x106
 2102 018a 0000 0195 		.long	0x195
 2103 018e 06        		.uleb128 0x6
 2104 018f 0000 0049 		.long	0x49
 2105 0193 00        		.byte	0
 2106 0194 00        		.byte	0
 2107 0195 19        		.uleb128 0x19
 2108 0196 0000 0000 		.long	.LASF27
 2109 019a 24        		.byte	0x24
 2110 019b 3C        		.byte	0x3c
 2111 019c 0000 0216 		.long	0x216
 2112 01a0 03        		.uleb128 0x3
 2113 01a1 0000 0000 		.long	.LASF28
 2114 01a5 04        		.byte	0x4
 2115 01a6 3E        		.byte	0x3e
 2116 01a7 09        		.byte	0x9
 2117 01a8 0000 0085 		.long	0x85
 2118 01ac 00        		.byte	0
 2119 01ad 03        		.uleb128 0x3
 2120 01ae 0000 0000 		.long	.LASF29
 2121 01b2 04        		.byte	0x4
 2122 01b3 3F        		.byte	0x3f
 2123 01b4 09        		.byte	0x9
 2124 01b5 0000 0085 		.long	0x85
 2125 01b9 04        		.byte	0x4
 2126 01ba 03        		.uleb128 0x3
 2127 01bb 0000 0000 		.long	.LASF30
 2128 01bf 04        		.byte	0x4
 2129 01c0 40        		.byte	0x40
68K GAS  /tmp/ccMFIMKI.s 			page 50


 2130 01c1 09        		.byte	0x9
 2131 01c2 0000 0085 		.long	0x85
 2132 01c6 08        		.byte	0x8
 2133 01c7 03        		.uleb128 0x3
 2134 01c8 0000 0000 		.long	.LASF31
 2135 01cc 04        		.byte	0x4
 2136 01cd 41        		.byte	0x41
 2137 01ce 09        		.byte	0x9
 2138 01cf 0000 0085 		.long	0x85
 2139 01d3 0C        		.byte	0xc
 2140 01d4 03        		.uleb128 0x3
 2141 01d5 0000 0000 		.long	.LASF32
 2142 01d9 04        		.byte	0x4
 2143 01da 42        		.byte	0x42
 2144 01db 09        		.byte	0x9
 2145 01dc 0000 0085 		.long	0x85
 2146 01e0 10        		.byte	0x10
 2147 01e1 03        		.uleb128 0x3
 2148 01e2 0000 0000 		.long	.LASF33
 2149 01e6 04        		.byte	0x4
 2150 01e7 43        		.byte	0x43
 2151 01e8 09        		.byte	0x9
 2152 01e9 0000 0085 		.long	0x85
 2153 01ed 14        		.byte	0x14
 2154 01ee 03        		.uleb128 0x3
 2155 01ef 0000 0000 		.long	.LASF34
 2156 01f3 04        		.byte	0x4
 2157 01f4 44        		.byte	0x44
 2158 01f5 09        		.byte	0x9
 2159 01f6 0000 0085 		.long	0x85
 2160 01fa 18        		.byte	0x18
 2161 01fb 03        		.uleb128 0x3
 2162 01fc 0000 0000 		.long	.LASF35
 2163 0200 04        		.byte	0x4
 2164 0201 45        		.byte	0x45
 2165 0202 09        		.byte	0x9
 2166 0203 0000 0085 		.long	0x85
 2167 0207 1C        		.byte	0x1c
 2168 0208 03        		.uleb128 0x3
 2169 0209 0000 0000 		.long	.LASF36
 2170 020d 04        		.byte	0x4
 2171 020e 46        		.byte	0x46
 2172 020f 09        		.byte	0x9
 2173 0210 0000 0085 		.long	0x85
 2174 0214 20        		.byte	0x20
 2175 0215 00        		.byte	0
 2176 0216 19        		.uleb128 0x19
 2177 0217 0000 0000 		.long	.LASF37
 2178 021b 08        		.byte	0x8
 2179 021c 73        		.byte	0x73
 2180 021d 0000 023C 		.long	0x23c
 2181 0221 03        		.uleb128 0x3
 2182 0222 0000 0000 		.long	.LASF38
 2183 0226 04        		.byte	0x4
 2184 0227 74        		.byte	0x74
 2185 0228 11        		.byte	0x11
 2186 0229 0000 023C 		.long	0x23c
68K GAS  /tmp/ccMFIMKI.s 			page 51


 2187 022d 00        		.byte	0
 2188 022e 03        		.uleb128 0x3
 2189 022f 0000 0000 		.long	.LASF39
 2190 0233 04        		.byte	0x4
 2191 0234 75        		.byte	0x75
 2192 0235 06        		.byte	0x6
 2193 0236 0000 0085 		.long	0x85
 2194 023a 04        		.byte	0x4
 2195 023b 00        		.byte	0
 2196 023c 05        		.uleb128 0x5
 2197 023d 0000 002D 		.long	0x2d
 2198 0241 19        		.uleb128 0x19
 2199 0242 0000 0000 		.long	.LASF40
 2200 0246 68        		.byte	0x68
 2201 0247 98        		.byte	0x98
 2202 0248 0000 037A 		.long	0x37a
 2203 024c 0B        		.uleb128 0xb
 2204 024d 5F70 00   		.string	"_p"
 2205 0250 99        		.byte	0x99
 2206 0251 12        		.byte	0x12
 2207 0252 0000 023C 		.long	0x23c
 2208 0256 00        		.byte	0
 2209 0257 0B        		.uleb128 0xb
 2210 0258 5F72 00   		.string	"_r"
 2211 025b 9A        		.byte	0x9a
 2212 025c 07        		.byte	0x7
 2213 025d 0000 0085 		.long	0x85
 2214 0261 04        		.byte	0x4
 2215 0262 0B        		.uleb128 0xb
 2216 0263 5F77 00   		.string	"_w"
 2217 0266 9B        		.byte	0x9b
 2218 0267 07        		.byte	0x7
 2219 0268 0000 0085 		.long	0x85
 2220 026c 08        		.byte	0x8
 2221 026d 03        		.uleb128 0x3
 2222 026e 0000 0000 		.long	.LASF41
 2223 0272 04        		.byte	0x4
 2224 0273 9C        		.byte	0x9c
 2225 0274 09        		.byte	0x9
 2226 0275 0000 0034 		.long	0x34
 2227 0279 0C        		.byte	0xc
 2228 027a 03        		.uleb128 0x3
 2229 027b 0000 0000 		.long	.LASF42
 2230 027f 04        		.byte	0x4
 2231 0280 9D        		.byte	0x9d
 2232 0281 09        		.byte	0x9
 2233 0282 0000 0034 		.long	0x34
 2234 0286 0E        		.byte	0xe
 2235 0287 0B        		.uleb128 0xb
 2236 0288 5F62 6600 		.string	"_bf"
 2237 028c 9E        		.byte	0x9e
 2238 028d 11        		.byte	0x11
 2239 028e 0000 0216 		.long	0x216
 2240 0292 10        		.byte	0x10
 2241 0293 03        		.uleb128 0x3
 2242 0294 0000 0000 		.long	.LASF43
 2243 0298 04        		.byte	0x4
68K GAS  /tmp/ccMFIMKI.s 			page 52


 2244 0299 9F        		.byte	0x9f
 2245 029a 07        		.byte	0x7
 2246 029b 0000 0085 		.long	0x85
 2247 029f 18        		.byte	0x18
 2248 02a0 03        		.uleb128 0x3
 2249 02a1 0000 0000 		.long	.LASF44
 2250 02a5 04        		.byte	0x4
 2251 02a6 A6        		.byte	0xa6
 2252 02a7 0A        		.byte	0xa
 2253 02a8 0000 0104 		.long	0x104
 2254 02ac 1C        		.byte	0x1c
 2255 02ad 03        		.uleb128 0x3
 2256 02ae 0000 0000 		.long	.LASF45
 2257 02b2 04        		.byte	0x4
 2258 02b3 A8        		.byte	0xa8
 2259 02b4 1D        		.byte	0x1d
 2260 02b5 0000 0490 		.long	0x490
 2261 02b9 20        		.byte	0x20
 2262 02ba 03        		.uleb128 0x3
 2263 02bb 0000 0000 		.long	.LASF46
 2264 02bf 04        		.byte	0x4
 2265 02c0 AA        		.byte	0xaa
 2266 02c1 1D        		.byte	0x1d
 2267 02c2 0000 04BD 		.long	0x4bd
 2268 02c6 24        		.byte	0x24
 2269 02c7 03        		.uleb128 0x3
 2270 02c8 0000 0000 		.long	.LASF47
 2271 02cc 04        		.byte	0x4
 2272 02cd AD        		.byte	0xad
 2273 02ce 0D        		.byte	0xd
 2274 02cf 0000 04E0 		.long	0x4e0
 2275 02d3 28        		.byte	0x28
 2276 02d4 03        		.uleb128 0x3
 2277 02d5 0000 0000 		.long	.LASF48
 2278 02d9 04        		.byte	0x4
 2279 02da AE        		.byte	0xae
 2280 02db 09        		.byte	0x9
 2281 02dc 0000 04F9 		.long	0x4f9
 2282 02e0 2C        		.byte	0x2c
 2283 02e1 0B        		.uleb128 0xb
 2284 02e2 5F75 6200 		.string	"_ub"
 2285 02e6 B1        		.byte	0xb1
 2286 02e7 11        		.byte	0x11
 2287 02e8 0000 0216 		.long	0x216
 2288 02ec 30        		.byte	0x30
 2289 02ed 0B        		.uleb128 0xb
 2290 02ee 5F75 7000 		.string	"_up"
 2291 02f2 B2        		.byte	0xb2
 2292 02f3 12        		.byte	0x12
 2293 02f4 0000 023C 		.long	0x23c
 2294 02f8 38        		.byte	0x38
 2295 02f9 0B        		.uleb128 0xb
 2296 02fa 5F75 7200 		.string	"_ur"
 2297 02fe B3        		.byte	0xb3
 2298 02ff 07        		.byte	0x7
 2299 0300 0000 0085 		.long	0x85
 2300 0304 3C        		.byte	0x3c
68K GAS  /tmp/ccMFIMKI.s 			page 53


 2301 0305 03        		.uleb128 0x3
 2302 0306 0000 0000 		.long	.LASF49
 2303 030a 04        		.byte	0x4
 2304 030b B6        		.byte	0xb6
 2305 030c 11        		.byte	0x11
 2306 030d 0000 04FE 		.long	0x4fe
 2307 0311 40        		.byte	0x40
 2308 0312 03        		.uleb128 0x3
 2309 0313 0000 0000 		.long	.LASF50
 2310 0317 04        		.byte	0x4
 2311 0318 B7        		.byte	0xb7
 2312 0319 11        		.byte	0x11
 2313 031a 0000 050E 		.long	0x50e
 2314 031e 43        		.byte	0x43
 2315 031f 0B        		.uleb128 0xb
 2316 0320 5F6C 6200 		.string	"_lb"
 2317 0324 BA        		.byte	0xba
 2318 0325 11        		.byte	0x11
 2319 0326 0000 0216 		.long	0x216
 2320 032a 44        		.byte	0x44
 2321 032b 03        		.uleb128 0x3
 2322 032c 0000 0000 		.long	.LASF51
 2323 0330 04        		.byte	0x4
 2324 0331 BD        		.byte	0xbd
 2325 0332 07        		.byte	0x7
 2326 0333 0000 0085 		.long	0x85
 2327 0337 4C        		.byte	0x4c
 2328 0338 03        		.uleb128 0x3
 2329 0339 0000 0000 		.long	.LASF52
 2330 033d 04        		.byte	0x4
 2331 033e BE        		.byte	0xbe
 2332 033f 0A        		.byte	0xa
 2333 0340 0000 0079 		.long	0x79
 2334 0344 50        		.byte	0x50
 2335 0345 03        		.uleb128 0x3
 2336 0346 0000 0000 		.long	.LASF53
 2337 034a 04        		.byte	0x4
 2338 034b C1        		.byte	0xc1
 2339 034c 12        		.byte	0x12
 2340 034d 0000 0398 		.long	0x398
 2341 0351 54        		.byte	0x54
 2342 0352 03        		.uleb128 0x3
 2343 0353 0000 0000 		.long	.LASF54
 2344 0357 04        		.byte	0x4
 2345 0358 C5        		.byte	0xc5
 2346 0359 0C        		.byte	0xc
 2347 035a 0000 011E 		.long	0x11e
 2348 035e 58        		.byte	0x58
 2349 035f 03        		.uleb128 0x3
 2350 0360 0000 0000 		.long	.LASF55
 2351 0364 04        		.byte	0x4
 2352 0365 C7        		.byte	0xc7
 2353 0366 0E        		.byte	0xe
 2354 0367 0000 00F8 		.long	0xf8
 2355 036b 5C        		.byte	0x5c
 2356 036c 03        		.uleb128 0x3
 2357 036d 0000 0000 		.long	.LASF56
68K GAS  /tmp/ccMFIMKI.s 			page 54


 2358 0371 04        		.byte	0x4
 2359 0372 C8        		.byte	0xc8
 2360 0373 09        		.byte	0x9
 2361 0374 0000 0085 		.long	0x85
 2362 0378 64        		.byte	0x64
 2363 0379 00        		.byte	0
 2364 037a 1A        		.uleb128 0x1a
 2365 037b 0000 0098 		.long	0x98
 2366 037f 0000 0398 		.long	0x398
 2367 0383 04        		.uleb128 0x4
 2368 0384 0000 0398 		.long	0x398
 2369 0388 04        		.uleb128 0x4
 2370 0389 0000 0104 		.long	0x104
 2371 038d 04        		.uleb128 0x4
 2372 038e 0000 047F 		.long	0x47f
 2373 0392 04        		.uleb128 0x4
 2374 0393 0000 0085 		.long	0x85
 2375 0397 00        		.byte	0
 2376 0398 05        		.uleb128 0x5
 2377 0399 0000 039D 		.long	0x39d
 2378 039d 30        		.uleb128 0x30
 2379 039e 0000 0000 		.long	.LASF57
 2380 03a2 0116      		.word	0x116
 2381 03a4 04        		.byte	0x4
 2382 03a5 0237      		.word	0x237
 2383 03a7 08        		.byte	0x8
 2384 03a8 0000 047F 		.long	0x47f
 2385 03ac 02        		.uleb128 0x2
 2386 03ad 0000 0000 		.long	.LASF58
 2387 03b1 0239      		.word	0x239
 2388 03b3 07        		.byte	0x7
 2389 03b4 0000 0085 		.long	0x85
 2390 03b8 00        		.byte	0
 2391 03b9 02        		.uleb128 0x2
 2392 03ba 0000 0000 		.long	.LASF59
 2393 03be 023E      		.word	0x23e
 2394 03c0 0B        		.byte	0xb
 2395 03c1 0000 052B 		.long	0x52b
 2396 03c5 04        		.byte	0x4
 2397 03c6 02        		.uleb128 0x2
 2398 03c7 0000 0000 		.long	.LASF60
 2399 03cb 023E      		.word	0x23e
 2400 03cd 14        		.byte	0x14
 2401 03ce 0000 052B 		.long	0x52b
 2402 03d2 08        		.byte	0x8
 2403 03d3 02        		.uleb128 0x2
 2404 03d4 0000 0000 		.long	.LASF61
 2405 03d8 023E      		.word	0x23e
 2406 03da 1E        		.byte	0x1e
 2407 03db 0000 052B 		.long	0x52b
 2408 03df 0C        		.byte	0xc
 2409 03e0 02        		.uleb128 0x2
 2410 03e1 0000 0000 		.long	.LASF62
 2411 03e5 0240      		.word	0x240
 2412 03e7 08        		.byte	0x8
 2413 03e8 0000 0085 		.long	0x85
 2414 03ec 10        		.byte	0x10
68K GAS  /tmp/ccMFIMKI.s 			page 55


 2415 03ed 02        		.uleb128 0x2
 2416 03ee 0000 0000 		.long	.LASF63
 2417 03f2 0241      		.word	0x241
 2418 03f4 08        		.byte	0x8
 2419 03f5 0000 06B3 		.long	0x6b3
 2420 03f9 14        		.byte	0x14
 2421 03fa 02        		.uleb128 0x2
 2422 03fb 0000 0000 		.long	.LASF64
 2423 03ff 0246      		.word	0x246
 2424 0401 16        		.byte	0x16
 2425 0402 0000 06C8 		.long	0x6c8
 2426 0406 2E        		.byte	0x2e
 2427 0407 02        		.uleb128 0x2
 2428 0408 0000 0000 		.long	.LASF65
 2429 040c 024C      		.word	0x24c
 2430 040e 0A        		.byte	0xa
 2431 040f 0000 06D8 		.long	0x6d8
 2432 0413 32        		.byte	0x32
 2433 0414 02        		.uleb128 0x2
 2434 0415 0000 0000 		.long	.LASF66
 2435 0419 024F      		.word	0x24f
 2436 041b 13        		.byte	0x13
 2437 041c 0000 0180 		.long	0x180
 2438 0420 36        		.byte	0x36
 2439 0421 02        		.uleb128 0x2
 2440 0422 0000 0000 		.long	.LASF67
 2441 0426 0250      		.word	0x250
 2442 0428 07        		.byte	0x7
 2443 0429 0000 0085 		.long	0x85
 2444 042d 3A        		.byte	0x3a
 2445 042e 02        		.uleb128 0x2
 2446 042f 0000 0000 		.long	.LASF68
 2447 0433 0251      		.word	0x251
 2448 0435 13        		.byte	0x13
 2449 0436 0000 0180 		.long	0x180
 2450 043a 3E        		.byte	0x3e
 2451 043b 02        		.uleb128 0x2
 2452 043c 0000 0000 		.long	.LASF69
 2453 0440 0252      		.word	0x252
 2454 0442 14        		.byte	0x14
 2455 0443 0000 06DD 		.long	0x6dd
 2456 0447 42        		.byte	0x42
 2457 0448 02        		.uleb128 0x2
 2458 0449 0000 0000 		.long	.LASF70
 2459 044d 0255      		.word	0x255
 2460 044f 07        		.byte	0x7
 2461 0450 0000 0085 		.long	0x85
 2462 0454 46        		.byte	0x46
 2463 0455 02        		.uleb128 0x2
 2464 0456 0000 0000 		.long	.LASF71
 2465 045a 0256      		.word	0x256
 2466 045c 09        		.byte	0x9
 2467 045d 0000 047F 		.long	0x47f
 2468 0461 4A        		.byte	0x4a
 2469 0462 02        		.uleb128 0x2
 2470 0463 0000 0000 		.long	.LASF72
 2471 0467 0279      		.word	0x279
68K GAS  /tmp/ccMFIMKI.s 			page 56


 2472 0469 07        		.byte	0x7
 2473 046a 0000 069B 		.long	0x69b
 2474 046e 4E        		.byte	0x4e
 2475 046f 31        		.uleb128 0x31
 2476 0470 0000 0000 		.long	.LASF73
 2477 0474 04        		.byte	0x4
 2478 0475 0281      		.word	0x281
 2479 0477 0B        		.byte	0xb
 2480 0478 0000 06ED 		.long	0x6ed
 2481 047c 0112      		.word	0x112
 2482 047e 00        		.byte	0
 2483 047f 05        		.uleb128 0x5
 2484 0480 0000 0484 		.long	0x484
 2485 0484 09        		.uleb128 0x9
 2486 0485 01        		.byte	0x1
 2487 0486 06        		.byte	0x6
 2488 0487 0000 0000 		.long	.LASF74
 2489 048b 32        		.uleb128 0x32
 2490 048c 0000 0484 		.long	0x484
 2491 0490 05        		.uleb128 0x5
 2492 0491 0000 037A 		.long	0x37a
 2493 0495 1A        		.uleb128 0x1a
 2494 0496 0000 0098 		.long	0x98
 2495 049a 0000 04B3 		.long	0x4b3
 2496 049e 04        		.uleb128 0x4
 2497 049f 0000 0398 		.long	0x398
 2498 04a3 04        		.uleb128 0x4
 2499 04a4 0000 0104 		.long	0x104
 2500 04a8 04        		.uleb128 0x4
 2501 04a9 0000 04B3 		.long	0x4b3
 2502 04ad 04        		.uleb128 0x4
 2503 04ae 0000 0085 		.long	0x85
 2504 04b2 00        		.byte	0
 2505 04b3 05        		.uleb128 0x5
 2506 04b4 0000 048B 		.long	0x48b
 2507 04b8 24        		.uleb128 0x24
 2508 04b9 0000 04B3 		.long	0x4b3
 2509 04bd 05        		.uleb128 0x5
 2510 04be 0000 0495 		.long	0x495
 2511 04c2 1A        		.uleb128 0x1a
 2512 04c3 0000 008C 		.long	0x8c
 2513 04c7 0000 04E0 		.long	0x4e0
 2514 04cb 04        		.uleb128 0x4
 2515 04cc 0000 0398 		.long	0x398
 2516 04d0 04        		.uleb128 0x4
 2517 04d1 0000 0104 		.long	0x104
 2518 04d5 04        		.uleb128 0x4
 2519 04d6 0000 008C 		.long	0x8c
 2520 04da 04        		.uleb128 0x4
 2521 04db 0000 0085 		.long	0x85
 2522 04df 00        		.byte	0
 2523 04e0 05        		.uleb128 0x5
 2524 04e1 0000 04C2 		.long	0x4c2
 2525 04e5 1A        		.uleb128 0x1a
 2526 04e6 0000 0085 		.long	0x85
 2527 04ea 0000 04F9 		.long	0x4f9
 2528 04ee 04        		.uleb128 0x4
68K GAS  /tmp/ccMFIMKI.s 			page 57


 2529 04ef 0000 0398 		.long	0x398
 2530 04f3 04        		.uleb128 0x4
 2531 04f4 0000 0104 		.long	0x104
 2532 04f8 00        		.byte	0
 2533 04f9 05        		.uleb128 0x5
 2534 04fa 0000 04E5 		.long	0x4e5
 2535 04fe 07        		.uleb128 0x7
 2536 04ff 0000 002D 		.long	0x2d
 2537 0503 0000 050E 		.long	0x50e
 2538 0507 06        		.uleb128 0x6
 2539 0508 0000 0049 		.long	0x49
 2540 050c 02        		.byte	0x2
 2541 050d 00        		.byte	0
 2542 050e 07        		.uleb128 0x7
 2543 050f 0000 002D 		.long	0x2d
 2544 0513 0000 051E 		.long	0x51e
 2545 0517 06        		.uleb128 0x6
 2546 0518 0000 0049 		.long	0x49
 2547 051c 00        		.byte	0
 2548 051d 00        		.byte	0
 2549 051e 22        		.uleb128 0x22
 2550 051f 0000 0000 		.long	.LASF75
 2551 0523 04        		.byte	0x4
 2552 0524 010D      		.word	0x10d
 2553 0526 1A        		.byte	0x1a
 2554 0527 0000 0241 		.long	0x241
 2555 052b 05        		.uleb128 0x5
 2556 052c 0000 051E 		.long	0x51e
 2557 0530 33        		.uleb128 0x33
 2558 0531 0000 0000 		.long	.LASF76
 2559 0535 0E        		.byte	0xe
 2560 0536 04        		.byte	0x4
 2561 0537 0131      		.word	0x131
 2562 0539 08        		.byte	0x8
 2563 053a 0000 0566 		.long	0x566
 2564 053e 02        		.uleb128 0x2
 2565 053f 0000 0000 		.long	.LASF77
 2566 0543 0132      		.word	0x132
 2567 0545 12        		.byte	0x12
 2568 0546 0000 0566 		.long	0x566
 2569 054a 00        		.byte	0
 2570 054b 02        		.uleb128 0x2
 2571 054c 0000 0000 		.long	.LASF78
 2572 0550 0133      		.word	0x133
 2573 0552 12        		.byte	0x12
 2574 0553 0000 0566 		.long	0x566
 2575 0557 06        		.byte	0x6
 2576 0558 02        		.uleb128 0x2
 2577 0559 0000 0000 		.long	.LASF79
 2578 055d 0134      		.word	0x134
 2579 055f 12        		.byte	0x12
 2580 0560 0000 003B 		.long	0x3b
 2581 0564 0C        		.byte	0xc
 2582 0565 00        		.byte	0
 2583 0566 07        		.uleb128 0x7
 2584 0567 0000 003B 		.long	0x3b
 2585 056b 0000 0576 		.long	0x576
68K GAS  /tmp/ccMFIMKI.s 			page 58


 2586 056f 06        		.uleb128 0x6
 2587 0570 0000 0049 		.long	0x49
 2588 0574 02        		.byte	0x2
 2589 0575 00        		.byte	0
 2590 0576 34        		.uleb128 0x34
 2591 0577 C4        		.byte	0xc4
 2592 0578 04        		.byte	0x4
 2593 0579 025A      		.word	0x25a
 2594 057b 07        		.byte	0x7
 2595 057c 0000 066B 		.long	0x66b
 2596 0580 02        		.uleb128 0x2
 2597 0581 0000 0000 		.long	.LASF80
 2598 0585 025F      		.word	0x25f
 2599 0587 12        		.byte	0x12
 2600 0588 0000 047F 		.long	0x47f
 2601 058c 00        		.byte	0
 2602 058d 02        		.uleb128 0x2
 2603 058e 0000 0000 		.long	.LASF81
 2604 0592 0260      		.word	0x260
 2605 0594 10        		.byte	0x10
 2606 0595 0000 066B 		.long	0x66b
 2607 0599 04        		.byte	0x4
 2608 059a 02        		.uleb128 0x2
 2609 059b 0000 0000 		.long	.LASF82
 2610 059f 0261      		.word	0x261
 2611 05a1 17        		.byte	0x17
 2612 05a2 0000 0195 		.long	0x195
 2613 05a6 1E        		.byte	0x1e
 2614 05a7 02        		.uleb128 0x2
 2615 05a8 0000 0000 		.long	.LASF83
 2616 05ac 0262      		.word	0x262
 2617 05ae 0F        		.byte	0xf
 2618 05af 0000 0085 		.long	0x85
 2619 05b3 42        		.byte	0x42
 2620 05b4 02        		.uleb128 0x2
 2621 05b5 0000 0000 		.long	.LASF84
 2622 05b9 0263      		.word	0x263
 2623 05bb 2C        		.byte	0x2c
 2624 05bc 0000 0057 		.long	0x57
 2625 05c0 46        		.byte	0x46
 2626 05c1 02        		.uleb128 0x2
 2627 05c2 0000 0000 		.long	.LASF85
 2628 05c6 0264      		.word	0x264
 2629 05c8 1A        		.byte	0x1a
 2630 05c9 0000 0530 		.long	0x530
 2631 05cd 4E        		.byte	0x4e
 2632 05ce 02        		.uleb128 0x2
 2633 05cf 0000 0000 		.long	.LASF86
 2634 05d3 0265      		.word	0x265
 2635 05d5 16        		.byte	0x16
 2636 05d6 0000 00F8 		.long	0xf8
 2637 05da 5C        		.byte	0x5c
 2638 05db 02        		.uleb128 0x2
 2639 05dc 0000 0000 		.long	.LASF87
 2640 05e0 0266      		.word	0x266
 2641 05e2 16        		.byte	0x16
 2642 05e3 0000 00F8 		.long	0xf8
68K GAS  /tmp/ccMFIMKI.s 			page 59


 2643 05e7 64        		.byte	0x64
 2644 05e8 02        		.uleb128 0x2
 2645 05e9 0000 0000 		.long	.LASF88
 2646 05ed 0267      		.word	0x267
 2647 05ef 16        		.byte	0x16
 2648 05f0 0000 00F8 		.long	0xf8
 2649 05f4 6C        		.byte	0x6c
 2650 05f5 02        		.uleb128 0x2
 2651 05f6 0000 0000 		.long	.LASF89
 2652 05fa 0268      		.word	0x268
 2653 05fc 10        		.byte	0x10
 2654 05fd 0000 067B 		.long	0x67b
 2655 0601 74        		.byte	0x74
 2656 0602 02        		.uleb128 0x2
 2657 0603 0000 0000 		.long	.LASF90
 2658 0607 0269      		.word	0x269
 2659 0609 10        		.byte	0x10
 2660 060a 0000 068B 		.long	0x68b
 2661 060e 7C        		.byte	0x7c
 2662 060f 02        		.uleb128 0x2
 2663 0610 0000 0000 		.long	.LASF91
 2664 0614 026A      		.word	0x26a
 2665 0616 0F        		.byte	0xf
 2666 0617 0000 0085 		.long	0x85
 2667 061b 94        		.byte	0x94
 2668 061c 02        		.uleb128 0x2
 2669 061d 0000 0000 		.long	.LASF92
 2670 0621 026B      		.word	0x26b
 2671 0623 16        		.byte	0x16
 2672 0624 0000 00F8 		.long	0xf8
 2673 0628 98        		.byte	0x98
 2674 0629 02        		.uleb128 0x2
 2675 062a 0000 0000 		.long	.LASF93
 2676 062e 026C      		.word	0x26c
 2677 0630 16        		.byte	0x16
 2678 0631 0000 00F8 		.long	0xf8
 2679 0635 A0        		.byte	0xa0
 2680 0636 02        		.uleb128 0x2
 2681 0637 0000 0000 		.long	.LASF94
 2682 063b 026D      		.word	0x26d
 2683 063d 16        		.byte	0x16
 2684 063e 0000 00F8 		.long	0xf8
 2685 0642 A8        		.byte	0xa8
 2686 0643 02        		.uleb128 0x2
 2687 0644 0000 0000 		.long	.LASF95
 2688 0648 026E      		.word	0x26e
 2689 064a 16        		.byte	0x16
 2690 064b 0000 00F8 		.long	0xf8
 2691 064f B0        		.byte	0xb0
 2692 0650 02        		.uleb128 0x2
 2693 0651 0000 0000 		.long	.LASF96
 2694 0655 026F      		.word	0x26f
 2695 0657 16        		.byte	0x16
 2696 0658 0000 00F8 		.long	0xf8
 2697 065c B8        		.byte	0xb8
 2698 065d 02        		.uleb128 0x2
 2699 065e 0000 0000 		.long	.LASF97
68K GAS  /tmp/ccMFIMKI.s 			page 60


 2700 0662 0270      		.word	0x270
 2701 0664 08        		.byte	0x8
 2702 0665 0000 0085 		.long	0x85
 2703 0669 C0        		.byte	0xc0
 2704 066a 00        		.byte	0
 2705 066b 07        		.uleb128 0x7
 2706 066c 0000 0484 		.long	0x484
 2707 0670 0000 067B 		.long	0x67b
 2708 0674 06        		.uleb128 0x6
 2709 0675 0000 0049 		.long	0x49
 2710 0679 19        		.byte	0x19
 2711 067a 00        		.byte	0
 2712 067b 07        		.uleb128 0x7
 2713 067c 0000 0484 		.long	0x484
 2714 0680 0000 068B 		.long	0x68b
 2715 0684 06        		.uleb128 0x6
 2716 0685 0000 0049 		.long	0x49
 2717 0689 07        		.byte	0x7
 2718 068a 00        		.byte	0
 2719 068b 07        		.uleb128 0x7
 2720 068c 0000 0484 		.long	0x484
 2721 0690 0000 069B 		.long	0x69b
 2722 0694 06        		.uleb128 0x6
 2723 0695 0000 0049 		.long	0x49
 2724 0699 17        		.byte	0x17
 2725 069a 00        		.byte	0
 2726 069b 35        		.uleb128 0x35
 2727 069c C4        		.byte	0xc4
 2728 069d 04        		.byte	0x4
 2729 069e 0258      		.word	0x258
 2730 06a0 03        		.byte	0x3
 2731 06a1 0000 06B3 		.long	0x6b3
 2732 06a5 36        		.uleb128 0x36
 2733 06a6 0000 0000 		.long	.LASF57
 2734 06aa 04        		.byte	0x4
 2735 06ab 0271      		.word	0x271
 2736 06ad 0B        		.byte	0xb
 2737 06ae 0000 0576 		.long	0x576
 2738 06b2 00        		.byte	0
 2739 06b3 07        		.uleb128 0x7
 2740 06b4 0000 0484 		.long	0x484
 2741 06b8 0000 06C3 		.long	0x6c3
 2742 06bc 06        		.uleb128 0x6
 2743 06bd 0000 0049 		.long	0x49
 2744 06c1 18        		.byte	0x18
 2745 06c2 00        		.byte	0
 2746 06c3 37        		.uleb128 0x37
 2747 06c4 0000 0000 		.long	.LASF145
 2748 06c8 05        		.uleb128 0x5
 2749 06c9 0000 06C3 		.long	0x6c3
 2750 06cd 25        		.uleb128 0x25
 2751 06ce 0000 06D8 		.long	0x6d8
 2752 06d2 04        		.uleb128 0x4
 2753 06d3 0000 0398 		.long	0x398
 2754 06d7 00        		.byte	0
 2755 06d8 05        		.uleb128 0x5
 2756 06d9 0000 06CD 		.long	0x6cd
68K GAS  /tmp/ccMFIMKI.s 			page 61


 2757 06dd 05        		.uleb128 0x5
 2758 06de 0000 0180 		.long	0x180
 2759 06e2 25        		.uleb128 0x25
 2760 06e3 0000 06ED 		.long	0x6ed
 2761 06e7 04        		.uleb128 0x4
 2762 06e8 0000 0085 		.long	0x85
 2763 06ec 00        		.byte	0
 2764 06ed 05        		.uleb128 0x5
 2765 06ee 0000 06F2 		.long	0x6f2
 2766 06f2 05        		.uleb128 0x5
 2767 06f3 0000 06E2 		.long	0x6e2
 2768 06f7 0E        		.uleb128 0xe
 2769 06f8 0000 0000 		.long	.LASF98
 2770 06fc 06        		.byte	0x6
 2771 06fd 42        		.byte	0x42
 2772 06fe 10        		.byte	0x10
 2773 06ff 0000 051E 		.long	0x51e
 2774 0703 38        		.uleb128 0x38
 2775 0704 0000 070A 		.long	0x70a
 2776 0708 0C        		.uleb128 0xc
 2777 0709 00        		.byte	0
 2778 070a 05        		.uleb128 0x5
 2779 070b 0000 0703 		.long	0x703
 2780 070f 0D        		.uleb128 0xd
 2781 0710 0000 0000 		.long	.LASF99
 2782 0714 08        		.byte	0x8
 2783 0715 07        		.byte	0x7
 2784 0716 0000 0720 		.long	0x720
 2785 071a 05        		.uleb128 0x5
 2786 071b 03        		.byte	0x3
 2787 071c 0000 0000 		.long	com0in
 2788 0720 05        		.uleb128 0x5
 2789 0721 0000 06F7 		.long	0x6f7
 2790 0725 24        		.uleb128 0x24
 2791 0726 0000 0720 		.long	0x720
 2792 072a 0D        		.uleb128 0xd
 2793 072b 0000 0000 		.long	.LASF100
 2794 072f 09        		.byte	0x9
 2795 0730 07        		.byte	0x7
 2796 0731 0000 0720 		.long	0x720
 2797 0735 05        		.uleb128 0x5
 2798 0736 03        		.byte	0x3
 2799 0737 0000 0000 		.long	com0out
 2800 073b 0D        		.uleb128 0xd
 2801 073c 0000 0000 		.long	.LASF101
 2802 0740 0A        		.byte	0xa
 2803 0741 07        		.byte	0x7
 2804 0742 0000 0720 		.long	0x720
 2805 0746 05        		.uleb128 0x5
 2806 0747 03        		.byte	0x3
 2807 0748 0000 0000 		.long	com1in
 2808 074c 0D        		.uleb128 0xd
 2809 074d 0000 0000 		.long	.LASF102
 2810 0751 0B        		.byte	0xb
 2811 0752 07        		.byte	0x7
 2812 0753 0000 0720 		.long	0x720
 2813 0757 05        		.uleb128 0x5
68K GAS  /tmp/ccMFIMKI.s 			page 62


 2814 0758 03        		.byte	0x3
 2815 0759 0000 0000 		.long	com1out
 2816 075d 07        		.uleb128 0x7
 2817 075e 0000 0085 		.long	0x85
 2818 0762 0000 0773 		.long	0x773
 2819 0766 06        		.uleb128 0x6
 2820 0767 0000 0049 		.long	0x49
 2821 076b 02        		.byte	0x2
 2822 076c 06        		.uleb128 0x6
 2823 076d 0000 0049 		.long	0x49
 2824 0771 02        		.byte	0x2
 2825 0772 00        		.byte	0
 2826 0773 0D        		.uleb128 0xd
 2827 0774 0000 0000 		.long	.LASF103
 2828 0778 19        		.byte	0x19
 2829 0779 05        		.byte	0x5
 2830 077a 0000 075D 		.long	0x75d
 2831 077e 05        		.uleb128 0x5
 2832 077f 03        		.byte	0x3
 2833 0780 0000 0000 		.long	b_board
 2834 0784 07        		.uleb128 0x7
 2835 0785 0000 0484 		.long	0x484
 2836 0789 0000 079A 		.long	0x79a
 2837 078d 06        		.uleb128 0x6
 2838 078e 0000 0049 		.long	0x49
 2839 0792 02        		.byte	0x2
 2840 0793 06        		.uleb128 0x6
 2841 0794 0000 0049 		.long	0x49
 2842 0798 02        		.byte	0x2
 2843 0799 00        		.byte	0
 2844 079a 0D        		.uleb128 0xd
 2845 079b 0000 0000 		.long	.LASF104
 2846 079f 1A        		.byte	0x1a
 2847 07a0 06        		.byte	0x6
 2848 07a1 0000 0784 		.long	0x784
 2849 07a5 05        		.uleb128 0x5
 2850 07a6 03        		.byte	0x3
 2851 07a7 0000 0000 		.long	board
 2852 07ab 07        		.uleb128 0x7
 2853 07ac 0000 0085 		.long	0x85
 2854 07b0 0000 07BB 		.long	0x7bb
 2855 07b4 06        		.uleb128 0x6
 2856 07b5 0000 0049 		.long	0x49
 2857 07b9 08        		.byte	0x8
 2858 07ba 00        		.byte	0
 2859 07bb 0D        		.uleb128 0xd
 2860 07bc 0000 0000 		.long	.LASF105
 2861 07c0 1F        		.byte	0x1f
 2862 07c1 05        		.byte	0x5
 2863 07c2 0000 07AB 		.long	0x7ab
 2864 07c6 05        		.uleb128 0x5
 2865 07c7 03        		.byte	0x3
 2866 07c8 0000 0000 		.long	valid_cells
 2867 07cc 0D        		.uleb128 0xd
 2868 07cd 0000 0000 		.long	.LASF106
 2869 07d1 20        		.byte	0x20
 2870 07d2 05        		.byte	0x5
68K GAS  /tmp/ccMFIMKI.s 			page 63


 2871 07d3 0000 0085 		.long	0x85
 2872 07d7 05        		.uleb128 0x5
 2873 07d8 03        		.byte	0x3
 2874 07d9 0000 0000 		.long	num_valid_cells
 2875 07dd 0D        		.uleb128 0xd
 2876 07de 0000 0000 		.long	.LASF107
 2877 07e2 21        		.byte	0x21
 2878 07e3 06        		.byte	0x6
 2879 07e4 0000 07EE 		.long	0x7ee
 2880 07e8 05        		.uleb128 0x5
 2881 07e9 03        		.byte	0x3
 2882 07ea 0000 0000 		.long	player_X_playing
 2883 07ee 09        		.uleb128 0x9
 2884 07ef 01        		.byte	0x1
 2885 07f0 02        		.byte	0x2
 2886 07f1 0000 0000 		.long	.LASF108
 2887 07f5 39        		.uleb128 0x39
 2888 07f6 0000 0000 		.long	.LASF146
 2889 07fa 07        		.byte	0x7
 2890 07fb 45        		.byte	0x45
 2891 07fc 06        		.byte	0x6
 2892 07fd 0000 0803 		.long	0x803
 2893 0801 0C        		.uleb128 0xc
 2894 0802 00        		.byte	0
 2895 0803 3A        		.uleb128 0x3a
 2896 0804 0000 0000 		.long	.LASF109
 2897 0808 07        		.byte	0x7
 2898 0809 43        		.byte	0x43
 2899 080a 06        		.byte	0x6
 2900 080b 0000 0815 		.long	0x815
 2901 080f 04        		.uleb128 0x4
 2902 0810 0000 070A 		.long	0x70a
 2903 0814 00        		.byte	0
 2904 0815 3B        		.uleb128 0x3b
 2905 0816 0000 0000 		.long	.LASF110
 2906 081a 06        		.byte	0x6
 2907 081b 0159      		.word	0x159
 2908 081d 08        		.byte	0x8
 2909 081e 0000 0720 		.long	0x720
 2910 0822 0000 0831 		.long	0x831
 2911 0826 04        		.uleb128 0x4
 2912 0827 0000 0085 		.long	0x85
 2913 082b 04        		.uleb128 0x4
 2914 082c 0000 04B3 		.long	0x4b3
 2915 0830 00        		.byte	0
 2916 0831 10        		.uleb128 0x10
 2917 0832 5600      		.string	"V"
 2918 0834 6B        		.byte	0x6b
 2919 0835 0000 0085 		.long	0x85
 2920 0839 0000 083F 		.long	0x83f
 2921 083d 0C        		.uleb128 0xc
 2922 083e 00        		.byte	0
 2923 083f 1C        		.uleb128 0x1c
 2924 0840 0000 0000 		.long	.LASF111
 2925 0844 CC        		.byte	0xcc
 2926 0845 0000 0085 		.long	0x85
 2927 0849 0000 0859 		.long	0x859
68K GAS  /tmp/ccMFIMKI.s 			page 64


 2928 084d 04        		.uleb128 0x4
 2929 084e 0000 0725 		.long	0x725
 2930 0852 04        		.uleb128 0x4
 2931 0853 0000 04B8 		.long	0x4b8
 2932 0857 0C        		.uleb128 0xc
 2933 0858 00        		.byte	0
 2934 0859 10        		.uleb128 0x10
 2935 085a 5000      		.string	"P"
 2936 085c 57        		.byte	0x57
 2937 085d 0000 0085 		.long	0x85
 2938 0861 0000 0867 		.long	0x867
 2939 0865 0C        		.uleb128 0xc
 2940 0866 00        		.byte	0
 2941 0867 1C        		.uleb128 0x1c
 2942 0868 0000 0000 		.long	.LASF112
 2943 086c C6        		.byte	0xc6
 2944 086d 0000 0085 		.long	0x85
 2945 0871 0000 087B 		.long	0x87b
 2946 0875 04        		.uleb128 0x4
 2947 0876 0000 0720 		.long	0x720
 2948 087a 00        		.byte	0
 2949 087b 1C        		.uleb128 0x1c
 2950 087c 0000 0000 		.long	.LASF113
 2951 0880 CA        		.byte	0xca
 2952 0881 0000 0085 		.long	0x85
 2953 0885 0000 0895 		.long	0x895
 2954 0889 04        		.uleb128 0x4
 2955 088a 0000 0725 		.long	0x725
 2956 088e 04        		.uleb128 0x4
 2957 088f 0000 04B8 		.long	0x4b8
 2958 0893 0C        		.uleb128 0xc
 2959 0894 00        		.byte	0
 2960 0895 3C        		.uleb128 0x3c
 2961 0896 0000 0000 		.long	.LASF129
 2962 089a 01        		.byte	0x1
 2963 089b FC        		.byte	0xfc
 2964 089c 05        		.byte	0x5
 2965 089d 0000 0085 		.long	0x85
 2966 08a1 0000 0000 		.long	.LFB14
 2967 08a5 0000 003C 		.long	.LFE14-.LFB14
 2968 08a9 01        		.uleb128 0x1
 2969 08aa 9C        		.byte	0x9c
 2970 08ab 0000 08E6 		.long	0x8e6
 2971 08af 01        		.uleb128 0x1
 2972 08b0 0000 0000 		.long	.LVL157
 2973 08b4 0000 08E6 		.long	0x8e6
 2974 08b8 01        		.uleb128 0x1
 2975 08b9 0000 0000 		.long	.LVL158
 2976 08bd 0000 0B0B 		.long	0xb0b
 2977 08c1 01        		.uleb128 0x1
 2978 08c2 0000 0000 		.long	.LVL159
 2979 08c6 0000 0803 		.long	0x803
 2980 08ca 01        		.uleb128 0x1
 2981 08cb 0000 0000 		.long	.LVL160
 2982 08cf 0000 0803 		.long	0x803
 2983 08d3 01        		.uleb128 0x1
 2984 08d4 0000 0000 		.long	.LVL161
68K GAS  /tmp/ccMFIMKI.s 			page 65


 2985 08d8 0000 0803 		.long	0x803
 2986 08dc 01        		.uleb128 0x1
 2987 08dd 0000 0000 		.long	.LVL162
 2988 08e1 0000 07F5 		.long	0x7f5
 2989 08e5 00        		.byte	0
 2990 08e6 11        		.uleb128 0x11
 2991 08e7 0000 0000 		.long	.LASF119
 2992 08eb E8        		.byte	0xe8
 2993 08ec 0000 0000 		.long	.LFB13
 2994 08f0 0000 00AC 		.long	.LFE13-.LFB13
 2995 08f4 01        		.uleb128 0x1
 2996 08f5 9C        		.byte	0x9c
 2997 08f6 0000 0944 		.long	0x944
 2998 08fa 12        		.uleb128 0x12
 2999 08fb 0000 0000 		.long	.LASF114
 3000 08ff E9        		.byte	0xe9
 3001 0900 06        		.byte	0x6
 3002 0901 0000 0085 		.long	0x85
 3003 0905 0000 0000 		.long	.LLST51
 3004 0909 0000 0000 		.long	.LVUS51
 3005 090d 01        		.uleb128 0x1
 3006 090e 0000 0000 		.long	.LVL146
 3007 0912 0000 0815 		.long	0x815
 3008 0916 01        		.uleb128 0x1
 3009 0917 0000 0000 		.long	.LVL148
 3010 091b 0000 0815 		.long	0x815
 3011 091f 01        		.uleb128 0x1
 3012 0920 0000 0000 		.long	.LVL150
 3013 0924 0000 0815 		.long	0x815
 3014 0928 01        		.uleb128 0x1
 3015 0929 0000 0000 		.long	.LVL152
 3016 092d 0000 0815 		.long	0x815
 3017 0931 01        		.uleb128 0x1
 3018 0932 0000 0000 		.long	.LVL154
 3019 0936 0000 10EB 		.long	0x10eb
 3020 093a 01        		.uleb128 0x1
 3021 093b 0000 0000 		.long	.LVL155
 3022 093f 0000 10EB 		.long	0x10eb
 3023 0943 00        		.byte	0
 3024 0944 3D        		.uleb128 0x3d
 3025 0945 0000 0000 		.long	.LASF147
 3026 0949 01        		.byte	0x1
 3027 094a BA        		.byte	0xba
 3028 094b 05        		.byte	0x5
 3029 094c 0000 0085 		.long	0x85
 3030 0950 0000 0000 		.long	.LFB12
 3031 0954 0000 01B4 		.long	.LFE12-.LFB12
 3032 0958 01        		.uleb128 0x1
 3033 0959 9C        		.byte	0x9c
 3034 095a 0000 0ABF 		.long	0xabf
 3035 095e 1D        		.uleb128 0x1d
 3036 095f 0000 0000 		.long	.LASF104
 3037 0963 BA        		.byte	0xba
 3038 0964 14        		.byte	0x14
 3039 0965 0000 0ACF 		.long	0xacf
 3040 0969 02        		.uleb128 0x2
 3041 096a 91        		.byte	0x91
68K GAS  /tmp/ccMFIMKI.s 			page 66


 3042 096b 00        		.sleb128 0
 3043 096c 3E        		.uleb128 0x3e
 3044 096d 696E 00   		.string	"in"
 3045 0970 01        		.byte	0x1
 3046 0971 BA        		.byte	0xba
 3047 0972 24        		.byte	0x24
 3048 0973 0000 0085 		.long	0x85
 3049 0977 02        		.uleb128 0x2
 3050 0978 91        		.byte	0x91
 3051 0979 04        		.sleb128 4
 3052 097a 1D        		.uleb128 0x1d
 3053 097b 0000 0000 		.long	.LASF115
 3054 097f BA        		.byte	0xba
 3055 0980 2C        		.byte	0x2c
 3056 0981 0000 0484 		.long	0x484
 3057 0985 02        		.uleb128 0x2
 3058 0986 91        		.byte	0x91
 3059 0987 0B        		.sleb128 11
 3060 0988 0A        		.uleb128 0xa
 3061 0989 726F 7700 		.string	"row"
 3062 098d BB        		.byte	0xbb
 3063 098e 06        		.byte	0x6
 3064 098f 0000 0085 		.long	0x85
 3065 0993 0000 0000 		.long	.LLST35
 3066 0997 0000 0000 		.long	.LVUS35
 3067 099b 0A        		.uleb128 0xa
 3068 099c 636F 6C00 		.string	"col"
 3069 09a0 BC        		.byte	0xbc
 3070 09a1 06        		.byte	0x6
 3071 09a2 0000 0085 		.long	0x85
 3072 09a6 0000 0000 		.long	.LLST36
 3073 09aa 0000 0000 		.long	.LVUS36
 3074 09ae 0A        		.uleb128 0xa
 3075 09af 7769 6E00 		.string	"win"
 3076 09b3 BD        		.byte	0xbd
 3077 09b4 06        		.byte	0x6
 3078 09b5 0000 0085 		.long	0x85
 3079 09b9 0000 0000 		.long	.LLST37
 3080 09bd 0000 0000 		.long	.LVUS37
 3081 09c1 13        		.uleb128 0x13
 3082 09c2 0000 0000 		.long	.LLRL44
 3083 09c6 0000 09DC 		.long	0x9dc
 3084 09ca 0A        		.uleb128 0xa
 3085 09cb 6900      		.string	"i"
 3086 09cd C0        		.byte	0xc0
 3087 09ce 0B        		.byte	0xb
 3088 09cf 0000 0085 		.long	0x85
 3089 09d3 0000 0000 		.long	.LLST45
 3090 09d7 0000 0000 		.long	.LVUS45
 3091 09db 00        		.byte	0
 3092 09dc 1E        		.uleb128 0x1e
 3093 09dd 0000 0000 		.long	.LBB66
 3094 09e1 0000 0022 		.long	.LBE66-.LBB66
 3095 09e5 0000 0A10 		.long	0xa10
 3096 09e9 12        		.uleb128 0x12
 3097 09ea 0000 0000 		.long	.LASF116
 3098 09ee D5        		.byte	0xd5
68K GAS  /tmp/ccMFIMKI.s 			page 67


 3099 09ef 07        		.byte	0x7
 3100 09f0 0000 0085 		.long	0x85
 3101 09f4 0000 0000 		.long	.LLST49
 3102 09f8 0000 0000 		.long	.LVUS49
 3103 09fc 12        		.uleb128 0x12
 3104 09fd 0000 0000 		.long	.LASF117
 3105 0a01 D6        		.byte	0xd6
 3106 0a02 07        		.byte	0x7
 3107 0a03 0000 0085 		.long	0x85
 3108 0a07 0000 0000 		.long	.LLST50
 3109 0a0b 0000 0000 		.long	.LVUS50
 3110 0a0f 00        		.byte	0
 3111 0a10 13        		.uleb128 0x13
 3112 0a11 0000 0000 		.long	.LLRL46
 3113 0a15 0000 0A2D 		.long	0xa2d
 3114 0a19 0A        		.uleb128 0xa
 3115 0a1a 7769 6E00 		.string	"win"
 3116 0a1e DA        		.byte	0xda
 3117 0a1f 07        		.byte	0x7
 3118 0a20 0000 0085 		.long	0x85
 3119 0a24 0000 0000 		.long	.LLST47
 3120 0a28 0000 0000 		.long	.LVUS47
 3121 0a2c 00        		.byte	0
 3122 0a2d 1E        		.uleb128 0x1e
 3123 0a2e 0000 0000 		.long	.LBB65
 3124 0a32 0000 001E 		.long	.LBE65-.LBB65
 3125 0a36 0000 0A4E 		.long	0xa4e
 3126 0a3a 0A        		.uleb128 0xa
 3127 0a3b 7769 6E00 		.string	"win"
 3128 0a3f DE        		.byte	0xde
 3129 0a40 07        		.byte	0x7
 3130 0a41 0000 0085 		.long	0x85
 3131 0a45 0000 0000 		.long	.LLST48
 3132 0a49 0000 0000 		.long	.LVUS48
 3133 0a4d 00        		.byte	0
 3134 0a4e 3F        		.uleb128 0x3f
 3135 0a4f 0000 0AD4 		.long	0xad4
 3136 0a53 0000 0000 		.long	.LBI53
 3137 0a57 02        		.byte	.LVU283
 3138 0a58 0000 0000 		.long	.LLRL38
 3139 0a5c 01        		.byte	0x1
 3140 0a5d BE        		.byte	0xbe
 3141 0a5e 02        		.byte	0x2
 3142 0a5f 0000 0AAC 		.long	0xaac
 3143 0a63 0F        		.uleb128 0xf
 3144 0a64 0000 0AE9 		.long	0xae9
 3145 0a68 0000 0000 		.long	.LLST39
 3146 0a6c 0000 0000 		.long	.LVUS39
 3147 0a70 0F        		.uleb128 0xf
 3148 0a71 0000 0ADE 		.long	0xade
 3149 0a75 0000 0000 		.long	.LLST40
 3150 0a79 0000 0000 		.long	.LVUS40
 3151 0a7d 14        		.uleb128 0x14
 3152 0a7e 0000 0AF4 		.long	0xaf4
 3153 0a82 0000 0000 		.long	.LLRL38
 3154 0a86 08        		.uleb128 0x8
 3155 0a87 0000 0AF5 		.long	0xaf5
68K GAS  /tmp/ccMFIMKI.s 			page 68


 3156 0a8b 0000 0000 		.long	.LLST41
 3157 0a8f 0000 0000 		.long	.LVUS41
 3158 0a93 14        		.uleb128 0x14
 3159 0a94 0000 0AFE 		.long	0xafe
 3160 0a98 0000 0000 		.long	.LLRL42
 3161 0a9c 08        		.uleb128 0x8
 3162 0a9d 0000 0AFF 		.long	0xaff
 3163 0aa1 0000 0000 		.long	.LLST43
 3164 0aa5 0000 0000 		.long	.LVUS43
 3165 0aa9 00        		.byte	0
 3166 0aaa 00        		.byte	0
 3167 0aab 00        		.byte	0
 3168 0aac 01        		.uleb128 0x1
 3169 0aad 0000 0000 		.long	.LVL106
 3170 0ab1 0000 10F4 		.long	0x10f4
 3171 0ab5 01        		.uleb128 0x1
 3172 0ab6 0000 0000 		.long	.LVL108
 3173 0aba 0000 10FD 		.long	0x10fd
 3174 0abe 00        		.byte	0
 3175 0abf 07        		.uleb128 0x7
 3176 0ac0 0000 0484 		.long	0x484
 3177 0ac4 0000 0ACF 		.long	0xacf
 3178 0ac8 06        		.uleb128 0x6
 3179 0ac9 0000 0049 		.long	0x49
 3180 0acd 02        		.byte	0x2
 3181 0ace 00        		.byte	0
 3182 0acf 05        		.uleb128 0x5
 3183 0ad0 0000 0ABF 		.long	0xabf
 3184 0ad4 26        		.uleb128 0x26
 3185 0ad5 0000 0000 		.long	.LASF118
 3186 0ad9 B0        		.byte	0xb0
 3187 0ada 0000 0B0B 		.long	0xb0b
 3188 0ade 15        		.uleb128 0x15
 3189 0adf 0000 0000 		.long	.LASF104
 3190 0ae3 B0        		.byte	0xb0
 3191 0ae4 18        		.byte	0x18
 3192 0ae5 0000 0ACF 		.long	0xacf
 3193 0ae9 15        		.uleb128 0x15
 3194 0aea 0000 0000 		.long	.LASF115
 3195 0aee B0        		.byte	0xb0
 3196 0aef 29        		.byte	0x29
 3197 0af0 0000 0484 		.long	0x484
 3198 0af4 1F        		.uleb128 0x1f
 3199 0af5 16        		.uleb128 0x16
 3200 0af6 6900      		.string	"i"
 3201 0af8 B1        		.byte	0xb1
 3202 0af9 0B        		.byte	0xb
 3203 0afa 0000 0085 		.long	0x85
 3204 0afe 1F        		.uleb128 0x1f
 3205 0aff 16        		.uleb128 0x16
 3206 0b00 6A00      		.string	"j"
 3207 0b02 B2        		.byte	0xb2
 3208 0b03 0C        		.byte	0xc
 3209 0b04 0000 0085 		.long	0x85
 3210 0b08 00        		.byte	0
 3211 0b09 00        		.byte	0
 3212 0b0a 00        		.byte	0
68K GAS  /tmp/ccMFIMKI.s 			page 69


 3213 0b0b 11        		.uleb128 0x11
 3214 0b0c 0000 0000 		.long	.LASF120
 3215 0b10 93        		.byte	0x93
 3216 0b11 0000 0000 		.long	.LFB10
 3217 0b15 0000 016E 		.long	.LFE10-.LFB10
 3218 0b19 01        		.uleb128 0x1
 3219 0b1a 9C        		.byte	0x9c
 3220 0b1b 0000 0BD4 		.long	0xbd4
 3221 0b1f 13        		.uleb128 0x13
 3222 0b20 0000 0000 		.long	.LLRL27
 3223 0b24 0000 0BAF 		.long	0xbaf
 3224 0b28 0A        		.uleb128 0xa
 3225 0b29 6900      		.string	"i"
 3226 0b2b 97        		.byte	0x97
 3227 0b2c 0E        		.byte	0xe
 3228 0b2d 0000 0085 		.long	0x85
 3229 0b31 0000 0000 		.long	.LLST28
 3230 0b35 0000 0000 		.long	.LVUS28
 3231 0b39 13        		.uleb128 0x13
 3232 0b3a 0000 0000 		.long	.LLRL29
 3233 0b3e 0000 0B8A 		.long	0xb8a
 3234 0b42 0A        		.uleb128 0xa
 3235 0b43 6A00      		.string	"j"
 3236 0b45 98        		.byte	0x98
 3237 0b46 12        		.byte	0x12
 3238 0b47 0000 0085 		.long	0x85
 3239 0b4b 0000 0000 		.long	.LLST30
 3240 0b4f 0000 0000 		.long	.LVUS30
 3241 0b53 01        		.uleb128 0x1
 3242 0b54 0000 0000 		.long	.LVL80
 3243 0b58 0000 1106 		.long	0x1106
 3244 0b5c 01        		.uleb128 0x1
 3245 0b5d 0000 0000 		.long	.LVL81
 3246 0b61 0000 1106 		.long	0x1106
 3247 0b65 01        		.uleb128 0x1
 3248 0b66 0000 0000 		.long	.LVL83
 3249 0b6a 0000 10EB 		.long	0x10eb
 3250 0b6e 01        		.uleb128 0x1
 3251 0b6f 0000 0000 		.long	.LVL84
 3252 0b73 0000 10EB 		.long	0x10eb
 3253 0b77 01        		.uleb128 0x1
 3254 0b78 0000 0000 		.long	.LVL85
 3255 0b7c 0000 1106 		.long	0x1106
 3256 0b80 01        		.uleb128 0x1
 3257 0b81 0000 0000 		.long	.LVL86
 3258 0b85 0000 1106 		.long	0x1106
 3259 0b89 00        		.byte	0
 3260 0b8a 01        		.uleb128 0x1
 3261 0b8b 0000 0000 		.long	.LVL87
 3262 0b8f 0000 110F 		.long	0x110f
 3263 0b93 01        		.uleb128 0x1
 3264 0b94 0000 0000 		.long	.LVL88
 3265 0b98 0000 110F 		.long	0x110f
 3266 0b9c 01        		.uleb128 0x1
 3267 0b9d 0000 0000 		.long	.LVL89
 3268 0ba1 0000 10EB 		.long	0x10eb
 3269 0ba5 01        		.uleb128 0x1
68K GAS  /tmp/ccMFIMKI.s 			page 70


 3270 0ba6 0000 0000 		.long	.LVL90
 3271 0baa 0000 10EB 		.long	0x10eb
 3272 0bae 00        		.byte	0
 3273 0baf 01        		.uleb128 0x1
 3274 0bb0 0000 0000 		.long	.LVL77
 3275 0bb4 0000 10EB 		.long	0x10eb
 3276 0bb8 01        		.uleb128 0x1
 3277 0bb9 0000 0000 		.long	.LVL78
 3278 0bbd 0000 10EB 		.long	0x10eb
 3279 0bc1 01        		.uleb128 0x1
 3280 0bc2 0000 0000 		.long	.LVL91
 3281 0bc6 0000 110F 		.long	0x110f
 3282 0bca 01        		.uleb128 0x1
 3283 0bcb 0000 0000 		.long	.LVL92
 3284 0bcf 0000 110F 		.long	0x110f
 3285 0bd3 00        		.byte	0
 3286 0bd4 11        		.uleb128 0x11
 3287 0bd5 0000 0000 		.long	.LASF121
 3288 0bd9 87        		.byte	0x87
 3289 0bda 0000 0000 		.long	.LFB9
 3290 0bde 0000 0056 		.long	.LFE9-.LFB9
 3291 0be2 01        		.uleb128 0x1
 3292 0be3 9C        		.byte	0x9c
 3293 0be4 0000 0C0D 		.long	0xc0d
 3294 0be8 01        		.uleb128 0x1
 3295 0be9 0000 0000 		.long	.LVL73
 3296 0bed 0000 10EB 		.long	0x10eb
 3297 0bf1 01        		.uleb128 0x1
 3298 0bf2 0000 0000 		.long	.LVL74
 3299 0bf6 0000 0E89 		.long	0xe89
 3300 0bfa 01        		.uleb128 0x1
 3301 0bfb 0000 0000 		.long	.LVL75
 3302 0bff 0000 0E89 		.long	0xe89
 3303 0c03 01        		.uleb128 0x1
 3304 0c04 0000 0000 		.long	.LVL76
 3305 0c08 0000 10EB 		.long	0x10eb
 3306 0c0c 00        		.byte	0
 3307 0c0d 11        		.uleb128 0x11
 3308 0c0e 0000 0000 		.long	.LASF122
 3309 0c12 6E        		.byte	0x6e
 3310 0c13 0000 0000 		.long	.LFB8
 3311 0c17 0000 0100 		.long	.LFE8-.LFB8
 3312 0c1b 01        		.uleb128 0x1
 3313 0c1c 9C        		.byte	0x9c
 3314 0c1d 0000 0D4B 		.long	0xd4b
 3315 0c21 20        		.uleb128 0x20
 3316 0c22 0000 0000 		.long	.LLRL19
 3317 0c26 10        		.uleb128 0x10
 3318 0c27 5000      		.string	"P"
 3319 0c29 57        		.byte	0x57
 3320 0c2a 0000 0085 		.long	0x85
 3321 0c2e 0000 0C34 		.long	0xc34
 3322 0c32 0C        		.uleb128 0xc
 3323 0c33 00        		.byte	0
 3324 0c34 27        		.uleb128 0x27
 3325 0c35 0000 0000 		.long	.LASF125
 3326 0c39 71        		.byte	0x71
68K GAS  /tmp/ccMFIMKI.s 			page 71


 3327 0c3a 0000 0085 		.long	0x85
 3328 0c3e 02        		.uleb128 0x2
 3329 0c3f 91        		.byte	0x91
 3330 0c40 78        		.sleb128 -8
 3331 0c41 12        		.uleb128 0x12
 3332 0c42 0000 0000 		.long	.LASF123
 3333 0c46 72        		.byte	0x72
 3334 0c47 08        		.byte	0x8
 3335 0c48 0000 07EE 		.long	0x7ee
 3336 0c4c 0000 0000 		.long	.LLST20
 3337 0c50 0000 0000 		.long	.LVUS20
 3338 0c54 10        		.uleb128 0x10
 3339 0c55 5600      		.string	"V"
 3340 0c57 6B        		.byte	0x6b
 3341 0c58 0000 0085 		.long	0x85
 3342 0c5c 0000 0C62 		.long	0xc62
 3343 0c60 0C        		.uleb128 0xc
 3344 0c61 00        		.byte	0
 3345 0c62 1B        		.uleb128 0x1b
 3346 0c63 0000 0FEE 		.long	0xfee
 3347 0c67 0000 0000 		.long	.LBI29
 3348 0c6b 00        		.byte	.LVU156
 3349 0c6c 0000 0000 		.long	.LBB29
 3350 0c70 0000 001E 		.long	.LBE29-.LBB29
 3351 0c74 7B        		.byte	0x7b
 3352 0c75 08        		.byte	0x8
 3353 0c76 0000 0CA3 		.long	0xca3
 3354 0c7a 0F        		.uleb128 0xf
 3355 0c7b 0000 0FFF 		.long	0xfff
 3356 0c7f 0000 0000 		.long	.LLST21
 3357 0c83 0000 0000 		.long	.LVUS21
 3358 0c87 28        		.uleb128 0x28
 3359 0c88 0000 100A 		.long	0x100a
 3360 0c8c 0000 0000 		.long	.LBB30
 3361 0c90 0000 001E 		.long	.LBE30-.LBB30
 3362 0c94 08        		.uleb128 0x8
 3363 0c95 0000 100B 		.long	0x100b
 3364 0c99 0000 0000 		.long	.LLST22
 3365 0c9d 0000 0000 		.long	.LVUS22
 3366 0ca1 00        		.byte	0
 3367 0ca2 00        		.byte	0
 3368 0ca3 1B        		.uleb128 0x1b
 3369 0ca4 0000 0F57 		.long	0xf57
 3370 0ca8 0000 0000 		.long	.LBI31
 3371 0cac 02        		.byte	.LVU169
 3372 0cad 0000 0000 		.long	.LBB31
 3373 0cb1 0000 002A 		.long	.LBE31-.LBB31
 3374 0cb5 7D        		.byte	0x7d
 3375 0cb6 05        		.byte	0x5
 3376 0cb7 0000 0D01 		.long	0xd01
 3377 0cbb 0F        		.uleb128 0xf
 3378 0cbc 0000 0F6C 		.long	0xf6c
 3379 0cc0 0000 0000 		.long	.LLST23
 3380 0cc4 0000 0000 		.long	.LVUS23
 3381 0cc8 0F        		.uleb128 0xf
 3382 0cc9 0000 0F61 		.long	0xf61
 3383 0ccd 0000 0000 		.long	.LLST24
68K GAS  /tmp/ccMFIMKI.s 			page 72


 3384 0cd1 0000 0000 		.long	.LVUS24
 3385 0cd5 08        		.uleb128 0x8
 3386 0cd6 0000 0F77 		.long	0xf77
 3387 0cda 0000 0000 		.long	.LLST25
 3388 0cde 0000 0000 		.long	.LVUS25
 3389 0ce2 08        		.uleb128 0x8
 3390 0ce3 0000 0F82 		.long	0xf82
 3391 0ce7 0000 0000 		.long	.LLST26
 3392 0ceb 0000 0000 		.long	.LVUS26
 3393 0cef 29        		.uleb128 0x29
 3394 0cf0 0000 0000 		.long	.LVL65
 3395 0cf4 02        		.uleb128 0x2
 3396 0cf5 74        		.byte	0x74
 3397 0cf6 00        		.sleb128 0
 3398 0cf7 01        		.uleb128 0x1
 3399 0cf8 0000 0000 		.long	.LVL66
 3400 0cfc 0000 10FD 		.long	0x10fd
 3401 0d00 00        		.byte	0
 3402 0d01 01        		.uleb128 0x1
 3403 0d02 0000 0000 		.long	.LVL55
 3404 0d06 0000 0859 		.long	0x859
 3405 0d0a 01        		.uleb128 0x1
 3406 0d0b 0000 0000 		.long	.LVL57
 3407 0d0f 0000 10EB 		.long	0x10eb
 3408 0d13 01        		.uleb128 0x1
 3409 0d14 0000 0000 		.long	.LVL58
 3410 0d18 0000 1118 		.long	0x1118
 3411 0d1c 01        		.uleb128 0x1
 3412 0d1d 0000 0000 		.long	.LVL63
 3413 0d21 0000 10EB 		.long	0x10eb
 3414 0d25 01        		.uleb128 0x1
 3415 0d26 0000 0000 		.long	.LVL68
 3416 0d2a 0000 0F8E 		.long	0xf8e
 3417 0d2e 01        		.uleb128 0x1
 3418 0d2f 0000 0000 		.long	.LVL69
 3419 0d33 0000 0E89 		.long	0xe89
 3420 0d37 01        		.uleb128 0x1
 3421 0d38 0000 0000 		.long	.LVL70
 3422 0d3c 0000 0831 		.long	0x831
 3423 0d40 01        		.uleb128 0x1
 3424 0d41 0000 0000 		.long	.LVL71
 3425 0d45 0000 0859 		.long	0x859
 3426 0d49 00        		.byte	0
 3427 0d4a 00        		.byte	0
 3428 0d4b 11        		.uleb128 0x11
 3429 0d4c 0000 0000 		.long	.LASF124
 3430 0d50 54        		.byte	0x54
 3431 0d51 0000 0000 		.long	.LFB7
 3432 0d55 0000 00FC 		.long	.LFE7-.LFB7
 3433 0d59 01        		.uleb128 0x1
 3434 0d5a 9C        		.byte	0x9c
 3435 0d5b 0000 0E89 		.long	0xe89
 3436 0d5f 20        		.uleb128 0x20
 3437 0d60 0000 0000 		.long	.LLRL11
 3438 0d64 10        		.uleb128 0x10
 3439 0d65 5000      		.string	"P"
 3440 0d67 57        		.byte	0x57
68K GAS  /tmp/ccMFIMKI.s 			page 73


 3441 0d68 0000 0085 		.long	0x85
 3442 0d6c 0000 0D72 		.long	0xd72
 3443 0d70 0C        		.uleb128 0xc
 3444 0d71 00        		.byte	0
 3445 0d72 27        		.uleb128 0x27
 3446 0d73 0000 0000 		.long	.LASF125
 3447 0d77 58        		.byte	0x58
 3448 0d78 0000 0085 		.long	0x85
 3449 0d7c 02        		.uleb128 0x2
 3450 0d7d 91        		.byte	0x91
 3451 0d7e 78        		.sleb128 -8
 3452 0d7f 12        		.uleb128 0x12
 3453 0d80 0000 0000 		.long	.LASF123
 3454 0d84 59        		.byte	0x59
 3455 0d85 08        		.byte	0x8
 3456 0d86 0000 07EE 		.long	0x7ee
 3457 0d8a 0000 0000 		.long	.LLST12
 3458 0d8e 0000 0000 		.long	.LVUS12
 3459 0d92 10        		.uleb128 0x10
 3460 0d93 5600      		.string	"V"
 3461 0d95 6B        		.byte	0x6b
 3462 0d96 0000 0085 		.long	0x85
 3463 0d9a 0000 0DA0 		.long	0xda0
 3464 0d9e 0C        		.uleb128 0xc
 3465 0d9f 00        		.byte	0
 3466 0da0 1B        		.uleb128 0x1b
 3467 0da1 0000 0FEE 		.long	0xfee
 3468 0da5 0000 0000 		.long	.LBI23
 3469 0da9 00        		.byte	.LVU105
 3470 0daa 0000 0000 		.long	.LBB23
 3471 0dae 0000 001E 		.long	.LBE23-.LBB23
 3472 0db2 62        		.byte	0x62
 3473 0db3 08        		.byte	0x8
 3474 0db4 0000 0DE1 		.long	0xde1
 3475 0db8 0F        		.uleb128 0xf
 3476 0db9 0000 0FFF 		.long	0xfff
 3477 0dbd 0000 0000 		.long	.LLST13
 3478 0dc1 0000 0000 		.long	.LVUS13
 3479 0dc5 28        		.uleb128 0x28
 3480 0dc6 0000 100A 		.long	0x100a
 3481 0dca 0000 0000 		.long	.LBB24
 3482 0dce 0000 001E 		.long	.LBE24-.LBB24
 3483 0dd2 08        		.uleb128 0x8
 3484 0dd3 0000 100B 		.long	0x100b
 3485 0dd7 0000 0000 		.long	.LLST14
 3486 0ddb 0000 0000 		.long	.LVUS14
 3487 0ddf 00        		.byte	0
 3488 0de0 00        		.byte	0
 3489 0de1 1B        		.uleb128 0x1b
 3490 0de2 0000 0F57 		.long	0xf57
 3491 0de6 0000 0000 		.long	.LBI25
 3492 0dea 02        		.byte	.LVU118
 3493 0deb 0000 0000 		.long	.LBB25
 3494 0def 0000 002A 		.long	.LBE25-.LBB25
 3495 0df3 64        		.byte	0x64
 3496 0df4 05        		.byte	0x5
 3497 0df5 0000 0E3F 		.long	0xe3f
68K GAS  /tmp/ccMFIMKI.s 			page 74


 3498 0df9 0F        		.uleb128 0xf
 3499 0dfa 0000 0F6C 		.long	0xf6c
 3500 0dfe 0000 0000 		.long	.LLST15
 3501 0e02 0000 0000 		.long	.LVUS15
 3502 0e06 0F        		.uleb128 0xf
 3503 0e07 0000 0F61 		.long	0xf61
 3504 0e0b 0000 0000 		.long	.LLST16
 3505 0e0f 0000 0000 		.long	.LVUS16
 3506 0e13 08        		.uleb128 0x8
 3507 0e14 0000 0F77 		.long	0xf77
 3508 0e18 0000 0000 		.long	.LLST17
 3509 0e1c 0000 0000 		.long	.LVUS17
 3510 0e20 08        		.uleb128 0x8
 3511 0e21 0000 0F82 		.long	0xf82
 3512 0e25 0000 0000 		.long	.LLST18
 3513 0e29 0000 0000 		.long	.LVUS18
 3514 0e2d 29        		.uleb128 0x29
 3515 0e2e 0000 0000 		.long	.LVL47
 3516 0e32 02        		.uleb128 0x2
 3517 0e33 74        		.byte	0x74
 3518 0e34 00        		.sleb128 0
 3519 0e35 01        		.uleb128 0x1
 3520 0e36 0000 0000 		.long	.LVL48
 3521 0e3a 0000 10FD 		.long	0x10fd
 3522 0e3e 00        		.byte	0
 3523 0e3f 01        		.uleb128 0x1
 3524 0e40 0000 0000 		.long	.LVL37
 3525 0e44 0000 0859 		.long	0x859
 3526 0e48 01        		.uleb128 0x1
 3527 0e49 0000 0000 		.long	.LVL39
 3528 0e4d 0000 10EB 		.long	0x10eb
 3529 0e51 01        		.uleb128 0x1
 3530 0e52 0000 0000 		.long	.LVL40
 3531 0e56 0000 1118 		.long	0x1118
 3532 0e5a 01        		.uleb128 0x1
 3533 0e5b 0000 0000 		.long	.LVL45
 3534 0e5f 0000 10EB 		.long	0x10eb
 3535 0e63 01        		.uleb128 0x1
 3536 0e64 0000 0000 		.long	.LVL50
 3537 0e68 0000 0F8E 		.long	0xf8e
 3538 0e6c 01        		.uleb128 0x1
 3539 0e6d 0000 0000 		.long	.LVL51
 3540 0e71 0000 0E89 		.long	0xe89
 3541 0e75 01        		.uleb128 0x1
 3542 0e76 0000 0000 		.long	.LVL52
 3543 0e7a 0000 0831 		.long	0x831
 3544 0e7e 01        		.uleb128 0x1
 3545 0e7f 0000 0000 		.long	.LVL53
 3546 0e83 0000 0859 		.long	0x859
 3547 0e87 00        		.byte	0
 3548 0e88 00        		.byte	0
 3549 0e89 11        		.uleb128 0x11
 3550 0e8a 0000 0000 		.long	.LASF126
 3551 0e8e 3E        		.byte	0x3e
 3552 0e8f 0000 0000 		.long	.LFB6
 3553 0e93 0000 0138 		.long	.LFE6-.LFB6
 3554 0e97 01        		.uleb128 0x1
68K GAS  /tmp/ccMFIMKI.s 			page 75


 3555 0e98 9C        		.byte	0x9c
 3556 0e99 0000 0F57 		.long	0xf57
 3557 0e9d 12        		.uleb128 0x12
 3558 0e9e 0000 0000 		.long	.LASF127
 3559 0ea2 3F        		.byte	0x3f
 3560 0ea3 08        		.byte	0x8
 3561 0ea4 0000 0720 		.long	0x720
 3562 0ea8 0000 0000 		.long	.LLST7
 3563 0eac 0000 0000 		.long	.LVUS7
 3564 0eb0 13        		.uleb128 0x13
 3565 0eb1 0000 0000 		.long	.LLRL8
 3566 0eb5 0000 0F29 		.long	0xf29
 3567 0eb9 0A        		.uleb128 0xa
 3568 0eba 6900      		.string	"i"
 3569 0ebc 45        		.byte	0x45
 3570 0ebd 0F        		.byte	0xf
 3571 0ebe 0000 0085 		.long	0x85
 3572 0ec2 0000 0000 		.long	.LLST9
 3573 0ec6 0000 0000 		.long	.LVUS9
 3574 0eca 1E        		.uleb128 0x1e
 3575 0ecb 0000 0000 		.long	.LBB20
 3576 0ecf 0000 004E 		.long	.LBE20-.LBB20
 3577 0ed3 0000 0F16 		.long	0xf16
 3578 0ed7 0A        		.uleb128 0xa
 3579 0ed8 6A00      		.string	"j"
 3580 0eda 46        		.byte	0x46
 3581 0edb 13        		.byte	0x13
 3582 0edc 0000 0085 		.long	0x85
 3583 0ee0 0000 0000 		.long	.LLST10
 3584 0ee4 0000 0000 		.long	.LVUS10
 3585 0ee8 01        		.uleb128 0x1
 3586 0ee9 0000 0000 		.long	.LVL23
 3587 0eed 0000 1106 		.long	0x1106
 3588 0ef1 01        		.uleb128 0x1
 3589 0ef2 0000 0000 		.long	.LVL24
 3590 0ef6 0000 110F 		.long	0x110f
 3591 0efa 01        		.uleb128 0x1
 3592 0efb 0000 0000 		.long	.LVL25
 3593 0eff 0000 1106 		.long	0x1106
 3594 0f03 01        		.uleb128 0x1
 3595 0f04 0000 0000 		.long	.LVL26
 3596 0f08 0000 110F 		.long	0x110f
 3597 0f0c 01        		.uleb128 0x1
 3598 0f0d 0000 0000 		.long	.LVL27
 3599 0f11 0000 1106 		.long	0x1106
 3600 0f15 00        		.byte	0
 3601 0f16 01        		.uleb128 0x1
 3602 0f17 0000 0000 		.long	.LVL28
 3603 0f1b 0000 110F 		.long	0x110f
 3604 0f1f 01        		.uleb128 0x1
 3605 0f20 0000 0000 		.long	.LVL29
 3606 0f24 0000 10EB 		.long	0x10eb
 3607 0f28 00        		.byte	0
 3608 0f29 01        		.uleb128 0x1
 3609 0f2a 0000 0000 		.long	.LVL21
 3610 0f2e 0000 10EB 		.long	0x10eb
 3611 0f32 01        		.uleb128 0x1
68K GAS  /tmp/ccMFIMKI.s 			page 76


 3612 0f33 0000 0000 		.long	.LVL30
 3613 0f37 0000 110F 		.long	0x110f
 3614 0f3b 01        		.uleb128 0x1
 3615 0f3c 0000 0000 		.long	.LVL31
 3616 0f40 0000 1106 		.long	0x1106
 3617 0f44 01        		.uleb128 0x1
 3618 0f45 0000 0000 		.long	.LVL32
 3619 0f49 0000 0867 		.long	0x867
 3620 0f4d 01        		.uleb128 0x1
 3621 0f4e 0000 0000 		.long	.LVL36
 3622 0f52 0000 10EB 		.long	0x10eb
 3623 0f56 00        		.byte	0
 3624 0f57 26        		.uleb128 0x26
 3625 0f58 0000 0000 		.long	.LASF128
 3626 0f5c 38        		.byte	0x38
 3627 0f5d 0000 0F8E 		.long	0xf8e
 3628 0f61 15        		.uleb128 0x15
 3629 0f62 0000 0000 		.long	.LASF125
 3630 0f66 38        		.byte	0x38
 3631 0f67 17        		.byte	0x17
 3632 0f68 0000 0085 		.long	0x85
 3633 0f6c 15        		.uleb128 0x15
 3634 0f6d 0000 0000 		.long	.LASF115
 3635 0f71 38        		.byte	0x38
 3636 0f72 22        		.byte	0x22
 3637 0f73 0000 0484 		.long	0x484
 3638 0f77 16        		.uleb128 0x16
 3639 0f78 726F 7700 		.string	"row"
 3640 0f7c 39        		.byte	0x39
 3641 0f7d 09        		.byte	0x9
 3642 0f7e 0000 0085 		.long	0x85
 3643 0f82 16        		.uleb128 0x16
 3644 0f83 636F 6C00 		.string	"col"
 3645 0f87 3A        		.byte	0x3a
 3646 0f88 09        		.byte	0x9
 3647 0f89 0000 0085 		.long	0x85
 3648 0f8d 00        		.byte	0
 3649 0f8e 40        		.uleb128 0x40
 3650 0f8f 0000 0000 		.long	.LASF130
 3651 0f93 01        		.byte	0x1
 3652 0f94 2B        		.byte	0x2b
 3653 0f95 06        		.byte	0x6
 3654 0f96 0000 0000 		.long	.LFB4
 3655 0f9a 0000 006A 		.long	.LFE4-.LFB4
 3656 0f9e 01        		.uleb128 0x1
 3657 0f9f 9C        		.byte	0x9c
 3658 0fa0 0000 0FEE 		.long	0xfee
 3659 0fa4 1D        		.uleb128 0x1d
 3660 0fa5 0000 0000 		.long	.LASF125
 3661 0fa9 2B        		.byte	0x2b
 3662 0faa 16        		.byte	0x16
 3663 0fab 0000 0085 		.long	0x85
 3664 0faf 02        		.uleb128 0x2
 3665 0fb0 91        		.byte	0x91
 3666 0fb1 00        		.sleb128 0
 3667 0fb2 20        		.uleb128 0x20
 3668 0fb3 0000 0000 		.long	.LLRL2
68K GAS  /tmp/ccMFIMKI.s 			page 77


 3669 0fb7 0A        		.uleb128 0xa
 3670 0fb8 6900      		.string	"i"
 3671 0fba 2C        		.byte	0x2c
 3672 0fbb 0E        		.byte	0xe
 3673 0fbc 0000 0085 		.long	0x85
 3674 0fc0 0000 0000 		.long	.LLST3
 3675 0fc4 0000 0000 		.long	.LVUS3
 3676 0fc8 41        		.uleb128 0x41
 3677 0fc9 0000 0000 		.long	.LBB17
 3678 0fcd 0000 0036 		.long	.LBE17-.LBB17
 3679 0fd1 0A        		.uleb128 0xa
 3680 0fd2 6A00      		.string	"j"
 3681 0fd4 2F        		.byte	0x2f
 3682 0fd5 16        		.byte	0x16
 3683 0fd6 0000 0085 		.long	0x85
 3684 0fda 0000 0000 		.long	.LLST4
 3685 0fde 0000 0000 		.long	.LVUS4
 3686 0fe2 01        		.uleb128 0x1
 3687 0fe3 0000 0000 		.long	.LVL14
 3688 0fe7 0000 1121 		.long	0x1121
 3689 0feb 00        		.byte	0
 3690 0fec 00        		.byte	0
 3691 0fed 00        		.byte	0
 3692 0fee 42        		.uleb128 0x42
 3693 0fef 0000 0000 		.long	.LASF131
 3694 0ff3 01        		.byte	0x1
 3695 0ff4 24        		.byte	0x24
 3696 0ff5 06        		.byte	0x6
 3697 0ff6 0000 07EE 		.long	0x7ee
 3698 0ffa 01        		.byte	0x1
 3699 0ffb 0000 1016 		.long	0x1016
 3700 0fff 15        		.uleb128 0x15
 3701 1000 0000 0000 		.long	.LASF125
 3702 1004 24        		.byte	0x24
 3703 1005 18        		.byte	0x18
 3704 1006 0000 0085 		.long	0x85
 3705 100a 1F        		.uleb128 0x1f
 3706 100b 16        		.uleb128 0x16
 3707 100c 6900      		.string	"i"
 3708 100e 25        		.byte	0x25
 3709 100f 0E        		.byte	0xe
 3710 1010 0000 0085 		.long	0x85
 3711 1014 00        		.byte	0
 3712 1015 00        		.byte	0
 3713 1016 21        		.uleb128 0x21
 3714 1017 0000 0FEE 		.long	0xfee
 3715 101b 0000 0000 		.long	.LFB3
 3716 101f 0000 0026 		.long	.LFE3-.LFB3
 3717 1023 01        		.uleb128 0x1
 3718 1024 9C        		.byte	0x9c
 3719 1025 0000 1049 		.long	0x1049
 3720 1029 17        		.uleb128 0x17
 3721 102a 0000 0FFF 		.long	0xfff
 3722 102e 02        		.uleb128 0x2
 3723 102f 91        		.byte	0x91
 3724 1030 00        		.sleb128 0
 3725 1031 14        		.uleb128 0x14
68K GAS  /tmp/ccMFIMKI.s 			page 78


 3726 1032 0000 100A 		.long	0x100a
 3727 1036 0000 0000 		.long	.LLRL0
 3728 103a 08        		.uleb128 0x8
 3729 103b 0000 100B 		.long	0x100b
 3730 103f 0000 0000 		.long	.LLST1
 3731 1043 0000 0000 		.long	.LVUS1
 3732 1047 00        		.byte	0
 3733 1048 00        		.byte	0
 3734 1049 21        		.uleb128 0x21
 3735 104a 0000 0F57 		.long	0xf57
 3736 104e 0000 0000 		.long	.LFB5
 3737 1052 0000 003E 		.long	.LFE5-.LFB5
 3738 1056 01        		.uleb128 0x1
 3739 1057 9C        		.byte	0x9c
 3740 1058 0000 1099 		.long	0x1099
 3741 105c 17        		.uleb128 0x17
 3742 105d 0000 0F61 		.long	0xf61
 3743 1061 02        		.uleb128 0x2
 3744 1062 91        		.byte	0x91
 3745 1063 00        		.sleb128 0
 3746 1064 17        		.uleb128 0x17
 3747 1065 0000 0F6C 		.long	0xf6c
 3748 1069 02        		.uleb128 0x2
 3749 106a 91        		.byte	0x91
 3750 106b 07        		.sleb128 7
 3751 106c 08        		.uleb128 0x8
 3752 106d 0000 0F77 		.long	0xf77
 3753 1071 0000 0000 		.long	.LLST5
 3754 1075 0000 0000 		.long	.LVUS5
 3755 1079 08        		.uleb128 0x8
 3756 107a 0000 0F82 		.long	0xf82
 3757 107e 0000 0000 		.long	.LLST6
 3758 1082 0000 0000 		.long	.LVUS6
 3759 1086 01        		.uleb128 0x1
 3760 1087 0000 0000 		.long	.LVL17
 3761 108b 0000 10F4 		.long	0x10f4
 3762 108f 01        		.uleb128 0x1
 3763 1090 0000 0000 		.long	.LVL18
 3764 1094 0000 10FD 		.long	0x10fd
 3765 1098 00        		.byte	0
 3766 1099 21        		.uleb128 0x21
 3767 109a 0000 0AD4 		.long	0xad4
 3768 109e 0000 0000 		.long	.LFB11
 3769 10a2 0000 005E 		.long	.LFE11-.LFB11
 3770 10a6 01        		.uleb128 0x1
 3771 10a7 9C        		.byte	0x9c
 3772 10a8 0000 10EB 		.long	0x10eb
 3773 10ac 17        		.uleb128 0x17
 3774 10ad 0000 0ADE 		.long	0xade
 3775 10b1 02        		.uleb128 0x2
 3776 10b2 91        		.byte	0x91
 3777 10b3 00        		.sleb128 0
 3778 10b4 17        		.uleb128 0x17
 3779 10b5 0000 0AE9 		.long	0xae9
 3780 10b9 02        		.uleb128 0x2
 3781 10ba 91        		.byte	0x91
 3782 10bb 07        		.sleb128 7
68K GAS  /tmp/ccMFIMKI.s 			page 79


 3783 10bc 14        		.uleb128 0x14
 3784 10bd 0000 0AF4 		.long	0xaf4
 3785 10c1 0000 0000 		.long	.LLRL31
 3786 10c5 08        		.uleb128 0x8
 3787 10c6 0000 0AF5 		.long	0xaf5
 3788 10ca 0000 0000 		.long	.LLST32
 3789 10ce 0000 0000 		.long	.LVUS32
 3790 10d2 14        		.uleb128 0x14
 3791 10d3 0000 0AFE 		.long	0xafe
 3792 10d7 0000 0000 		.long	.LLRL33
 3793 10db 08        		.uleb128 0x8
 3794 10dc 0000 0AFF 		.long	0xaff
 3795 10e0 0000 0000 		.long	.LLST34
 3796 10e4 0000 0000 		.long	.LVUS34
 3797 10e8 00        		.byte	0
 3798 10e9 00        		.byte	0
 3799 10ea 00        		.byte	0
 3800 10eb 18        		.uleb128 0x18
 3801 10ec 0000 0000 		.long	.LASF134
 3802 10f0 0000 0000 		.long	.LASF135
 3803 10f4 2A        		.uleb128 0x2a
 3804 10f5 0000 0000 		.long	.LASF132
 3805 10f9 0000 0000 		.long	.LASF132
 3806 10fd 2A        		.uleb128 0x2a
 3807 10fe 0000 0000 		.long	.LASF133
 3808 1102 0000 0000 		.long	.LASF133
 3809 1106 18        		.uleb128 0x18
 3810 1107 0000 0000 		.long	.LASF113
 3811 110b 0000 0000 		.long	.LASF136
 3812 110f 18        		.uleb128 0x18
 3813 1110 0000 0000 		.long	.LASF137
 3814 1114 0000 0000 		.long	.LASF138
 3815 1118 18        		.uleb128 0x18
 3816 1119 0000 0000 		.long	.LASF111
 3817 111d 0000 0000 		.long	.LASF139
 3818 1121 18        		.uleb128 0x18
 3819 1122 0000 0000 		.long	.LASF140
 3820 1126 0000 0000 		.long	.LASF141
 3821 112a 00        		.byte	0
 3822               		.section	.debug_abbrev,"",@progbits
 3823               	.Ldebug_abbrev0:
 3824 0000 01        		.uleb128 0x1
 3825 0001 48        		.uleb128 0x48
 3826 0002 00        		.byte	0
 3827 0003 7D        		.uleb128 0x7d
 3828 0004 01        		.uleb128 0x1
 3829 0005 7F        		.uleb128 0x7f
 3830 0006 13        		.uleb128 0x13
 3831 0007 00        		.byte	0
 3832 0008 00        		.byte	0
 3833 0009 02        		.uleb128 0x2
 3834 000a 0D        		.uleb128 0xd
 3835 000b 00        		.byte	0
 3836 000c 03        		.uleb128 0x3
 3837 000d 0E        		.uleb128 0xe
 3838 000e 3A        		.uleb128 0x3a
 3839 000f 21        		.uleb128 0x21
68K GAS  /tmp/ccMFIMKI.s 			page 80


 3840 0010 04        		.sleb128 4
 3841 0011 3B        		.uleb128 0x3b
 3842 0012 05        		.uleb128 0x5
 3843 0013 39        		.uleb128 0x39
 3844 0014 0B        		.uleb128 0xb
 3845 0015 49        		.uleb128 0x49
 3846 0016 13        		.uleb128 0x13
 3847 0017 38        		.uleb128 0x38
 3848 0018 0B        		.uleb128 0xb
 3849 0019 00        		.byte	0
 3850 001a 00        		.byte	0
 3851 001b 03        		.uleb128 0x3
 3852 001c 0D        		.uleb128 0xd
 3853 001d 00        		.byte	0
 3854 001e 03        		.uleb128 0x3
 3855 001f 0E        		.uleb128 0xe
 3856 0020 3A        		.uleb128 0x3a
 3857 0021 0B        		.uleb128 0xb
 3858 0022 3B        		.uleb128 0x3b
 3859 0023 0B        		.uleb128 0xb
 3860 0024 39        		.uleb128 0x39
 3861 0025 0B        		.uleb128 0xb
 3862 0026 49        		.uleb128 0x49
 3863 0027 13        		.uleb128 0x13
 3864 0028 38        		.uleb128 0x38
 3865 0029 0B        		.uleb128 0xb
 3866 002a 00        		.byte	0
 3867 002b 00        		.byte	0
 3868 002c 04        		.uleb128 0x4
 3869 002d 05        		.uleb128 0x5
 3870 002e 00        		.byte	0
 3871 002f 49        		.uleb128 0x49
 3872 0030 13        		.uleb128 0x13
 3873 0031 00        		.byte	0
 3874 0032 00        		.byte	0
 3875 0033 05        		.uleb128 0x5
 3876 0034 0F        		.uleb128 0xf
 3877 0035 00        		.byte	0
 3878 0036 0B        		.uleb128 0xb
 3879 0037 21        		.uleb128 0x21
 3880 0038 04        		.sleb128 4
 3881 0039 49        		.uleb128 0x49
 3882 003a 13        		.uleb128 0x13
 3883 003b 00        		.byte	0
 3884 003c 00        		.byte	0
 3885 003d 06        		.uleb128 0x6
 3886 003e 21        		.uleb128 0x21
 3887 003f 00        		.byte	0
 3888 0040 49        		.uleb128 0x49
 3889 0041 13        		.uleb128 0x13
 3890 0042 2F        		.uleb128 0x2f
 3891 0043 0B        		.uleb128 0xb
 3892 0044 00        		.byte	0
 3893 0045 00        		.byte	0
 3894 0046 07        		.uleb128 0x7
 3895 0047 01        		.uleb128 0x1
 3896 0048 01        		.byte	0x1
68K GAS  /tmp/ccMFIMKI.s 			page 81


 3897 0049 49        		.uleb128 0x49
 3898 004a 13        		.uleb128 0x13
 3899 004b 01        		.uleb128 0x1
 3900 004c 13        		.uleb128 0x13
 3901 004d 00        		.byte	0
 3902 004e 00        		.byte	0
 3903 004f 08        		.uleb128 0x8
 3904 0050 34        		.uleb128 0x34
 3905 0051 00        		.byte	0
 3906 0052 31        		.uleb128 0x31
 3907 0053 13        		.uleb128 0x13
 3908 0054 02        		.uleb128 0x2
 3909 0055 17        		.uleb128 0x17
 3910 0056 B742      		.uleb128 0x2137
 3911 0058 17        		.uleb128 0x17
 3912 0059 00        		.byte	0
 3913 005a 00        		.byte	0
 3914 005b 09        		.uleb128 0x9
 3915 005c 24        		.uleb128 0x24
 3916 005d 00        		.byte	0
 3917 005e 0B        		.uleb128 0xb
 3918 005f 0B        		.uleb128 0xb
 3919 0060 3E        		.uleb128 0x3e
 3920 0061 0B        		.uleb128 0xb
 3921 0062 03        		.uleb128 0x3
 3922 0063 0E        		.uleb128 0xe
 3923 0064 00        		.byte	0
 3924 0065 00        		.byte	0
 3925 0066 0A        		.uleb128 0xa
 3926 0067 34        		.uleb128 0x34
 3927 0068 00        		.byte	0
 3928 0069 03        		.uleb128 0x3
 3929 006a 08        		.uleb128 0x8
 3930 006b 3A        		.uleb128 0x3a
 3931 006c 21        		.uleb128 0x21
 3932 006d 01        		.sleb128 1
 3933 006e 3B        		.uleb128 0x3b
 3934 006f 0B        		.uleb128 0xb
 3935 0070 39        		.uleb128 0x39
 3936 0071 0B        		.uleb128 0xb
 3937 0072 49        		.uleb128 0x49
 3938 0073 13        		.uleb128 0x13
 3939 0074 02        		.uleb128 0x2
 3940 0075 17        		.uleb128 0x17
 3941 0076 B742      		.uleb128 0x2137
 3942 0078 17        		.uleb128 0x17
 3943 0079 00        		.byte	0
 3944 007a 00        		.byte	0
 3945 007b 0B        		.uleb128 0xb
 3946 007c 0D        		.uleb128 0xd
 3947 007d 00        		.byte	0
 3948 007e 03        		.uleb128 0x3
 3949 007f 08        		.uleb128 0x8
 3950 0080 3A        		.uleb128 0x3a
 3951 0081 21        		.uleb128 0x21
 3952 0082 04        		.sleb128 4
 3953 0083 3B        		.uleb128 0x3b
68K GAS  /tmp/ccMFIMKI.s 			page 82


 3954 0084 0B        		.uleb128 0xb
 3955 0085 39        		.uleb128 0x39
 3956 0086 0B        		.uleb128 0xb
 3957 0087 49        		.uleb128 0x49
 3958 0088 13        		.uleb128 0x13
 3959 0089 38        		.uleb128 0x38
 3960 008a 0B        		.uleb128 0xb
 3961 008b 00        		.byte	0
 3962 008c 00        		.byte	0
 3963 008d 0C        		.uleb128 0xc
 3964 008e 18        		.uleb128 0x18
 3965 008f 00        		.byte	0
 3966 0090 00        		.byte	0
 3967 0091 00        		.byte	0
 3968 0092 0D        		.uleb128 0xd
 3969 0093 34        		.uleb128 0x34
 3970 0094 00        		.byte	0
 3971 0095 03        		.uleb128 0x3
 3972 0096 0E        		.uleb128 0xe
 3973 0097 3A        		.uleb128 0x3a
 3974 0098 21        		.uleb128 0x21
 3975 0099 01        		.sleb128 1
 3976 009a 3B        		.uleb128 0x3b
 3977 009b 0B        		.uleb128 0xb
 3978 009c 39        		.uleb128 0x39
 3979 009d 0B        		.uleb128 0xb
 3980 009e 49        		.uleb128 0x49
 3981 009f 13        		.uleb128 0x13
 3982 00a0 3F        		.uleb128 0x3f
 3983 00a1 19        		.uleb128 0x19
 3984 00a2 02        		.uleb128 0x2
 3985 00a3 18        		.uleb128 0x18
 3986 00a4 00        		.byte	0
 3987 00a5 00        		.byte	0
 3988 00a6 0E        		.uleb128 0xe
 3989 00a7 16        		.uleb128 0x16
 3990 00a8 00        		.byte	0
 3991 00a9 03        		.uleb128 0x3
 3992 00aa 0E        		.uleb128 0xe
 3993 00ab 3A        		.uleb128 0x3a
 3994 00ac 0B        		.uleb128 0xb
 3995 00ad 3B        		.uleb128 0x3b
 3996 00ae 0B        		.uleb128 0xb
 3997 00af 39        		.uleb128 0x39
 3998 00b0 0B        		.uleb128 0xb
 3999 00b1 49        		.uleb128 0x49
 4000 00b2 13        		.uleb128 0x13
 4001 00b3 00        		.byte	0
 4002 00b4 00        		.byte	0
 4003 00b5 0F        		.uleb128 0xf
 4004 00b6 05        		.uleb128 0x5
 4005 00b7 00        		.byte	0
 4006 00b8 31        		.uleb128 0x31
 4007 00b9 13        		.uleb128 0x13
 4008 00ba 02        		.uleb128 0x2
 4009 00bb 17        		.uleb128 0x17
 4010 00bc B742      		.uleb128 0x2137
68K GAS  /tmp/ccMFIMKI.s 			page 83


 4011 00be 17        		.uleb128 0x17
 4012 00bf 00        		.byte	0
 4013 00c0 00        		.byte	0
 4014 00c1 10        		.uleb128 0x10
 4015 00c2 2E        		.uleb128 0x2e
 4016 00c3 01        		.byte	0x1
 4017 00c4 3F        		.uleb128 0x3f
 4018 00c5 19        		.uleb128 0x19
 4019 00c6 03        		.uleb128 0x3
 4020 00c7 08        		.uleb128 0x8
 4021 00c8 3A        		.uleb128 0x3a
 4022 00c9 21        		.uleb128 0x21
 4023 00ca 01        		.sleb128 1
 4024 00cb 3B        		.uleb128 0x3b
 4025 00cc 0B        		.uleb128 0xb
 4026 00cd 39        		.uleb128 0x39
 4027 00ce 21        		.uleb128 0x21
 4028 00cf 03        		.sleb128 3
 4029 00d0 49        		.uleb128 0x49
 4030 00d1 13        		.uleb128 0x13
 4031 00d2 3C        		.uleb128 0x3c
 4032 00d3 19        		.uleb128 0x19
 4033 00d4 01        		.uleb128 0x1
 4034 00d5 13        		.uleb128 0x13
 4035 00d6 00        		.byte	0
 4036 00d7 00        		.byte	0
 4037 00d8 11        		.uleb128 0x11
 4038 00d9 2E        		.uleb128 0x2e
 4039 00da 01        		.byte	0x1
 4040 00db 3F        		.uleb128 0x3f
 4041 00dc 19        		.uleb128 0x19
 4042 00dd 03        		.uleb128 0x3
 4043 00de 0E        		.uleb128 0xe
 4044 00df 3A        		.uleb128 0x3a
 4045 00e0 21        		.uleb128 0x21
 4046 00e1 01        		.sleb128 1
 4047 00e2 3B        		.uleb128 0x3b
 4048 00e3 0B        		.uleb128 0xb
 4049 00e4 39        		.uleb128 0x39
 4050 00e5 21        		.uleb128 0x21
 4051 00e6 06        		.sleb128 6
 4052 00e7 11        		.uleb128 0x11
 4053 00e8 01        		.uleb128 0x1
 4054 00e9 12        		.uleb128 0x12
 4055 00ea 06        		.uleb128 0x6
 4056 00eb 40        		.uleb128 0x40
 4057 00ec 18        		.uleb128 0x18
 4058 00ed 7A        		.uleb128 0x7a
 4059 00ee 19        		.uleb128 0x19
 4060 00ef 01        		.uleb128 0x1
 4061 00f0 13        		.uleb128 0x13
 4062 00f1 00        		.byte	0
 4063 00f2 00        		.byte	0
 4064 00f3 12        		.uleb128 0x12
 4065 00f4 34        		.uleb128 0x34
 4066 00f5 00        		.byte	0
 4067 00f6 03        		.uleb128 0x3
68K GAS  /tmp/ccMFIMKI.s 			page 84


 4068 00f7 0E        		.uleb128 0xe
 4069 00f8 3A        		.uleb128 0x3a
 4070 00f9 21        		.uleb128 0x21
 4071 00fa 01        		.sleb128 1
 4072 00fb 3B        		.uleb128 0x3b
 4073 00fc 0B        		.uleb128 0xb
 4074 00fd 39        		.uleb128 0x39
 4075 00fe 0B        		.uleb128 0xb
 4076 00ff 49        		.uleb128 0x49
 4077 0100 13        		.uleb128 0x13
 4078 0101 02        		.uleb128 0x2
 4079 0102 17        		.uleb128 0x17
 4080 0103 B742      		.uleb128 0x2137
 4081 0105 17        		.uleb128 0x17
 4082 0106 00        		.byte	0
 4083 0107 00        		.byte	0
 4084 0108 13        		.uleb128 0x13
 4085 0109 0B        		.uleb128 0xb
 4086 010a 01        		.byte	0x1
 4087 010b 55        		.uleb128 0x55
 4088 010c 17        		.uleb128 0x17
 4089 010d 01        		.uleb128 0x1
 4090 010e 13        		.uleb128 0x13
 4091 010f 00        		.byte	0
 4092 0110 00        		.byte	0
 4093 0111 14        		.uleb128 0x14
 4094 0112 0B        		.uleb128 0xb
 4095 0113 01        		.byte	0x1
 4096 0114 31        		.uleb128 0x31
 4097 0115 13        		.uleb128 0x13
 4098 0116 55        		.uleb128 0x55
 4099 0117 17        		.uleb128 0x17
 4100 0118 00        		.byte	0
 4101 0119 00        		.byte	0
 4102 011a 15        		.uleb128 0x15
 4103 011b 05        		.uleb128 0x5
 4104 011c 00        		.byte	0
 4105 011d 03        		.uleb128 0x3
 4106 011e 0E        		.uleb128 0xe
 4107 011f 3A        		.uleb128 0x3a
 4108 0120 21        		.uleb128 0x21
 4109 0121 01        		.sleb128 1
 4110 0122 3B        		.uleb128 0x3b
 4111 0123 0B        		.uleb128 0xb
 4112 0124 39        		.uleb128 0x39
 4113 0125 0B        		.uleb128 0xb
 4114 0126 49        		.uleb128 0x49
 4115 0127 13        		.uleb128 0x13
 4116 0128 00        		.byte	0
 4117 0129 00        		.byte	0
 4118 012a 16        		.uleb128 0x16
 4119 012b 34        		.uleb128 0x34
 4120 012c 00        		.byte	0
 4121 012d 03        		.uleb128 0x3
 4122 012e 08        		.uleb128 0x8
 4123 012f 3A        		.uleb128 0x3a
 4124 0130 21        		.uleb128 0x21
68K GAS  /tmp/ccMFIMKI.s 			page 85


 4125 0131 01        		.sleb128 1
 4126 0132 3B        		.uleb128 0x3b
 4127 0133 0B        		.uleb128 0xb
 4128 0134 39        		.uleb128 0x39
 4129 0135 0B        		.uleb128 0xb
 4130 0136 49        		.uleb128 0x49
 4131 0137 13        		.uleb128 0x13
 4132 0138 00        		.byte	0
 4133 0139 00        		.byte	0
 4134 013a 17        		.uleb128 0x17
 4135 013b 05        		.uleb128 0x5
 4136 013c 00        		.byte	0
 4137 013d 31        		.uleb128 0x31
 4138 013e 13        		.uleb128 0x13
 4139 013f 02        		.uleb128 0x2
 4140 0140 18        		.uleb128 0x18
 4141 0141 00        		.byte	0
 4142 0142 00        		.byte	0
 4143 0143 18        		.uleb128 0x18
 4144 0144 2E        		.uleb128 0x2e
 4145 0145 00        		.byte	0
 4146 0146 3F        		.uleb128 0x3f
 4147 0147 19        		.uleb128 0x19
 4148 0148 3C        		.uleb128 0x3c
 4149 0149 19        		.uleb128 0x19
 4150 014a 6E        		.uleb128 0x6e
 4151 014b 0E        		.uleb128 0xe
 4152 014c 03        		.uleb128 0x3
 4153 014d 0E        		.uleb128 0xe
 4154 014e 3A        		.uleb128 0x3a
 4155 014f 21        		.uleb128 0x21
 4156 0150 08        		.sleb128 8
 4157 0151 3B        		.uleb128 0x3b
 4158 0152 21        		.uleb128 0x21
 4159 0153 00        		.sleb128 0
 4160 0154 00        		.byte	0
 4161 0155 00        		.byte	0
 4162 0156 19        		.uleb128 0x19
 4163 0157 13        		.uleb128 0x13
 4164 0158 01        		.byte	0x1
 4165 0159 03        		.uleb128 0x3
 4166 015a 0E        		.uleb128 0xe
 4167 015b 0B        		.uleb128 0xb
 4168 015c 0B        		.uleb128 0xb
 4169 015d 3A        		.uleb128 0x3a
 4170 015e 21        		.uleb128 0x21
 4171 015f 04        		.sleb128 4
 4172 0160 3B        		.uleb128 0x3b
 4173 0161 0B        		.uleb128 0xb
 4174 0162 39        		.uleb128 0x39
 4175 0163 21        		.uleb128 0x21
 4176 0164 08        		.sleb128 8
 4177 0165 01        		.uleb128 0x1
 4178 0166 13        		.uleb128 0x13
 4179 0167 00        		.byte	0
 4180 0168 00        		.byte	0
 4181 0169 1A        		.uleb128 0x1a
68K GAS  /tmp/ccMFIMKI.s 			page 86


 4182 016a 15        		.uleb128 0x15
 4183 016b 01        		.byte	0x1
 4184 016c 27        		.uleb128 0x27
 4185 016d 19        		.uleb128 0x19
 4186 016e 49        		.uleb128 0x49
 4187 016f 13        		.uleb128 0x13
 4188 0170 01        		.uleb128 0x1
 4189 0171 13        		.uleb128 0x13
 4190 0172 00        		.byte	0
 4191 0173 00        		.byte	0
 4192 0174 1B        		.uleb128 0x1b
 4193 0175 1D        		.uleb128 0x1d
 4194 0176 01        		.byte	0x1
 4195 0177 31        		.uleb128 0x31
 4196 0178 13        		.uleb128 0x13
 4197 0179 52        		.uleb128 0x52
 4198 017a 01        		.uleb128 0x1
 4199 017b B842      		.uleb128 0x2138
 4200 017d 0B        		.uleb128 0xb
 4201 017e 11        		.uleb128 0x11
 4202 017f 01        		.uleb128 0x1
 4203 0180 12        		.uleb128 0x12
 4204 0181 06        		.uleb128 0x6
 4205 0182 58        		.uleb128 0x58
 4206 0183 21        		.uleb128 0x21
 4207 0184 01        		.sleb128 1
 4208 0185 59        		.uleb128 0x59
 4209 0186 0B        		.uleb128 0xb
 4210 0187 57        		.uleb128 0x57
 4211 0188 0B        		.uleb128 0xb
 4212 0189 01        		.uleb128 0x1
 4213 018a 13        		.uleb128 0x13
 4214 018b 00        		.byte	0
 4215 018c 00        		.byte	0
 4216 018d 1C        		.uleb128 0x1c
 4217 018e 2E        		.uleb128 0x2e
 4218 018f 01        		.byte	0x1
 4219 0190 3F        		.uleb128 0x3f
 4220 0191 19        		.uleb128 0x19
 4221 0192 03        		.uleb128 0x3
 4222 0193 0E        		.uleb128 0xe
 4223 0194 3A        		.uleb128 0x3a
 4224 0195 21        		.uleb128 0x21
 4225 0196 06        		.sleb128 6
 4226 0197 3B        		.uleb128 0x3b
 4227 0198 0B        		.uleb128 0xb
 4228 0199 39        		.uleb128 0x39
 4229 019a 21        		.uleb128 0x21
 4230 019b 05        		.sleb128 5
 4231 019c 27        		.uleb128 0x27
 4232 019d 19        		.uleb128 0x19
 4233 019e 49        		.uleb128 0x49
 4234 019f 13        		.uleb128 0x13
 4235 01a0 3C        		.uleb128 0x3c
 4236 01a1 19        		.uleb128 0x19
 4237 01a2 01        		.uleb128 0x1
 4238 01a3 13        		.uleb128 0x13
68K GAS  /tmp/ccMFIMKI.s 			page 87


 4239 01a4 00        		.byte	0
 4240 01a5 00        		.byte	0
 4241 01a6 1D        		.uleb128 0x1d
 4242 01a7 05        		.uleb128 0x5
 4243 01a8 00        		.byte	0
 4244 01a9 03        		.uleb128 0x3
 4245 01aa 0E        		.uleb128 0xe
 4246 01ab 3A        		.uleb128 0x3a
 4247 01ac 21        		.uleb128 0x21
 4248 01ad 01        		.sleb128 1
 4249 01ae 3B        		.uleb128 0x3b
 4250 01af 0B        		.uleb128 0xb
 4251 01b0 39        		.uleb128 0x39
 4252 01b1 0B        		.uleb128 0xb
 4253 01b2 49        		.uleb128 0x49
 4254 01b3 13        		.uleb128 0x13
 4255 01b4 02        		.uleb128 0x2
 4256 01b5 18        		.uleb128 0x18
 4257 01b6 00        		.byte	0
 4258 01b7 00        		.byte	0
 4259 01b8 1E        		.uleb128 0x1e
 4260 01b9 0B        		.uleb128 0xb
 4261 01ba 01        		.byte	0x1
 4262 01bb 11        		.uleb128 0x11
 4263 01bc 01        		.uleb128 0x1
 4264 01bd 12        		.uleb128 0x12
 4265 01be 06        		.uleb128 0x6
 4266 01bf 01        		.uleb128 0x1
 4267 01c0 13        		.uleb128 0x13
 4268 01c1 00        		.byte	0
 4269 01c2 00        		.byte	0
 4270 01c3 1F        		.uleb128 0x1f
 4271 01c4 0B        		.uleb128 0xb
 4272 01c5 01        		.byte	0x1
 4273 01c6 00        		.byte	0
 4274 01c7 00        		.byte	0
 4275 01c8 20        		.uleb128 0x20
 4276 01c9 0B        		.uleb128 0xb
 4277 01ca 01        		.byte	0x1
 4278 01cb 55        		.uleb128 0x55
 4279 01cc 17        		.uleb128 0x17
 4280 01cd 00        		.byte	0
 4281 01ce 00        		.byte	0
 4282 01cf 21        		.uleb128 0x21
 4283 01d0 2E        		.uleb128 0x2e
 4284 01d1 01        		.byte	0x1
 4285 01d2 31        		.uleb128 0x31
 4286 01d3 13        		.uleb128 0x13
 4287 01d4 11        		.uleb128 0x11
 4288 01d5 01        		.uleb128 0x1
 4289 01d6 12        		.uleb128 0x12
 4290 01d7 06        		.uleb128 0x6
 4291 01d8 40        		.uleb128 0x40
 4292 01d9 18        		.uleb128 0x18
 4293 01da 7A        		.uleb128 0x7a
 4294 01db 19        		.uleb128 0x19
 4295 01dc 01        		.uleb128 0x1
68K GAS  /tmp/ccMFIMKI.s 			page 88


 4296 01dd 13        		.uleb128 0x13
 4297 01de 00        		.byte	0
 4298 01df 00        		.byte	0
 4299 01e0 22        		.uleb128 0x22
 4300 01e1 16        		.uleb128 0x16
 4301 01e2 00        		.byte	0
 4302 01e3 03        		.uleb128 0x3
 4303 01e4 0E        		.uleb128 0xe
 4304 01e5 3A        		.uleb128 0x3a
 4305 01e6 0B        		.uleb128 0xb
 4306 01e7 3B        		.uleb128 0x3b
 4307 01e8 05        		.uleb128 0x5
 4308 01e9 39        		.uleb128 0x39
 4309 01ea 0B        		.uleb128 0xb
 4310 01eb 49        		.uleb128 0x49
 4311 01ec 13        		.uleb128 0x13
 4312 01ed 00        		.byte	0
 4313 01ee 00        		.byte	0
 4314 01ef 23        		.uleb128 0x23
 4315 01f0 0D        		.uleb128 0xd
 4316 01f1 00        		.byte	0
 4317 01f2 03        		.uleb128 0x3
 4318 01f3 0E        		.uleb128 0xe
 4319 01f4 3A        		.uleb128 0x3a
 4320 01f5 21        		.uleb128 0x21
 4321 01f6 03        		.sleb128 3
 4322 01f7 3B        		.uleb128 0x3b
 4323 01f8 0B        		.uleb128 0xb
 4324 01f9 39        		.uleb128 0x39
 4325 01fa 0B        		.uleb128 0xb
 4326 01fb 49        		.uleb128 0x49
 4327 01fc 13        		.uleb128 0x13
 4328 01fd 00        		.byte	0
 4329 01fe 00        		.byte	0
 4330 01ff 24        		.uleb128 0x24
 4331 0200 37        		.uleb128 0x37
 4332 0201 00        		.byte	0
 4333 0202 49        		.uleb128 0x49
 4334 0203 13        		.uleb128 0x13
 4335 0204 00        		.byte	0
 4336 0205 00        		.byte	0
 4337 0206 25        		.uleb128 0x25
 4338 0207 15        		.uleb128 0x15
 4339 0208 01        		.byte	0x1
 4340 0209 27        		.uleb128 0x27
 4341 020a 19        		.uleb128 0x19
 4342 020b 01        		.uleb128 0x1
 4343 020c 13        		.uleb128 0x13
 4344 020d 00        		.byte	0
 4345 020e 00        		.byte	0
 4346 020f 26        		.uleb128 0x26
 4347 0210 2E        		.uleb128 0x2e
 4348 0211 01        		.byte	0x1
 4349 0212 3F        		.uleb128 0x3f
 4350 0213 19        		.uleb128 0x19
 4351 0214 03        		.uleb128 0x3
 4352 0215 0E        		.uleb128 0xe
68K GAS  /tmp/ccMFIMKI.s 			page 89


 4353 0216 3A        		.uleb128 0x3a
 4354 0217 21        		.uleb128 0x21
 4355 0218 01        		.sleb128 1
 4356 0219 3B        		.uleb128 0x3b
 4357 021a 0B        		.uleb128 0xb
 4358 021b 39        		.uleb128 0x39
 4359 021c 21        		.uleb128 0x21
 4360 021d 06        		.sleb128 6
 4361 021e 27        		.uleb128 0x27
 4362 021f 19        		.uleb128 0x19
 4363 0220 20        		.uleb128 0x20
 4364 0221 21        		.uleb128 0x21
 4365 0222 01        		.sleb128 1
 4366 0223 01        		.uleb128 0x1
 4367 0224 13        		.uleb128 0x13
 4368 0225 00        		.byte	0
 4369 0226 00        		.byte	0
 4370 0227 27        		.uleb128 0x27
 4371 0228 34        		.uleb128 0x34
 4372 0229 00        		.byte	0
 4373 022a 03        		.uleb128 0x3
 4374 022b 0E        		.uleb128 0xe
 4375 022c 3A        		.uleb128 0x3a
 4376 022d 21        		.uleb128 0x21
 4377 022e 01        		.sleb128 1
 4378 022f 3B        		.uleb128 0x3b
 4379 0230 0B        		.uleb128 0xb
 4380 0231 39        		.uleb128 0x39
 4381 0232 21        		.uleb128 0x21
 4382 0233 07        		.sleb128 7
 4383 0234 49        		.uleb128 0x49
 4384 0235 13        		.uleb128 0x13
 4385 0236 02        		.uleb128 0x2
 4386 0237 18        		.uleb128 0x18
 4387 0238 00        		.byte	0
 4388 0239 00        		.byte	0
 4389 023a 28        		.uleb128 0x28
 4390 023b 0B        		.uleb128 0xb
 4391 023c 01        		.byte	0x1
 4392 023d 31        		.uleb128 0x31
 4393 023e 13        		.uleb128 0x13
 4394 023f 11        		.uleb128 0x11
 4395 0240 01        		.uleb128 0x1
 4396 0241 12        		.uleb128 0x12
 4397 0242 06        		.uleb128 0x6
 4398 0243 00        		.byte	0
 4399 0244 00        		.byte	0
 4400 0245 29        		.uleb128 0x29
 4401 0246 48        		.uleb128 0x48
 4402 0247 00        		.byte	0
 4403 0248 7D        		.uleb128 0x7d
 4404 0249 01        		.uleb128 0x1
 4405 024a 8301      		.uleb128 0x83
 4406 024c 18        		.uleb128 0x18
 4407 024d 00        		.byte	0
 4408 024e 00        		.byte	0
 4409 024f 2A        		.uleb128 0x2a
68K GAS  /tmp/ccMFIMKI.s 			page 90


 4410 0250 2E        		.uleb128 0x2e
 4411 0251 00        		.byte	0
 4412 0252 3F        		.uleb128 0x3f
 4413 0253 19        		.uleb128 0x19
 4414 0254 3C        		.uleb128 0x3c
 4415 0255 19        		.uleb128 0x19
 4416 0256 6E        		.uleb128 0x6e
 4417 0257 0E        		.uleb128 0xe
 4418 0258 03        		.uleb128 0x3
 4419 0259 0E        		.uleb128 0xe
 4420 025a 00        		.byte	0
 4421 025b 00        		.byte	0
 4422 025c 2B        		.uleb128 0x2b
 4423 025d 11        		.uleb128 0x11
 4424 025e 01        		.byte	0x1
 4425 025f 25        		.uleb128 0x25
 4426 0260 0E        		.uleb128 0xe
 4427 0261 13        		.uleb128 0x13
 4428 0262 0B        		.uleb128 0xb
 4429 0263 03        		.uleb128 0x3
 4430 0264 0E        		.uleb128 0xe
 4431 0265 1B        		.uleb128 0x1b
 4432 0266 0E        		.uleb128 0xe
 4433 0267 55        		.uleb128 0x55
 4434 0268 17        		.uleb128 0x17
 4435 0269 11        		.uleb128 0x11
 4436 026a 01        		.uleb128 0x1
 4437 026b 10        		.uleb128 0x10
 4438 026c 17        		.uleb128 0x17
 4439 026d 00        		.byte	0
 4440 026e 00        		.byte	0
 4441 026f 2C        		.uleb128 0x2c
 4442 0270 24        		.uleb128 0x24
 4443 0271 00        		.byte	0
 4444 0272 0B        		.uleb128 0xb
 4445 0273 0B        		.uleb128 0xb
 4446 0274 3E        		.uleb128 0x3e
 4447 0275 0B        		.uleb128 0xb
 4448 0276 03        		.uleb128 0x3
 4449 0277 08        		.uleb128 0x8
 4450 0278 00        		.byte	0
 4451 0279 00        		.byte	0
 4452 027a 2D        		.uleb128 0x2d
 4453 027b 17        		.uleb128 0x17
 4454 027c 01        		.byte	0x1
 4455 027d 0B        		.uleb128 0xb
 4456 027e 0B        		.uleb128 0xb
 4457 027f 3A        		.uleb128 0x3a
 4458 0280 0B        		.uleb128 0xb
 4459 0281 3B        		.uleb128 0x3b
 4460 0282 0B        		.uleb128 0xb
 4461 0283 39        		.uleb128 0x39
 4462 0284 0B        		.uleb128 0xb
 4463 0285 01        		.uleb128 0x1
 4464 0286 13        		.uleb128 0x13
 4465 0287 00        		.byte	0
 4466 0288 00        		.byte	0
68K GAS  /tmp/ccMFIMKI.s 			page 91


 4467 0289 2E        		.uleb128 0x2e
 4468 028a 13        		.uleb128 0x13
 4469 028b 01        		.byte	0x1
 4470 028c 0B        		.uleb128 0xb
 4471 028d 0B        		.uleb128 0xb
 4472 028e 3A        		.uleb128 0x3a
 4473 028f 0B        		.uleb128 0xb
 4474 0290 3B        		.uleb128 0x3b
 4475 0291 0B        		.uleb128 0xb
 4476 0292 39        		.uleb128 0x39
 4477 0293 0B        		.uleb128 0xb
 4478 0294 01        		.uleb128 0x1
 4479 0295 13        		.uleb128 0x13
 4480 0296 00        		.byte	0
 4481 0297 00        		.byte	0
 4482 0298 2F        		.uleb128 0x2f
 4483 0299 0F        		.uleb128 0xf
 4484 029a 00        		.byte	0
 4485 029b 0B        		.uleb128 0xb
 4486 029c 0B        		.uleb128 0xb
 4487 029d 00        		.byte	0
 4488 029e 00        		.byte	0
 4489 029f 30        		.uleb128 0x30
 4490 02a0 13        		.uleb128 0x13
 4491 02a1 01        		.byte	0x1
 4492 02a2 03        		.uleb128 0x3
 4493 02a3 0E        		.uleb128 0xe
 4494 02a4 0B        		.uleb128 0xb
 4495 02a5 05        		.uleb128 0x5
 4496 02a6 3A        		.uleb128 0x3a
 4497 02a7 0B        		.uleb128 0xb
 4498 02a8 3B        		.uleb128 0x3b
 4499 02a9 05        		.uleb128 0x5
 4500 02aa 39        		.uleb128 0x39
 4501 02ab 0B        		.uleb128 0xb
 4502 02ac 01        		.uleb128 0x1
 4503 02ad 13        		.uleb128 0x13
 4504 02ae 00        		.byte	0
 4505 02af 00        		.byte	0
 4506 02b0 31        		.uleb128 0x31
 4507 02b1 0D        		.uleb128 0xd
 4508 02b2 00        		.byte	0
 4509 02b3 03        		.uleb128 0x3
 4510 02b4 0E        		.uleb128 0xe
 4511 02b5 3A        		.uleb128 0x3a
 4512 02b6 0B        		.uleb128 0xb
 4513 02b7 3B        		.uleb128 0x3b
 4514 02b8 05        		.uleb128 0x5
 4515 02b9 39        		.uleb128 0x39
 4516 02ba 0B        		.uleb128 0xb
 4517 02bb 49        		.uleb128 0x49
 4518 02bc 13        		.uleb128 0x13
 4519 02bd 38        		.uleb128 0x38
 4520 02be 05        		.uleb128 0x5
 4521 02bf 00        		.byte	0
 4522 02c0 00        		.byte	0
 4523 02c1 32        		.uleb128 0x32
68K GAS  /tmp/ccMFIMKI.s 			page 92


 4524 02c2 26        		.uleb128 0x26
 4525 02c3 00        		.byte	0
 4526 02c4 49        		.uleb128 0x49
 4527 02c5 13        		.uleb128 0x13
 4528 02c6 00        		.byte	0
 4529 02c7 00        		.byte	0
 4530 02c8 33        		.uleb128 0x33
 4531 02c9 13        		.uleb128 0x13
 4532 02ca 01        		.byte	0x1
 4533 02cb 03        		.uleb128 0x3
 4534 02cc 0E        		.uleb128 0xe
 4535 02cd 0B        		.uleb128 0xb
 4536 02ce 0B        		.uleb128 0xb
 4537 02cf 3A        		.uleb128 0x3a
 4538 02d0 0B        		.uleb128 0xb
 4539 02d1 3B        		.uleb128 0x3b
 4540 02d2 05        		.uleb128 0x5
 4541 02d3 39        		.uleb128 0x39
 4542 02d4 0B        		.uleb128 0xb
 4543 02d5 01        		.uleb128 0x1
 4544 02d6 13        		.uleb128 0x13
 4545 02d7 00        		.byte	0
 4546 02d8 00        		.byte	0
 4547 02d9 34        		.uleb128 0x34
 4548 02da 13        		.uleb128 0x13
 4549 02db 01        		.byte	0x1
 4550 02dc 0B        		.uleb128 0xb
 4551 02dd 0B        		.uleb128 0xb
 4552 02de 3A        		.uleb128 0x3a
 4553 02df 0B        		.uleb128 0xb
 4554 02e0 3B        		.uleb128 0x3b
 4555 02e1 05        		.uleb128 0x5
 4556 02e2 39        		.uleb128 0x39
 4557 02e3 0B        		.uleb128 0xb
 4558 02e4 01        		.uleb128 0x1
 4559 02e5 13        		.uleb128 0x13
 4560 02e6 00        		.byte	0
 4561 02e7 00        		.byte	0
 4562 02e8 35        		.uleb128 0x35
 4563 02e9 17        		.uleb128 0x17
 4564 02ea 01        		.byte	0x1
 4565 02eb 0B        		.uleb128 0xb
 4566 02ec 0B        		.uleb128 0xb
 4567 02ed 3A        		.uleb128 0x3a
 4568 02ee 0B        		.uleb128 0xb
 4569 02ef 3B        		.uleb128 0x3b
 4570 02f0 05        		.uleb128 0x5
 4571 02f1 39        		.uleb128 0x39
 4572 02f2 0B        		.uleb128 0xb
 4573 02f3 01        		.uleb128 0x1
 4574 02f4 13        		.uleb128 0x13
 4575 02f5 00        		.byte	0
 4576 02f6 00        		.byte	0
 4577 02f7 36        		.uleb128 0x36
 4578 02f8 0D        		.uleb128 0xd
 4579 02f9 00        		.byte	0
 4580 02fa 03        		.uleb128 0x3
68K GAS  /tmp/ccMFIMKI.s 			page 93


 4581 02fb 0E        		.uleb128 0xe
 4582 02fc 3A        		.uleb128 0x3a
 4583 02fd 0B        		.uleb128 0xb
 4584 02fe 3B        		.uleb128 0x3b
 4585 02ff 05        		.uleb128 0x5
 4586 0300 39        		.uleb128 0x39
 4587 0301 0B        		.uleb128 0xb
 4588 0302 49        		.uleb128 0x49
 4589 0303 13        		.uleb128 0x13
 4590 0304 00        		.byte	0
 4591 0305 00        		.byte	0
 4592 0306 37        		.uleb128 0x37
 4593 0307 13        		.uleb128 0x13
 4594 0308 00        		.byte	0
 4595 0309 03        		.uleb128 0x3
 4596 030a 0E        		.uleb128 0xe
 4597 030b 3C        		.uleb128 0x3c
 4598 030c 19        		.uleb128 0x19
 4599 030d 00        		.byte	0
 4600 030e 00        		.byte	0
 4601 030f 38        		.uleb128 0x38
 4602 0310 15        		.uleb128 0x15
 4603 0311 01        		.byte	0x1
 4604 0312 01        		.uleb128 0x1
 4605 0313 13        		.uleb128 0x13
 4606 0314 00        		.byte	0
 4607 0315 00        		.byte	0
 4608 0316 39        		.uleb128 0x39
 4609 0317 2E        		.uleb128 0x2e
 4610 0318 01        		.byte	0x1
 4611 0319 3F        		.uleb128 0x3f
 4612 031a 19        		.uleb128 0x19
 4613 031b 03        		.uleb128 0x3
 4614 031c 0E        		.uleb128 0xe
 4615 031d 3A        		.uleb128 0x3a
 4616 031e 0B        		.uleb128 0xb
 4617 031f 3B        		.uleb128 0x3b
 4618 0320 0B        		.uleb128 0xb
 4619 0321 39        		.uleb128 0x39
 4620 0322 0B        		.uleb128 0xb
 4621 0323 3C        		.uleb128 0x3c
 4622 0324 19        		.uleb128 0x19
 4623 0325 01        		.uleb128 0x1
 4624 0326 13        		.uleb128 0x13
 4625 0327 00        		.byte	0
 4626 0328 00        		.byte	0
 4627 0329 3A        		.uleb128 0x3a
 4628 032a 2E        		.uleb128 0x2e
 4629 032b 01        		.byte	0x1
 4630 032c 3F        		.uleb128 0x3f
 4631 032d 19        		.uleb128 0x19
 4632 032e 03        		.uleb128 0x3
 4633 032f 0E        		.uleb128 0xe
 4634 0330 3A        		.uleb128 0x3a
 4635 0331 0B        		.uleb128 0xb
 4636 0332 3B        		.uleb128 0x3b
 4637 0333 0B        		.uleb128 0xb
68K GAS  /tmp/ccMFIMKI.s 			page 94


 4638 0334 39        		.uleb128 0x39
 4639 0335 0B        		.uleb128 0xb
 4640 0336 27        		.uleb128 0x27
 4641 0337 19        		.uleb128 0x19
 4642 0338 3C        		.uleb128 0x3c
 4643 0339 19        		.uleb128 0x19
 4644 033a 01        		.uleb128 0x1
 4645 033b 13        		.uleb128 0x13
 4646 033c 00        		.byte	0
 4647 033d 00        		.byte	0
 4648 033e 3B        		.uleb128 0x3b
 4649 033f 2E        		.uleb128 0x2e
 4650 0340 01        		.byte	0x1
 4651 0341 3F        		.uleb128 0x3f
 4652 0342 19        		.uleb128 0x19
 4653 0343 03        		.uleb128 0x3
 4654 0344 0E        		.uleb128 0xe
 4655 0345 3A        		.uleb128 0x3a
 4656 0346 0B        		.uleb128 0xb
 4657 0347 3B        		.uleb128 0x3b
 4658 0348 05        		.uleb128 0x5
 4659 0349 39        		.uleb128 0x39
 4660 034a 0B        		.uleb128 0xb
 4661 034b 27        		.uleb128 0x27
 4662 034c 19        		.uleb128 0x19
 4663 034d 49        		.uleb128 0x49
 4664 034e 13        		.uleb128 0x13
 4665 034f 3C        		.uleb128 0x3c
 4666 0350 19        		.uleb128 0x19
 4667 0351 01        		.uleb128 0x1
 4668 0352 13        		.uleb128 0x13
 4669 0353 00        		.byte	0
 4670 0354 00        		.byte	0
 4671 0355 3C        		.uleb128 0x3c
 4672 0356 2E        		.uleb128 0x2e
 4673 0357 01        		.byte	0x1
 4674 0358 3F        		.uleb128 0x3f
 4675 0359 19        		.uleb128 0x19
 4676 035a 03        		.uleb128 0x3
 4677 035b 0E        		.uleb128 0xe
 4678 035c 3A        		.uleb128 0x3a
 4679 035d 0B        		.uleb128 0xb
 4680 035e 3B        		.uleb128 0x3b
 4681 035f 0B        		.uleb128 0xb
 4682 0360 39        		.uleb128 0x39
 4683 0361 0B        		.uleb128 0xb
 4684 0362 49        		.uleb128 0x49
 4685 0363 13        		.uleb128 0x13
 4686 0364 11        		.uleb128 0x11
 4687 0365 01        		.uleb128 0x1
 4688 0366 12        		.uleb128 0x12
 4689 0367 06        		.uleb128 0x6
 4690 0368 40        		.uleb128 0x40
 4691 0369 18        		.uleb128 0x18
 4692 036a 7A        		.uleb128 0x7a
 4693 036b 19        		.uleb128 0x19
 4694 036c 01        		.uleb128 0x1
68K GAS  /tmp/ccMFIMKI.s 			page 95


 4695 036d 13        		.uleb128 0x13
 4696 036e 00        		.byte	0
 4697 036f 00        		.byte	0
 4698 0370 3D        		.uleb128 0x3d
 4699 0371 2E        		.uleb128 0x2e
 4700 0372 01        		.byte	0x1
 4701 0373 3F        		.uleb128 0x3f
 4702 0374 19        		.uleb128 0x19
 4703 0375 03        		.uleb128 0x3
 4704 0376 0E        		.uleb128 0xe
 4705 0377 3A        		.uleb128 0x3a
 4706 0378 0B        		.uleb128 0xb
 4707 0379 3B        		.uleb128 0x3b
 4708 037a 0B        		.uleb128 0xb
 4709 037b 39        		.uleb128 0x39
 4710 037c 0B        		.uleb128 0xb
 4711 037d 27        		.uleb128 0x27
 4712 037e 19        		.uleb128 0x19
 4713 037f 49        		.uleb128 0x49
 4714 0380 13        		.uleb128 0x13
 4715 0381 11        		.uleb128 0x11
 4716 0382 01        		.uleb128 0x1
 4717 0383 12        		.uleb128 0x12
 4718 0384 06        		.uleb128 0x6
 4719 0385 40        		.uleb128 0x40
 4720 0386 18        		.uleb128 0x18
 4721 0387 7A        		.uleb128 0x7a
 4722 0388 19        		.uleb128 0x19
 4723 0389 01        		.uleb128 0x1
 4724 038a 13        		.uleb128 0x13
 4725 038b 00        		.byte	0
 4726 038c 00        		.byte	0
 4727 038d 3E        		.uleb128 0x3e
 4728 038e 05        		.uleb128 0x5
 4729 038f 00        		.byte	0
 4730 0390 03        		.uleb128 0x3
 4731 0391 08        		.uleb128 0x8
 4732 0392 3A        		.uleb128 0x3a
 4733 0393 0B        		.uleb128 0xb
 4734 0394 3B        		.uleb128 0x3b
 4735 0395 0B        		.uleb128 0xb
 4736 0396 39        		.uleb128 0x39
 4737 0397 0B        		.uleb128 0xb
 4738 0398 49        		.uleb128 0x49
 4739 0399 13        		.uleb128 0x13
 4740 039a 02        		.uleb128 0x2
 4741 039b 18        		.uleb128 0x18
 4742 039c 00        		.byte	0
 4743 039d 00        		.byte	0
 4744 039e 3F        		.uleb128 0x3f
 4745 039f 1D        		.uleb128 0x1d
 4746 03a0 01        		.byte	0x1
 4747 03a1 31        		.uleb128 0x31
 4748 03a2 13        		.uleb128 0x13
 4749 03a3 52        		.uleb128 0x52
 4750 03a4 01        		.uleb128 0x1
 4751 03a5 B842      		.uleb128 0x2138
68K GAS  /tmp/ccMFIMKI.s 			page 96


 4752 03a7 0B        		.uleb128 0xb
 4753 03a8 55        		.uleb128 0x55
 4754 03a9 17        		.uleb128 0x17
 4755 03aa 58        		.uleb128 0x58
 4756 03ab 0B        		.uleb128 0xb
 4757 03ac 59        		.uleb128 0x59
 4758 03ad 0B        		.uleb128 0xb
 4759 03ae 57        		.uleb128 0x57
 4760 03af 0B        		.uleb128 0xb
 4761 03b0 01        		.uleb128 0x1
 4762 03b1 13        		.uleb128 0x13
 4763 03b2 00        		.byte	0
 4764 03b3 00        		.byte	0
 4765 03b4 40        		.uleb128 0x40
 4766 03b5 2E        		.uleb128 0x2e
 4767 03b6 01        		.byte	0x1
 4768 03b7 3F        		.uleb128 0x3f
 4769 03b8 19        		.uleb128 0x19
 4770 03b9 03        		.uleb128 0x3
 4771 03ba 0E        		.uleb128 0xe
 4772 03bb 3A        		.uleb128 0x3a
 4773 03bc 0B        		.uleb128 0xb
 4774 03bd 3B        		.uleb128 0x3b
 4775 03be 0B        		.uleb128 0xb
 4776 03bf 39        		.uleb128 0x39
 4777 03c0 0B        		.uleb128 0xb
 4778 03c1 27        		.uleb128 0x27
 4779 03c2 19        		.uleb128 0x19
 4780 03c3 11        		.uleb128 0x11
 4781 03c4 01        		.uleb128 0x1
 4782 03c5 12        		.uleb128 0x12
 4783 03c6 06        		.uleb128 0x6
 4784 03c7 40        		.uleb128 0x40
 4785 03c8 18        		.uleb128 0x18
 4786 03c9 7A        		.uleb128 0x7a
 4787 03ca 19        		.uleb128 0x19
 4788 03cb 01        		.uleb128 0x1
 4789 03cc 13        		.uleb128 0x13
 4790 03cd 00        		.byte	0
 4791 03ce 00        		.byte	0
 4792 03cf 41        		.uleb128 0x41
 4793 03d0 0B        		.uleb128 0xb
 4794 03d1 01        		.byte	0x1
 4795 03d2 11        		.uleb128 0x11
 4796 03d3 01        		.uleb128 0x1
 4797 03d4 12        		.uleb128 0x12
 4798 03d5 06        		.uleb128 0x6
 4799 03d6 00        		.byte	0
 4800 03d7 00        		.byte	0
 4801 03d8 42        		.uleb128 0x42
 4802 03d9 2E        		.uleb128 0x2e
 4803 03da 01        		.byte	0x1
 4804 03db 3F        		.uleb128 0x3f
 4805 03dc 19        		.uleb128 0x19
 4806 03dd 03        		.uleb128 0x3
 4807 03de 0E        		.uleb128 0xe
 4808 03df 3A        		.uleb128 0x3a
68K GAS  /tmp/ccMFIMKI.s 			page 97


 4809 03e0 0B        		.uleb128 0xb
 4810 03e1 3B        		.uleb128 0x3b
 4811 03e2 0B        		.uleb128 0xb
 4812 03e3 39        		.uleb128 0x39
 4813 03e4 0B        		.uleb128 0xb
 4814 03e5 27        		.uleb128 0x27
 4815 03e6 19        		.uleb128 0x19
 4816 03e7 49        		.uleb128 0x49
 4817 03e8 13        		.uleb128 0x13
 4818 03e9 20        		.uleb128 0x20
 4819 03ea 0B        		.uleb128 0xb
 4820 03eb 01        		.uleb128 0x1
 4821 03ec 13        		.uleb128 0x13
 4822 03ed 00        		.byte	0
 4823 03ee 00        		.byte	0
 4824 03ef 00        		.byte	0
 4825               		.section	.debug_loclists,"",@progbits
 4826 0000 0000 046F 		.long	.Ldebug_loc3-.Ldebug_loc2
 4827               	.Ldebug_loc2:
 4828 0004 0005      		.word	0x5
 4829 0006 04        		.byte	0x4
 4830 0007 00        		.byte	0
 4831 0008 0000 0000 		.long	0
 4832               	.Ldebug_loc0:
 4833               	.LVUS51:
 4834 000c 01        		.uleb128 .LVU386
 4835 000d 00        		.uleb128 .LVU389
 4836 000e 00        		.uleb128 .LVU389
 4837 000f 00        		.uleb128 .LVU421
 4838               	.LLST51:
 4839 0010 06        		.byte	0x6
 4840 0011 0000 0000 		.long	.LVL144
 4841 0015 04        		.byte	0x4
 4842 0016 00        		.uleb128 .LVL144-.LVL144
 4843 0017 08        		.uleb128 .LVL145-.LVL144
 4844 0018 02        		.uleb128 0x2
 4845 0019 34        		.byte	0x34
 4846 001a 9F        		.byte	0x9f
 4847 001b 04        		.byte	0x4
 4848 001c 08        		.uleb128 .LVL145-.LVL144
 4849 001d A401      		.uleb128 .LVL156-.LVL144
 4850 001f 01        		.uleb128 0x1
 4851 0020 52        		.byte	0x52
 4852 0021 00        		.byte	0
 4853               	.LVUS35:
 4854 0022 00        		.uleb128 .LVU278
 4855 0023 00        		.uleb128 .LVU280
 4856 0024 00        		.uleb128 .LVU280
 4857 0025 00        		.uleb128 .LVU337
 4858 0026 00        		.uleb128 .LVU338
 4859 0027 00        		.uleb128 .LVU368
 4860 0028 00        		.uleb128 .LVU369
 4861 0029 00        		.uleb128 .LVU380
 4862 002a 00        		.uleb128 .LVU381
 4863 002b 00        		.uleb128 .LVU383
 4864               	.LLST35:
 4865 002c 06        		.byte	0x6
68K GAS  /tmp/ccMFIMKI.s 			page 98


 4866 002d 0000 0000 		.long	.LVL107
 4867 0031 04        		.byte	0x4
 4868 0032 00        		.uleb128 .LVL107-.LVL107
 4869 0033 0B        		.uleb128 .LVL108-1-.LVL107
 4870 0034 01        		.uleb128 0x1
 4871 0035 50        		.byte	0x50
 4872 0036 04        		.byte	0x4
 4873 0037 0B        		.uleb128 .LVL108-1-.LVL107
 4874 0038 FA01      		.uleb128 .LVL123-.LVL107
 4875 003a 01        		.uleb128 0x1
 4876 003b 54        		.byte	0x54
 4877 003c 04        		.byte	0x4
 4878 003d FC01      		.uleb128 .LVL124-.LVL107
 4879 003f E602      		.uleb128 .LVL135-.LVL107
 4880 0041 01        		.uleb128 0x1
 4881 0042 54        		.byte	0x54
 4882 0043 04        		.byte	0x4
 4883 0044 E802      		.uleb128 .LVL136-.LVL107
 4884 0046 8E03      		.uleb128 .LVL141-.LVL107
 4885 0048 01        		.uleb128 0x1
 4886 0049 54        		.byte	0x54
 4887 004a 04        		.byte	0x4
 4888 004b 9003      		.uleb128 .LVL142-.LVL107
 4889 004d 9603      		.uleb128 .LVL143-.LVL107
 4890 004f 01        		.uleb128 0x1
 4891 0050 54        		.byte	0x54
 4892 0051 00        		.byte	0
 4893               	.LVUS36:
 4894 0052 00        		.uleb128 .LVU281
 4895 0053 00        		.uleb128 .LVU285
 4896 0054 00        		.uleb128 .LVU285
 4897 0055 00        		.uleb128 .LVU337
 4898 0056 00        		.uleb128 .LVU338
 4899 0057 00        		.uleb128 .LVU368
 4900 0058 00        		.uleb128 .LVU369
 4901 0059 00        		.uleb128 .LVU380
 4902 005a 00        		.uleb128 .LVU381
 4903 005b 00        		.uleb128 .LVU383
 4904               	.LLST36:
 4905 005c 06        		.byte	0x6
 4906 005d 0000 0000 		.long	.LVL109
 4907 0061 04        		.byte	0x4
 4908 0062 00        		.uleb128 .LVL109-.LVL109
 4909 0063 0C        		.uleb128 .LVL110-.LVL109
 4910 0064 01        		.uleb128 0x1
 4911 0065 50        		.byte	0x50
 4912 0066 04        		.byte	0x4
 4913 0067 0C        		.uleb128 .LVL110-.LVL109
 4914 0068 EA01      		.uleb128 .LVL123-.LVL109
 4915 006a 01        		.uleb128 0x1
 4916 006b 5A        		.byte	0x5a
 4917 006c 04        		.byte	0x4
 4918 006d EC01      		.uleb128 .LVL124-.LVL109
 4919 006f D602      		.uleb128 .LVL135-.LVL109
 4920 0071 01        		.uleb128 0x1
 4921 0072 5A        		.byte	0x5a
 4922 0073 04        		.byte	0x4
68K GAS  /tmp/ccMFIMKI.s 			page 99


 4923 0074 D802      		.uleb128 .LVL136-.LVL109
 4924 0076 FE02      		.uleb128 .LVL141-.LVL109
 4925 0078 01        		.uleb128 0x1
 4926 0079 5A        		.byte	0x5a
 4927 007a 04        		.byte	0x4
 4928 007b 8003      		.uleb128 .LVL142-.LVL109
 4929 007d 8603      		.uleb128 .LVL143-.LVL109
 4930 007f 01        		.uleb128 0x1
 4931 0080 5A        		.byte	0x5a
 4932 0081 00        		.byte	0
 4933               	.LVUS37:
 4934 0082 01        		.uleb128 .LVU282
 4935 0083 00        		.uleb128 .LVU302
 4936 0084 00        		.uleb128 .LVU302
 4937 0085 00        		.uleb128 .LVU326
 4938 0086 00        		.uleb128 .LVU338
 4939 0087 00        		.uleb128 .LVU356
 4940 0088 00        		.uleb128 .LVU356
 4941 0089 00        		.uleb128 .LVU358
 4942               	.LLST37:
 4943 008a 06        		.byte	0x6
 4944 008b 0000 0000 		.long	.LVL109
 4945 008f 04        		.byte	0x4
 4946 0090 00        		.uleb128 .LVL109-.LVL109
 4947 0091 7E        		.uleb128 .LVL114-.LVL109
 4948 0092 02        		.uleb128 0x2
 4949 0093 31        		.byte	0x31
 4950 0094 9F        		.byte	0x9f
 4951 0095 04        		.byte	0x4
 4952 0096 7E        		.uleb128 .LVL114-.LVL109
 4953 0097 C201      		.uleb128 .LVL120-.LVL109
 4954 0099 01        		.uleb128 0x1
 4955 009a 50        		.byte	0x50
 4956 009b 04        		.byte	0x4
 4957 009c EC01      		.uleb128 .LVL124-.LVL109
 4958 009e A402      		.uleb128 .LVL130-.LVL109
 4959 00a0 02        		.uleb128 0x2
 4960 00a1 31        		.byte	0x31
 4961 00a2 9F        		.byte	0x9f
 4962 00a3 04        		.byte	0x4
 4963 00a4 A402      		.uleb128 .LVL130-.LVL109
 4964 00a6 AA02      		.uleb128 .LVL132-.LVL109
 4965 00a8 01        		.uleb128 0x1
 4966 00a9 50        		.byte	0x50
 4967 00aa 00        		.byte	0
 4968               	.LVUS45:
 4969 00ab 00        		.uleb128 .LVU302
 4970 00ac 01        		.uleb128 .LVU319
 4971 00ad 01        		.uleb128 .LVU319
 4972 00ae 00        		.uleb128 .LVU320
 4973 00af 00        		.uleb128 .LVU320
 4974 00b0 00        		.uleb128 .LVU335
 4975 00b1 00        		.uleb128 .LVU356
 4976 00b2 00        		.uleb128 .LVU357
 4977 00b3 00        		.uleb128 .LVU358
 4978 00b4 00        		.uleb128 .LVU366
 4979 00b5 00        		.uleb128 .LVU369
68K GAS  /tmp/ccMFIMKI.s 			page 100


 4980 00b6 00        		.uleb128 .LVU371
 4981 00b7 00        		.uleb128 .LVU381
 4982 00b8 00        		.uleb128 0
 4983               	.LLST45:
 4984 00b9 06        		.byte	0x6
 4985 00ba 0000 0000 		.long	.LVL114
 4986 00be 04        		.byte	0x4
 4987 00bf 00        		.uleb128 .LVL114-.LVL114
 4988 00c0 2A        		.uleb128 .LVL118-.LVL114
 4989 00c1 01        		.uleb128 0x1
 4990 00c2 51        		.byte	0x51
 4991 00c3 04        		.byte	0x4
 4992 00c4 2A        		.uleb128 .LVL118-.LVL114
 4993 00c5 38        		.uleb128 .LVL119-.LVL114
 4994 00c6 03        		.uleb128 0x3
 4995 00c7 71        		.byte	0x71
 4996 00c8 01        		.sleb128 1
 4997 00c9 9F        		.byte	0x9f
 4998 00ca 04        		.byte	0x4
 4999 00cb 38        		.uleb128 .LVL119-.LVL114
 5000 00cc 5E        		.uleb128 .LVL122-.LVL114
 5001 00cd 03        		.uleb128 0x3
 5002 00ce 71        		.byte	0x71
 5003 00cf 03        		.sleb128 3
 5004 00d0 9F        		.byte	0x9f
 5005 00d1 04        		.byte	0x4
 5006 00d2 A601      		.uleb128 .LVL130-.LVL114
 5007 00d4 A801      		.uleb128 .LVL131-.LVL114
 5008 00d6 03        		.uleb128 0x3
 5009 00d7 71        		.byte	0x71
 5010 00d8 03        		.sleb128 3
 5011 00d9 9F        		.byte	0x9f
 5012 00da 04        		.byte	0x4
 5013 00db AC01      		.uleb128 .LVL132-.LVL114
 5014 00dd CA01      		.uleb128 .LVL134-.LVL114
 5015 00df 03        		.uleb128 0x3
 5016 00e0 71        		.byte	0x71
 5017 00e1 03        		.sleb128 3
 5018 00e2 9F        		.byte	0x9f
 5019 00e3 04        		.byte	0x4
 5020 00e4 DA01      		.uleb128 .LVL136-.LVL114
 5021 00e6 E001      		.uleb128 .LVL137-.LVL114
 5022 00e8 03        		.uleb128 0x3
 5023 00e9 71        		.byte	0x71
 5024 00ea 03        		.sleb128 3
 5025 00eb 9F        		.byte	0x9f
 5026 00ec 04        		.byte	0x4
 5027 00ed 8202      		.uleb128 .LVL142-.LVL114
 5028 00ef 8A02      		.uleb128 .LFE12-.LVL114
 5029 00f1 03        		.uleb128 0x3
 5030 00f2 71        		.byte	0x71
 5031 00f3 03        		.sleb128 3
 5032 00f4 9F        		.byte	0x9f
 5033 00f5 00        		.byte	0
 5034               	.LVUS49:
 5035 00f6 00        		.uleb128 .LVU371
 5036 00f7 00        		.uleb128 .LVU376
68K GAS  /tmp/ccMFIMKI.s 			page 101


 5037 00f8 00        		.uleb128 .LVU376
 5038 00f9 00        		.uleb128 .LVU378
 5039               	.LLST49:
 5040 00fa 06        		.byte	0x6
 5041 00fb 0000 0000 		.long	.LVL137
 5042 00ff 04        		.byte	0x4
 5043 0100 00        		.uleb128 .LVL137-.LVL137
 5044 0101 10        		.uleb128 .LVL139-.LVL137
 5045 0102 11        		.uleb128 0x11
 5046 0103 03        		.byte	0x3
 5047 0104 0000 0000 		.long	b_board
 5048 0108 06        		.byte	0x6
 5049 0109 71        		.byte	0x71
 5050 010a 00        		.sleb128 0
 5051 010b 22        		.byte	0x22
 5052 010c 03        		.byte	0x3
 5053 010d 0000 0000 		.long	b_board+32
 5054 0111 06        		.byte	0x6
 5055 0112 22        		.byte	0x22
 5056 0113 9F        		.byte	0x9f
 5057 0114 04        		.byte	0x4
 5058 0115 10        		.uleb128 .LVL139-.LVL137
 5059 0116 1A        		.uleb128 .LVL140-.LVL137
 5060 0117 15        		.uleb128 0x15
 5061 0118 03        		.byte	0x3
 5062 0119 0000 0000 		.long	b_board
 5063 011d 06        		.byte	0x6
 5064 011e 03        		.byte	0x3
 5065 011f 0000 0000 		.long	b_board+16
 5066 0123 06        		.byte	0x6
 5067 0124 22        		.byte	0x22
 5068 0125 03        		.byte	0x3
 5069 0126 0000 0000 		.long	b_board+32
 5070 012a 06        		.byte	0x6
 5071 012b 22        		.byte	0x22
 5072 012c 9F        		.byte	0x9f
 5073 012d 00        		.byte	0
 5074               	.LVUS50:
 5075 012e 00        		.uleb128 .LVU374
 5076 012f 00        		.uleb128 .LVU378
 5077               	.LLST50:
 5078 0130 08        		.byte	0x8
 5079 0131 0000 0000 		.long	.LVL138
 5080 0135 0C        		.uleb128 .LVL140-.LVL138
 5081 0136 01        		.uleb128 0x1
 5082 0137 50        		.byte	0x50
 5083 0138 00        		.byte	0
 5084               	.LVUS47:
 5085 0139 01        		.uleb128 .LVU331
 5086 013a 00        		.uleb128 .LVU337
 5087 013b 00        		.uleb128 .LVU337
 5088 013c 00        		.uleb128 .LVU338
 5089               	.LLST47:
 5090 013d 06        		.byte	0x6
 5091 013e 0000 0000 		.long	.LVL121
 5092 0142 04        		.byte	0x4
 5093 0143 00        		.uleb128 .LVL121-.LVL121
68K GAS  /tmp/ccMFIMKI.s 			page 102


 5094 0144 1C        		.uleb128 .LVL123-.LVL121
 5095 0145 15        		.uleb128 0x15
 5096 0146 03        		.byte	0x3
 5097 0147 0000 0000 		.long	b_board
 5098 014b 06        		.byte	0x6
 5099 014c 03        		.byte	0x3
 5100 014d 0000 0000 		.long	b_board+16
 5101 0151 06        		.byte	0x6
 5102 0152 22        		.byte	0x22
 5103 0153 03        		.byte	0x3
 5104 0154 0000 0000 		.long	b_board+32
 5105 0158 06        		.byte	0x6
 5106 0159 22        		.byte	0x22
 5107 015a 9F        		.byte	0x9f
 5108 015b 04        		.byte	0x4
 5109 015c 1C        		.uleb128 .LVL123-.LVL121
 5110 015d 1E        		.uleb128 .LVL124-.LVL121
 5111 015e 15        		.uleb128 0x15
 5112 015f 03        		.byte	0x3
 5113 0160 0000 0000 		.long	b_board
 5114 0164 06        		.byte	0x6
 5115 0165 03        		.byte	0x3
 5116 0166 0000 0000 		.long	b_board+16
 5117 016a 06        		.byte	0x6
 5118 016b 22        		.byte	0x22
 5119 016c 03        		.byte	0x3
 5120 016d 0000 0000 		.long	b_board+32
 5121 0171 06        		.byte	0x6
 5122 0172 22        		.byte	0x22
 5123 0173 9F        		.byte	0x9f
 5124 0174 00        		.byte	0
 5125               	.LVUS48:
 5126 0175 01        		.uleb128 .LVU362
 5127 0176 00        		.uleb128 .LVU366
 5128               	.LLST48:
 5129 0177 08        		.byte	0x8
 5130 0178 0000 0000 		.long	.LVL133
 5131 017c 14        		.uleb128 .LVL134-.LVL133
 5132 017d 15        		.uleb128 0x15
 5133 017e 03        		.byte	0x3
 5134 017f 0000 0000 		.long	b_board+8
 5135 0183 06        		.byte	0x6
 5136 0184 03        		.byte	0x3
 5137 0185 0000 0000 		.long	b_board+16
 5138 0189 06        		.byte	0x6
 5139 018a 22        		.byte	0x22
 5140 018b 03        		.byte	0x3
 5141 018c 0000 0000 		.long	b_board+24
 5142 0190 06        		.byte	0x6
 5143 0191 22        		.byte	0x22
 5144 0192 9F        		.byte	0x9f
 5145 0193 00        		.byte	0
 5146               	.LVUS39:
 5147 0194 02        		.uleb128 .LVU283
 5148 0195 00        		.uleb128 .LVU302
 5149 0196 00        		.uleb128 .LVU338
 5150 0197 00        		.uleb128 .LVU356
68K GAS  /tmp/ccMFIMKI.s 			page 103


 5151               	.LLST39:
 5152 0198 06        		.byte	0x6
 5153 0199 0000 0000 		.long	.LVL109
 5154 019d 04        		.byte	0x4
 5155 019e 00        		.uleb128 .LVL109-.LVL109
 5156 019f 7E        		.uleb128 .LVL114-.LVL109
 5157 01a0 01        		.uleb128 0x1
 5158 01a1 53        		.byte	0x53
 5159 01a2 04        		.byte	0x4
 5160 01a3 EC01      		.uleb128 .LVL124-.LVL109
 5161 01a5 A402      		.uleb128 .LVL130-.LVL109
 5162 01a7 01        		.uleb128 0x1
 5163 01a8 53        		.byte	0x53
 5164 01a9 00        		.byte	0
 5165               	.LVUS40:
 5166 01aa 02        		.uleb128 .LVU283
 5167 01ab 00        		.uleb128 .LVU302
 5168 01ac 00        		.uleb128 .LVU338
 5169 01ad 00        		.uleb128 .LVU356
 5170               	.LLST40:
 5171 01ae 06        		.byte	0x6
 5172 01af 0000 0000 		.long	.LVL109
 5173 01b3 04        		.byte	0x4
 5174 01b4 00        		.uleb128 .LVL109-.LVL109
 5175 01b5 7E        		.uleb128 .LVL114-.LVL109
 5176 01b6 02        		.uleb128 0x2
 5177 01b7 91        		.byte	0x91
 5178 01b8 6C        		.sleb128 -20
 5179 01b9 04        		.byte	0x4
 5180 01ba EC01      		.uleb128 .LVL124-.LVL109
 5181 01bc A402      		.uleb128 .LVL130-.LVL109
 5182 01be 02        		.uleb128 0x2
 5183 01bf 91        		.byte	0x91
 5184 01c0 6C        		.sleb128 -20
 5185 01c1 00        		.byte	0
 5186               	.LVUS41:
 5187 01c2 03        		.uleb128 .LVU284
 5188 01c3 00        		.uleb128 .LVU285
 5189               	.LLST41:
 5190 01c4 08        		.byte	0x8
 5191 01c5 0000 0000 		.long	.LVL109
 5192 01c9 0C        		.uleb128 .LVL110-.LVL109
 5193 01ca 02        		.uleb128 0x2
 5194 01cb 30        		.byte	0x30
 5195 01cc 9F        		.byte	0x9f
 5196 01cd 00        		.byte	0
 5197               	.LVUS43:
 5198 01ce 00        		.uleb128 .LVU285
 5199 01cf 01        		.uleb128 .LVU289
 5200 01d0 01        		.uleb128 .LVU289
 5201 01d1 01        		.uleb128 .LVU293
 5202 01d2 01        		.uleb128 .LVU293
 5203 01d3 01        		.uleb128 .LVU297
 5204 01d4 01        		.uleb128 .LVU297
 5205 01d5 00        		.uleb128 .LVU302
 5206 01d6 00        		.uleb128 .LVU338
 5207 01d7 01        		.uleb128 .LVU341
68K GAS  /tmp/ccMFIMKI.s 			page 104


 5208 01d8 01        		.uleb128 .LVU341
 5209 01d9 00        		.uleb128 .LVU344
 5210 01da 00        		.uleb128 .LVU344
 5211 01db 01        		.uleb128 .LVU347
 5212 01dc 01        		.uleb128 .LVU347
 5213 01dd 00        		.uleb128 .LVU350
 5214 01de 00        		.uleb128 .LVU350
 5215 01df 01        		.uleb128 .LVU353
 5216 01e0 01        		.uleb128 .LVU353
 5217 01e1 00        		.uleb128 .LVU356
 5218               	.LLST43:
 5219 01e2 06        		.byte	0x6
 5220 01e3 0000 0000 		.long	.LVL110
 5221 01e7 04        		.byte	0x4
 5222 01e8 00        		.uleb128 .LVL110-.LVL110
 5223 01e9 06        		.uleb128 .LVL111-.LVL110
 5224 01ea 02        		.uleb128 0x2
 5225 01eb 30        		.byte	0x30
 5226 01ec 9F        		.byte	0x9f
 5227 01ed 04        		.byte	0x4
 5228 01ee 06        		.uleb128 .LVL111-.LVL110
 5229 01ef 0E        		.uleb128 .LVL112-.LVL110
 5230 01f0 02        		.uleb128 0x2
 5231 01f1 31        		.byte	0x31
 5232 01f2 9F        		.byte	0x9f
 5233 01f3 04        		.byte	0x4
 5234 01f4 0E        		.uleb128 .LVL112-.LVL110
 5235 01f5 16        		.uleb128 .LVL113-.LVL110
 5236 01f6 02        		.uleb128 0x2
 5237 01f7 32        		.byte	0x32
 5238 01f8 9F        		.byte	0x9f
 5239 01f9 04        		.byte	0x4
 5240 01fa 16        		.uleb128 .LVL113-.LVL110
 5241 01fb 72        		.uleb128 .LVL114-.LVL110
 5242 01fc 02        		.uleb128 0x2
 5243 01fd 33        		.byte	0x33
 5244 01fe 9F        		.byte	0x9f
 5245 01ff 04        		.byte	0x4
 5246 0200 E001      		.uleb128 .LVL124-.LVL110
 5247 0202 E601      		.uleb128 .LVL125-.LVL110
 5248 0204 02        		.uleb128 0x2
 5249 0205 32        		.byte	0x32
 5250 0206 9F        		.byte	0x9f
 5251 0207 04        		.byte	0x4
 5252 0208 E601      		.uleb128 .LVL125-.LVL110
 5253 020a FA01      		.uleb128 .LVL126-.LVL110
 5254 020c 02        		.uleb128 0x2
 5255 020d 33        		.byte	0x33
 5256 020e 9F        		.byte	0x9f
 5257 020f 04        		.byte	0x4
 5258 0210 FA01      		.uleb128 .LVL126-.LVL110
 5259 0212 8002      		.uleb128 .LVL127-.LVL110
 5260 0214 02        		.uleb128 0x2
 5261 0215 31        		.byte	0x31
 5262 0216 9F        		.byte	0x9f
 5263 0217 04        		.byte	0x4
 5264 0218 8002      		.uleb128 .LVL127-.LVL110
68K GAS  /tmp/ccMFIMKI.s 			page 105


 5265 021a 8A02      		.uleb128 .LVL128-.LVL110
 5266 021c 02        		.uleb128 0x2
 5267 021d 32        		.byte	0x32
 5268 021e 9F        		.byte	0x9f
 5269 021f 04        		.byte	0x4
 5270 0220 8A02      		.uleb128 .LVL128-.LVL110
 5271 0222 8E02      		.uleb128 .LVL129-.LVL110
 5272 0224 02        		.uleb128 0x2
 5273 0225 30        		.byte	0x30
 5274 0226 9F        		.byte	0x9f
 5275 0227 04        		.byte	0x4
 5276 0228 8E02      		.uleb128 .LVL129-.LVL110
 5277 022a 9802      		.uleb128 .LVL130-.LVL110
 5278 022c 02        		.uleb128 0x2
 5279 022d 31        		.byte	0x31
 5280 022e 9F        		.byte	0x9f
 5281 022f 00        		.byte	0
 5282               	.LVUS28:
 5283 0230 02        		.uleb128 .LVU209
 5284 0231 00        		.uleb128 .LVU210
 5285               	.LLST28:
 5286 0232 08        		.byte	0x8
 5287 0233 0000 0000 		.long	.LVL78
 5288 0237 16        		.uleb128 .LVL79-.LVL78
 5289 0238 02        		.uleb128 0x2
 5290 0239 30        		.byte	0x30
 5291 023a 9F        		.byte	0x9f
 5292 023b 00        		.byte	0
 5293               	.LVUS30:
 5294 023c 00        		.uleb128 .LVU210
 5295 023d 00        		.uleb128 .LVU215
 5296               	.LLST30:
 5297 023e 08        		.byte	0x8
 5298 023f 0000 0000 		.long	.LVL79
 5299 0243 34        		.uleb128 .LVL82-.LVL79
 5300 0244 02        		.uleb128 0x2
 5301 0245 30        		.byte	0x30
 5302 0246 9F        		.byte	0x9f
 5303 0247 00        		.byte	0
 5304               	.LVUS20:
 5305 0248 01        		.uleb128 .LVU147
 5306 0249 01        		.uleb128 .LVU168
 5307 024a 01        		.uleb128 .LVU168
 5308 024b 01        		.uleb128 .LVU188
 5309 024c 01        		.uleb128 .LVU188
 5310 024d 00        		.uleb128 0
 5311               	.LLST20:
 5312 024e 06        		.byte	0x6
 5313 024f 0000 0000 		.long	.LVL56
 5314 0253 04        		.byte	0x4
 5315 0254 00        		.uleb128 .LVL56-.LVL56
 5316 0255 6E        		.uleb128 .LVL64-.LVL56
 5317 0256 02        		.uleb128 0x2
 5318 0257 30        		.byte	0x30
 5319 0258 9F        		.byte	0x9f
 5320 0259 04        		.byte	0x4
 5321 025a 6E        		.uleb128 .LVL64-.LVL56
68K GAS  /tmp/ccMFIMKI.s 			page 106


 5322 025b B001      		.uleb128 .LVL72-.LVL56
 5323 025d 02        		.uleb128 0x2
 5324 025e 31        		.byte	0x31
 5325 025f 9F        		.byte	0x9f
 5326 0260 04        		.byte	0x4
 5327 0261 B001      		.uleb128 .LVL72-.LVL56
 5328 0263 BE01      		.uleb128 .LFE8-.LVL56
 5329 0265 02        		.uleb128 0x2
 5330 0266 30        		.byte	0x30
 5331 0267 9F        		.byte	0x9f
 5332 0268 00        		.byte	0
 5333               	.LVUS21:
 5334 0269 00        		.uleb128 .LVU156
 5335 026a 00        		.uleb128 .LVU165
 5336               	.LLST21:
 5337 026b 08        		.byte	0x8
 5338 026c 0000 0000 		.long	.LVL59
 5339 0270 1E        		.uleb128 .LVL62-.LVL59
 5340 0271 01        		.uleb128 0x1
 5341 0272 57        		.byte	0x57
 5342 0273 00        		.byte	0
 5343               	.LVUS22:
 5344 0274 03        		.uleb128 .LVU159
 5345 0275 00        		.uleb128 .LVU161
 5346 0276 00        		.uleb128 .LVU161
 5347 0277 00        		.uleb128 .LVU165
 5348               	.LLST22:
 5349 0278 06        		.byte	0x6
 5350 0279 0000 0000 		.long	.LVL59
 5351 027d 04        		.byte	0x4
 5352 027e 00        		.uleb128 .LVL59-.LVL59
 5353 027f 14        		.uleb128 .LVL60-.LVL59
 5354 0280 02        		.uleb128 0x2
 5355 0281 30        		.byte	0x30
 5356 0282 9F        		.byte	0x9f
 5357 0283 04        		.byte	0x4
 5358 0284 14        		.uleb128 .LVL60-.LVL59
 5359 0285 1E        		.uleb128 .LVL62-.LVL59
 5360 0286 01        		.uleb128 0x1
 5361 0287 50        		.byte	0x50
 5362 0288 00        		.byte	0
 5363               	.LVUS23:
 5364 0289 02        		.uleb128 .LVU169
 5365 028a 00        		.uleb128 .LVU176
 5366               	.LLST23:
 5367 028b 08        		.byte	0x8
 5368 028c 0000 0000 		.long	.LVL64
 5369 0290 2A        		.uleb128 .LVL67-.LVL64
 5370 0291 03        		.uleb128 0x3
 5371 0292 08        		.byte	0x8
 5372 0293 58        		.byte	0x58
 5373 0294 9F        		.byte	0x9f
 5374 0295 00        		.byte	0
 5375               	.LVUS24:
 5376 0296 02        		.uleb128 .LVU169
 5377 0297 00        		.uleb128 .LVU176
 5378               	.LLST24:
68K GAS  /tmp/ccMFIMKI.s 			page 107


 5379 0298 08        		.byte	0x8
 5380 0299 0000 0000 		.long	.LVL64
 5381 029d 2A        		.uleb128 .LVL67-.LVL64
 5382 029e 01        		.uleb128 0x1
 5383 029f 57        		.byte	0x57
 5384 02a0 00        		.byte	0
 5385               	.LVUS25:
 5386 02a1 04        		.uleb128 .LVU171
 5387 02a2 00        		.uleb128 .LVU176
 5388               	.LLST25:
 5389 02a3 08        		.byte	0x8
 5390 02a4 0000 0000 		.long	.LVL64
 5391 02a8 2A        		.uleb128 .LVL67-.LVL64
 5392 02a9 05        		.uleb128 0x5
 5393 02aa 77        		.byte	0x77
 5394 02ab 00        		.sleb128 0
 5395 02ac 33        		.byte	0x33
 5396 02ad 1B        		.byte	0x1b
 5397 02ae 9F        		.byte	0x9f
 5398 02af 00        		.byte	0
 5399               	.LVUS26:
 5400 02b0 05        		.uleb128 .LVU172
 5401 02b1 00        		.uleb128 .LVU176
 5402               	.LLST26:
 5403 02b2 08        		.byte	0x8
 5404 02b3 0000 0000 		.long	.LVL64
 5405 02b7 2A        		.uleb128 .LVL67-.LVL64
 5406 02b8 09        		.uleb128 0x9
 5407 02b9 77        		.byte	0x77
 5408 02ba 00        		.sleb128 0
 5409 02bb 33        		.byte	0x33
 5410 02bc 14        		.byte	0x14
 5411 02bd 14        		.byte	0x14
 5412 02be 1B        		.byte	0x1b
 5413 02bf 1E        		.byte	0x1e
 5414 02c0 1C        		.byte	0x1c
 5415 02c1 9F        		.byte	0x9f
 5416 02c2 00        		.byte	0
 5417               	.LVUS12:
 5418 02c3 01        		.uleb128 .LVU96
 5419 02c4 01        		.uleb128 .LVU117
 5420 02c5 01        		.uleb128 .LVU117
 5421 02c6 01        		.uleb128 .LVU137
 5422 02c7 01        		.uleb128 .LVU137
 5423 02c8 00        		.uleb128 0
 5424               	.LLST12:
 5425 02c9 06        		.byte	0x6
 5426 02ca 0000 0000 		.long	.LVL38
 5427 02ce 04        		.byte	0x4
 5428 02cf 00        		.uleb128 .LVL38-.LVL38
 5429 02d0 6C        		.uleb128 .LVL46-.LVL38
 5430 02d1 02        		.uleb128 0x2
 5431 02d2 30        		.byte	0x30
 5432 02d3 9F        		.byte	0x9f
 5433 02d4 04        		.byte	0x4
 5434 02d5 6C        		.uleb128 .LVL46-.LVL38
 5435 02d6 AE01      		.uleb128 .LVL54-.LVL38
68K GAS  /tmp/ccMFIMKI.s 			page 108


 5436 02d8 02        		.uleb128 0x2
 5437 02d9 31        		.byte	0x31
 5438 02da 9F        		.byte	0x9f
 5439 02db 04        		.byte	0x4
 5440 02dc AE01      		.uleb128 .LVL54-.LVL38
 5441 02de BA01      		.uleb128 .LFE7-.LVL38
 5442 02e0 02        		.uleb128 0x2
 5443 02e1 30        		.byte	0x30
 5444 02e2 9F        		.byte	0x9f
 5445 02e3 00        		.byte	0
 5446               	.LVUS13:
 5447 02e4 00        		.uleb128 .LVU105
 5448 02e5 00        		.uleb128 .LVU114
 5449               	.LLST13:
 5450 02e6 08        		.byte	0x8
 5451 02e7 0000 0000 		.long	.LVL41
 5452 02eb 1E        		.uleb128 .LVL44-.LVL41
 5453 02ec 01        		.uleb128 0x1
 5454 02ed 57        		.byte	0x57
 5455 02ee 00        		.byte	0
 5456               	.LVUS14:
 5457 02ef 03        		.uleb128 .LVU108
 5458 02f0 00        		.uleb128 .LVU110
 5459 02f1 00        		.uleb128 .LVU110
 5460 02f2 00        		.uleb128 .LVU114
 5461               	.LLST14:
 5462 02f3 06        		.byte	0x6
 5463 02f4 0000 0000 		.long	.LVL41
 5464 02f8 04        		.byte	0x4
 5465 02f9 00        		.uleb128 .LVL41-.LVL41
 5466 02fa 14        		.uleb128 .LVL42-.LVL41
 5467 02fb 02        		.uleb128 0x2
 5468 02fc 30        		.byte	0x30
 5469 02fd 9F        		.byte	0x9f
 5470 02fe 04        		.byte	0x4
 5471 02ff 14        		.uleb128 .LVL42-.LVL41
 5472 0300 1E        		.uleb128 .LVL44-.LVL41
 5473 0301 01        		.uleb128 0x1
 5474 0302 50        		.byte	0x50
 5475 0303 00        		.byte	0
 5476               	.LVUS15:
 5477 0304 02        		.uleb128 .LVU118
 5478 0305 00        		.uleb128 .LVU125
 5479               	.LLST15:
 5480 0306 08        		.byte	0x8
 5481 0307 0000 0000 		.long	.LVL46
 5482 030b 2A        		.uleb128 .LVL49-.LVL46
 5483 030c 03        		.uleb128 0x3
 5484 030d 08        		.byte	0x8
 5485 030e 4F        		.byte	0x4f
 5486 030f 9F        		.byte	0x9f
 5487 0310 00        		.byte	0
 5488               	.LVUS16:
 5489 0311 02        		.uleb128 .LVU118
 5490 0312 00        		.uleb128 .LVU125
 5491               	.LLST16:
 5492 0313 08        		.byte	0x8
68K GAS  /tmp/ccMFIMKI.s 			page 109


 5493 0314 0000 0000 		.long	.LVL46
 5494 0318 2A        		.uleb128 .LVL49-.LVL46
 5495 0319 01        		.uleb128 0x1
 5496 031a 57        		.byte	0x57
 5497 031b 00        		.byte	0
 5498               	.LVUS17:
 5499 031c 04        		.uleb128 .LVU120
 5500 031d 00        		.uleb128 .LVU125
 5501               	.LLST17:
 5502 031e 08        		.byte	0x8
 5503 031f 0000 0000 		.long	.LVL46
 5504 0323 2A        		.uleb128 .LVL49-.LVL46
 5505 0324 05        		.uleb128 0x5
 5506 0325 77        		.byte	0x77
 5507 0326 00        		.sleb128 0
 5508 0327 33        		.byte	0x33
 5509 0328 1B        		.byte	0x1b
 5510 0329 9F        		.byte	0x9f
 5511 032a 00        		.byte	0
 5512               	.LVUS18:
 5513 032b 05        		.uleb128 .LVU121
 5514 032c 00        		.uleb128 .LVU125
 5515               	.LLST18:
 5516 032d 08        		.byte	0x8
 5517 032e 0000 0000 		.long	.LVL46
 5518 0332 2A        		.uleb128 .LVL49-.LVL46
 5519 0333 09        		.uleb128 0x9
 5520 0334 77        		.byte	0x77
 5521 0335 00        		.sleb128 0
 5522 0336 33        		.byte	0x33
 5523 0337 14        		.byte	0x14
 5524 0338 14        		.byte	0x14
 5525 0339 1B        		.byte	0x1b
 5526 033a 1E        		.byte	0x1e
 5527 033b 1C        		.byte	0x1c
 5528 033c 9F        		.byte	0x9f
 5529 033d 00        		.byte	0
 5530               	.LVUS7:
 5531 033e 00        		.uleb128 .LVU54
 5532 033f 00        		.uleb128 .LVU83
 5533 0340 00        		.uleb128 .LVU86
 5534 0341 00        		.uleb128 0
 5535               	.LLST7:
 5536 0342 06        		.byte	0x6
 5537 0343 0000 0000 		.long	.LVL20
 5538 0347 04        		.byte	0x4
 5539 0348 00        		.uleb128 .LVL20-.LVL20
 5540 0349 DE01      		.uleb128 .LVL33-.LVL20
 5541 034b 01        		.uleb128 0x1
 5542 034c 52        		.byte	0x52
 5543 034d 04        		.byte	0x4
 5544 034e E601      		.uleb128 .LVL35-.LVL20
 5545 0350 A402      		.uleb128 .LFE6-.LVL20
 5546 0352 01        		.uleb128 0x1
 5547 0353 52        		.byte	0x52
 5548 0354 00        		.byte	0
 5549               	.LVUS9:
68K GAS  /tmp/ccMFIMKI.s 			page 110


 5550 0355 02        		.uleb128 .LVU57
 5551 0356 00        		.uleb128 .LVU58
 5552 0357 02        		.uleb128 .LVU89
 5553 0358 00        		.uleb128 0
 5554               	.LLST9:
 5555 0359 06        		.byte	0x6
 5556 035a 0000 0000 		.long	.LVL21
 5557 035e 04        		.byte	0x4
 5558 035f 00        		.uleb128 .LVL21-.LVL21
 5559 0360 22        		.uleb128 .LVL22-.LVL21
 5560 0361 02        		.uleb128 0x2
 5561 0362 30        		.byte	0x30
 5562 0363 9F        		.byte	0x9f
 5563 0364 04        		.byte	0x4
 5564 0365 E601      		.uleb128 .LVL36-.LVL21
 5565 0367 8C02      		.uleb128 .LFE6-.LVL21
 5566 0369 02        		.uleb128 0x2
 5567 036a 30        		.byte	0x30
 5568 036b 9F        		.byte	0x9f
 5569 036c 00        		.byte	0
 5570               	.LVUS10:
 5571 036d 00        		.uleb128 .LVU58
 5572 036e 01        		.uleb128 .LVU63
 5573 036f 01        		.uleb128 .LVU63
 5574 0370 01        		.uleb128 .LVU68
 5575 0371 01        		.uleb128 .LVU68
 5576 0372 00        		.uleb128 .LVU84
 5577               	.LLST10:
 5578 0373 06        		.byte	0x6
 5579 0374 0000 0000 		.long	.LVL22
 5580 0378 04        		.byte	0x4
 5581 0379 00        		.uleb128 .LVL22-.LVL22
 5582 037a 1A        		.uleb128 .LVL24-.LVL22
 5583 037b 02        		.uleb128 0x2
 5584 037c 30        		.byte	0x30
 5585 037d 9F        		.byte	0x9f
 5586 037e 04        		.byte	0x4
 5587 037f 1A        		.uleb128 .LVL24-.LVL22
 5588 0380 3A        		.uleb128 .LVL26-.LVL22
 5589 0381 02        		.uleb128 0x2
 5590 0382 31        		.byte	0x31
 5591 0383 9F        		.byte	0x9f
 5592 0384 04        		.byte	0x4
 5593 0385 3A        		.uleb128 .LVL26-.LVL22
 5594 0386 A601      		.uleb128 .LVL34-.LVL22
 5595 0388 02        		.uleb128 0x2
 5596 0389 32        		.byte	0x32
 5597 038a 9F        		.byte	0x9f
 5598 038b 00        		.byte	0
 5599               	.LVUS3:
 5600 038c 02        		.uleb128 .LVU20
 5601 038d 00        		.uleb128 .LVU22
 5602 038e 00        		.uleb128 .LVU22
 5603 038f 00        		.uleb128 .LVU26
 5604 0390 00        		.uleb128 .LVU28
 5605 0391 00        		.uleb128 .LVU32
 5606               	.LLST3:
68K GAS  /tmp/ccMFIMKI.s 			page 111


 5607 0392 06        		.byte	0x6
 5608 0393 0000 0000 		.long	.LVL8
 5609 0397 04        		.byte	0x4
 5610 0398 00        		.uleb128 .LVL8-.LVL8
 5611 0399 10        		.uleb128 .LVL9-.LVL8
 5612 039a 02        		.uleb128 0x2
 5613 039b 30        		.byte	0x30
 5614 039c 9F        		.byte	0x9f
 5615 039d 04        		.byte	0x4
 5616 039e 10        		.uleb128 .LVL9-.LVL8
 5617 039f 1A        		.uleb128 .LVL11-.LVL8
 5618 03a0 01        		.uleb128 0x1
 5619 03a1 50        		.byte	0x50
 5620 03a2 04        		.byte	0x4
 5621 03a3 20        		.uleb128 .LVL12-.LVL8
 5622 03a4 34        		.uleb128 .LVL13-.LVL8
 5623 03a5 01        		.uleb128 0x1
 5624 03a6 50        		.byte	0x50
 5625 03a7 00        		.byte	0
 5626               	.LVUS4:
 5627 03a8 00        		.uleb128 .LVU28
 5628 03a9 00        		.uleb128 .LVU32
 5629               	.LLST4:
 5630 03aa 08        		.byte	0x8
 5631 03ab 0000 0000 		.long	.LVL12
 5632 03af 14        		.uleb128 .LVL13-.LVL12
 5633 03b0 01        		.uleb128 0x1
 5634 03b1 50        		.byte	0x50
 5635 03b2 00        		.byte	0
 5636               	.LVUS1:
 5637 03b3 02        		.uleb128 .LVU4
 5638 03b4 00        		.uleb128 .LVU6
 5639 03b5 00        		.uleb128 .LVU6
 5640 03b6 00        		.uleb128 .LVU10
 5641 03b7 00        		.uleb128 .LVU13
 5642 03b8 00        		.uleb128 .LVU14
 5643               	.LLST1:
 5644 03b9 06        		.byte	0x6
 5645 03ba 0000 0000 		.long	.LVL1
 5646 03be 04        		.byte	0x4
 5647 03bf 00        		.uleb128 .LVL1-.LVL1
 5648 03c0 10        		.uleb128 .LVL2-.LVL1
 5649 03c1 02        		.uleb128 0x2
 5650 03c2 30        		.byte	0x30
 5651 03c3 9F        		.byte	0x9f
 5652 03c4 04        		.byte	0x4
 5653 03c5 10        		.uleb128 .LVL2-.LVL1
 5654 03c6 1A        		.uleb128 .LVL4-.LVL1
 5655 03c7 01        		.uleb128 0x1
 5656 03c8 50        		.byte	0x50
 5657 03c9 04        		.byte	0x4
 5658 03ca 1E        		.uleb128 .LVL5-.LVL1
 5659 03cb 20        		.uleb128 .LVL6-.LVL1
 5660 03cc 01        		.uleb128 0x1
 5661 03cd 50        		.byte	0x50
 5662 03ce 00        		.byte	0
 5663               	.LVUS5:
68K GAS  /tmp/ccMFIMKI.s 			page 112


 5664 03cf 01        		.uleb128 .LVU41
 5665 03d0 00        		.uleb128 .LVU47
 5666 03d1 00        		.uleb128 .LVU47
 5667 03d2 00        		.uleb128 0
 5668               	.LLST5:
 5669 03d3 06        		.byte	0x6
 5670 03d4 0000 0000 		.long	.LVL16
 5671 03d8 04        		.byte	0x4
 5672 03d9 00        		.uleb128 .LVL16-.LVL16
 5673 03da 34        		.uleb128 .LVL19-.LVL16
 5674 03db 05        		.uleb128 0x5
 5675 03dc 73        		.byte	0x73
 5676 03dd 00        		.sleb128 0
 5677 03de 33        		.byte	0x33
 5678 03df 1B        		.byte	0x1b
 5679 03e0 9F        		.byte	0x9f
 5680 03e1 04        		.byte	0x4
 5681 03e2 34        		.uleb128 .LVL19-.LVL16
 5682 03e3 36        		.uleb128 .LFE5-.LVL16
 5683 03e4 06        		.uleb128 0x6
 5684 03e5 91        		.byte	0x91
 5685 03e6 70        		.sleb128 -16
 5686 03e7 06        		.byte	0x6
 5687 03e8 33        		.byte	0x33
 5688 03e9 1B        		.byte	0x1b
 5689 03ea 9F        		.byte	0x9f
 5690 03eb 00        		.byte	0
 5691               	.LVUS6:
 5692 03ec 02        		.uleb128 .LVU42
 5693 03ed 00        		.uleb128 .LVU47
 5694 03ee 00        		.uleb128 .LVU47
 5695 03ef 00        		.uleb128 0
 5696               	.LLST6:
 5697 03f0 06        		.byte	0x6
 5698 03f1 0000 0000 		.long	.LVL16
 5699 03f5 04        		.byte	0x4
 5700 03f6 00        		.uleb128 .LVL16-.LVL16
 5701 03f7 34        		.uleb128 .LVL19-.LVL16
 5702 03f8 09        		.uleb128 0x9
 5703 03f9 73        		.byte	0x73
 5704 03fa 00        		.sleb128 0
 5705 03fb 33        		.byte	0x33
 5706 03fc 14        		.byte	0x14
 5707 03fd 14        		.byte	0x14
 5708 03fe 1B        		.byte	0x1b
 5709 03ff 1E        		.byte	0x1e
 5710 0400 1C        		.byte	0x1c
 5711 0401 9F        		.byte	0x9f
 5712 0402 04        		.byte	0x4
 5713 0403 34        		.uleb128 .LVL19-.LVL16
 5714 0404 36        		.uleb128 .LFE5-.LVL16
 5715 0405 0A        		.uleb128 0xa
 5716 0406 91        		.byte	0x91
 5717 0407 70        		.sleb128 -16
 5718 0408 06        		.byte	0x6
 5719 0409 33        		.byte	0x33
 5720 040a 14        		.byte	0x14
68K GAS  /tmp/ccMFIMKI.s 			page 113


 5721 040b 14        		.byte	0x14
 5722 040c 1B        		.byte	0x1b
 5723 040d 1E        		.byte	0x1e
 5724 040e 1C        		.byte	0x1c
 5725 040f 9F        		.byte	0x9f
 5726 0410 00        		.byte	0
 5727               	.LVUS32:
 5728 0411 02        		.uleb128 .LVU239
 5729 0412 00        		.uleb128 .LVU240
 5730               	.LLST32:
 5731 0413 08        		.byte	0x8
 5732 0414 0000 0000 		.long	.LVL94
 5733 0418 0A        		.uleb128 .LVL95-.LVL94
 5734 0419 02        		.uleb128 0x2
 5735 041a 30        		.byte	0x30
 5736 041b 9F        		.byte	0x9f
 5737 041c 00        		.byte	0
 5738               	.LVUS34:
 5739 041d 00        		.uleb128 .LVU240
 5740 041e 01        		.uleb128 .LVU244
 5741 041f 01        		.uleb128 .LVU244
 5742 0420 01        		.uleb128 .LVU248
 5743 0421 01        		.uleb128 .LVU248
 5744 0422 01        		.uleb128 .LVU252
 5745 0423 01        		.uleb128 .LVU252
 5746 0424 00        		.uleb128 .LVU256
 5747 0425 00        		.uleb128 .LVU256
 5748 0426 01        		.uleb128 .LVU259
 5749 0427 01        		.uleb128 .LVU259
 5750 0428 00        		.uleb128 .LVU262
 5751 0429 00        		.uleb128 .LVU262
 5752 042a 01        		.uleb128 .LVU265
 5753 042b 01        		.uleb128 .LVU265
 5754 042c 00        		.uleb128 .LVU268
 5755 042d 00        		.uleb128 .LVU268
 5756 042e 01        		.uleb128 .LVU271
 5757 042f 01        		.uleb128 .LVU271
 5758 0430 00        		.uleb128 0
 5759               	.LLST34:
 5760 0431 06        		.byte	0x6
 5761 0432 0000 0000 		.long	.LVL95
 5762 0436 04        		.byte	0x4
 5763 0437 00        		.uleb128 .LVL95-.LVL95
 5764 0438 04        		.uleb128 .LVL96-.LVL95
 5765 0439 02        		.uleb128 0x2
 5766 043a 30        		.byte	0x30
 5767 043b 9F        		.byte	0x9f
 5768 043c 04        		.byte	0x4
 5769 043d 04        		.uleb128 .LVL96-.LVL95
 5770 043e 0A        		.uleb128 .LVL97-.LVL95
 5771 043f 02        		.uleb128 0x2
 5772 0440 31        		.byte	0x31
 5773 0441 9F        		.byte	0x9f
 5774 0442 04        		.byte	0x4
 5775 0443 0A        		.uleb128 .LVL97-.LVL95
 5776 0444 10        		.uleb128 .LVL98-.LVL95
 5777 0445 02        		.uleb128 0x2
68K GAS  /tmp/ccMFIMKI.s 			page 114


 5778 0446 32        		.byte	0x32
 5779 0447 9F        		.byte	0x9f
 5780 0448 04        		.byte	0x4
 5781 0449 10        		.uleb128 .LVL98-.LVL95
 5782 044a 20        		.uleb128 .LVL99-.LVL95
 5783 044b 02        		.uleb128 0x2
 5784 044c 33        		.byte	0x33
 5785 044d 9F        		.byte	0x9f
 5786 044e 04        		.byte	0x4
 5787 044f 20        		.uleb128 .LVL99-.LVL95
 5788 0450 26        		.uleb128 .LVL100-.LVL95
 5789 0451 02        		.uleb128 0x2
 5790 0452 32        		.byte	0x32
 5791 0453 9F        		.byte	0x9f
 5792 0454 04        		.byte	0x4
 5793 0455 26        		.uleb128 .LVL100-.LVL95
 5794 0456 36        		.uleb128 .LVL101-.LVL95
 5795 0457 02        		.uleb128 0x2
 5796 0458 33        		.byte	0x33
 5797 0459 9F        		.byte	0x9f
 5798 045a 04        		.byte	0x4
 5799 045b 36        		.uleb128 .LVL101-.LVL95
 5800 045c 3C        		.uleb128 .LVL102-.LVL95
 5801 045d 02        		.uleb128 0x2
 5802 045e 31        		.byte	0x31
 5803 045f 9F        		.byte	0x9f
 5804 0460 04        		.byte	0x4
 5805 0461 3C        		.uleb128 .LVL102-.LVL95
 5806 0462 44        		.uleb128 .LVL103-.LVL95
 5807 0463 02        		.uleb128 0x2
 5808 0464 32        		.byte	0x32
 5809 0465 9F        		.byte	0x9f
 5810 0466 04        		.byte	0x4
 5811 0467 44        		.uleb128 .LVL103-.LVL95
 5812 0468 48        		.uleb128 .LVL104-.LVL95
 5813 0469 02        		.uleb128 0x2
 5814 046a 30        		.byte	0x30
 5815 046b 9F        		.byte	0x9f
 5816 046c 04        		.byte	0x4
 5817 046d 48        		.uleb128 .LVL104-.LVL95
 5818 046e 50        		.uleb128 .LFE11-.LVL95
 5819 046f 02        		.uleb128 0x2
 5820 0470 31        		.byte	0x31
 5821 0471 9F        		.byte	0x9f
 5822 0472 00        		.byte	0
 5823               	.Ldebug_loc3:
 5824               		.section	.debug_aranges,"",@progbits
 5825 0000 0000 0024 		.long	0x24
 5826 0004 0002      		.word	0x2
 5827 0006 0000 0000 		.long	.Ldebug_info0
 5828 000a 04        		.byte	0x4
 5829 000b 00        		.byte	0
 5830 000c 0000      		.word	0
 5831 000e 0000      		.word	0
 5832 0010 0000 0000 		.long	.Ltext0
 5833 0014 0000 0884 		.long	.Letext0-.Ltext0
 5834 0018 0000 0000 		.long	.LFB14
68K GAS  /tmp/ccMFIMKI.s 			page 115


 5835 001c 0000 003C 		.long	.LFE14-.LFB14
 5836 0020 0000 0000 		.long	0
 5837 0024 0000 0000 		.long	0
 5838               		.section	.debug_rnglists,"",@progbits
 5839               	.Ldebug_ranges0:
 5840 0000 0000 00D2 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 5841               	.Ldebug_ranges2:
 5842 0004 0005      		.word	0x5
 5843 0006 04        		.byte	0x4
 5844 0007 00        		.byte	0
 5845 0008 0000 0000 		.long	0
 5846               	.LLRL0:
 5847 000c 05        		.byte	0x5
 5848 000d 0000 0000 		.long	.LBB14
 5849 0011 04        		.byte	0x4
 5850 0012 00        		.uleb128 .LBB14-.LBB14
 5851 0013 1A        		.uleb128 .LBE14-.LBB14
 5852 0014 04        		.byte	0x4
 5853 0015 1E        		.uleb128 .LBB15-.LBB14
 5854 0016 20        		.uleb128 .LBE15-.LBB14
 5855 0017 00        		.byte	0
 5856               	.LLRL2:
 5857 0018 05        		.byte	0x5
 5858 0019 0000 0000 		.long	.LBB16
 5859 001d 04        		.byte	0x4
 5860 001e 00        		.uleb128 .LBB16-.LBB16
 5861 001f 1A        		.uleb128 .LBE16-.LBB16
 5862 0020 04        		.byte	0x4
 5863 0021 20        		.uleb128 .LBB18-.LBB16
 5864 0022 5C        		.uleb128 .LBE18-.LBB16
 5865 0023 00        		.byte	0
 5866               	.LLRL8:
 5867 0024 05        		.byte	0x5
 5868 0025 0000 0000 		.long	.LBB19
 5869 0029 04        		.byte	0x4
 5870 002a 00        		.uleb128 .LBB19-.LBB19
 5871 002b 9C01      		.uleb128 .LBE19-.LBB19
 5872 002d 04        		.byte	0x4
 5873 002e E601      		.uleb128 .LBB21-.LBB19
 5874 0030 8C02      		.uleb128 .LBE21-.LBB19
 5875 0032 00        		.byte	0
 5876               	.LLRL11:
 5877 0033 05        		.byte	0x5
 5878 0034 0000 0000 		.long	.LBB22
 5879 0038 04        		.byte	0x4
 5880 0039 00        		.uleb128 .LBB22-.LBB22
 5881 003a AC01      		.uleb128 .LBE22-.LBB22
 5882 003c 04        		.byte	0x4
 5883 003d AE01      		.uleb128 .LBB27-.LBB22
 5884 003f C601      		.uleb128 .LBE27-.LBB22
 5885 0041 00        		.byte	0
 5886               	.LLRL19:
 5887 0042 05        		.byte	0x5
 5888 0043 0000 0000 		.long	.LBB28
 5889 0047 04        		.byte	0x4
 5890 0048 00        		.uleb128 .LBB28-.LBB28
 5891 0049 AE01      		.uleb128 .LBE28-.LBB28
68K GAS  /tmp/ccMFIMKI.s 			page 116


 5892 004b 04        		.byte	0x4
 5893 004c B001      		.uleb128 .LBB33-.LBB28
 5894 004e CA01      		.uleb128 .LBE33-.LBB28
 5895 0050 00        		.byte	0
 5896               	.LLRL27:
 5897 0051 05        		.byte	0x5
 5898 0052 0000 0000 		.long	.LBB34
 5899 0056 04        		.byte	0x4
 5900 0057 00        		.uleb128 .LBB34-.LBB34
 5901 0058 9002      		.uleb128 .LBE34-.LBB34
 5902 005a 04        		.byte	0x4
 5903 005b B202      		.uleb128 .LBB37-.LBB34
 5904 005d B802      		.uleb128 .LBE37-.LBB34
 5905 005f 00        		.byte	0
 5906               	.LLRL29:
 5907 0060 05        		.byte	0x5
 5908 0061 0000 0000 		.long	.LBB35
 5909 0065 04        		.byte	0x4
 5910 0066 00        		.uleb128 .LBB35-.LBB35
 5911 0067 9A01      		.uleb128 .LBE35-.LBB35
 5912 0069 04        		.byte	0x4
 5913 006a 9C02      		.uleb128 .LBB36-.LBB35
 5914 006c A202      		.uleb128 .LBE36-.LBB35
 5915 006e 00        		.byte	0
 5916               	.LLRL31:
 5917 006f 05        		.byte	0x5
 5918 0070 0000 0000 		.long	.LBB40
 5919 0074 04        		.byte	0x4
 5920 0075 00        		.uleb128 .LBB40-.LBB40
 5921 0076 28        		.uleb128 .LBE40-.LBB40
 5922 0077 04        		.byte	0x4
 5923 0078 2A        		.uleb128 .LBB44-.LBB40
 5924 0079 5A        		.uleb128 .LBE44-.LBB40
 5925 007a 00        		.byte	0
 5926               	.LLRL33:
 5927 007b 05        		.byte	0x5
 5928 007c 0000 0000 		.long	.LBB41
 5929 0080 04        		.byte	0x4
 5930 0081 00        		.uleb128 .LBB41-.LBB41
 5931 0082 10        		.uleb128 .LBE41-.LBB41
 5932 0083 04        		.byte	0x4
 5933 0084 20        		.uleb128 .LBB42-.LBB41
 5934 0085 26        		.uleb128 .LBE42-.LBB41
 5935 0086 04        		.byte	0x4
 5936 0087 36        		.uleb128 .LBB43-.LBB41
 5937 0088 50        		.uleb128 .LBE43-.LBB41
 5938 0089 00        		.byte	0
 5939               	.LLRL38:
 5940 008a 05        		.byte	0x5
 5941 008b 0000 0000 		.long	.LBB53
 5942 008f 04        		.byte	0x4
 5943 0090 00        		.uleb128 .LBB53-.LBB53
 5944 0091 7A        		.uleb128 .LBE53-.LBB53
 5945 0092 04        		.byte	0x4
 5946 0093 EC01      		.uleb128 .LBB62-.LBB53
 5947 0095 A402      		.uleb128 .LBE62-.LBB53
 5948 0097 00        		.byte	0
68K GAS  /tmp/ccMFIMKI.s 			page 117


 5949               	.LLRL42:
 5950 0098 05        		.byte	0x5
 5951 0099 0000 0000 		.long	.LBB55
 5952 009d 04        		.byte	0x4
 5953 009e 00        		.uleb128 .LBB55-.LBB55
 5954 009f 16        		.uleb128 .LBE55-.LBB55
 5955 00a0 04        		.byte	0x4
 5956 00a1 E001      		.uleb128 .LBB56-.LBB55
 5957 00a3 E601      		.uleb128 .LBE56-.LBB55
 5958 00a5 04        		.byte	0x4
 5959 00a6 FA01      		.uleb128 .LBB57-.LBB55
 5960 00a8 9802      		.uleb128 .LBE57-.LBB55
 5961 00aa 00        		.byte	0
 5962               	.LLRL44:
 5963 00ab 05        		.byte	0x5
 5964 00ac 0000 0000 		.long	.LBB59
 5965 00b0 04        		.byte	0x4
 5966 00b1 00        		.uleb128 .LBB59-.LBB59
 5967 00b2 02        		.uleb128 .LBE59-.LBB59
 5968 00b3 04        		.byte	0x4
 5969 00b4 04        		.uleb128 .LBB60-.LBB59
 5970 00b5 3E        		.uleb128 .LBE60-.LBB59
 5971 00b6 04        		.byte	0x4
 5972 00b7 AA01      		.uleb128 .LBB63-.LBB59
 5973 00b9 B001      		.uleb128 .LBE63-.LBB59
 5974 00bb 00        		.byte	0
 5975               	.LLRL46:
 5976 00bc 05        		.byte	0x5
 5977 00bd 0000 0000 		.long	.LBB61
 5978 00c1 04        		.byte	0x4
 5979 00c2 00        		.uleb128 .LBB61-.LBB61
 5980 00c3 18        		.uleb128 .LBE61-.LBB61
 5981 00c4 04        		.byte	0x4
 5982 00c5 5C        		.uleb128 .LBB64-.LBB61
 5983 00c6 62        		.uleb128 .LBE64-.LBB61
 5984 00c7 00        		.byte	0
 5985               	.LLRL52:
 5986 00c8 07        		.byte	0x7
 5987 00c9 0000 0000 		.long	.Ltext0
 5988 00cd 8411      		.uleb128 .Letext0-.Ltext0
 5989 00cf 07        		.byte	0x7
 5990 00d0 0000 0000 		.long	.LFB14
 5991 00d4 3C        		.uleb128 .LFE14-.LFB14
 5992 00d5 00        		.byte	0
 5993               	.Ldebug_ranges3:
 5994               		.section	.debug_line,"",@progbits
 5995               	.Ldebug_line0:
 5996 0000 0000 0756 		.section	.debug_str,"MS",@progbits,1
 5996      0003 0000 
 5996      00D6 0201 
 5996      FB0E 0D00 
 5996      0101 0101 
 5997               	.LASF39:
 5998 0000 5F73 697A 		.string	"_size"
 5998      6500 
 5999               	.LASF76:
 6000 0006 5F72 616E 		.string	"_rand48"
68K GAS  /tmp/ccMFIMKI.s 			page 118


 6000      6434 3800 
 6001               	.LASF63:
 6002 000e 5F65 6D65 		.string	"_emergency"
 6002      7267 656E 
 6002      6379 00
 6003               	.LASF121:
 6004 0019 6875 7272 		.string	"hurry_msg"
 6004      795F 6D73 
 6004      6700 
 6005               	.LASF132:
 6006 0023 5F5F 6469 		.string	"__divsi3"
 6006      7673 6933 
 6006      00
 6007               	.LASF53:
 6008 002c 5F64 6174 		.string	"_data"
 6008      6100 
 6009               	.LASF95:
 6010 0032 5F77 6372 		.string	"_wcrtomb_state"
 6010      746F 6D62 
 6010      5F73 7461 
 6010      7465 00
 6011               	.LASF109:
 6012 0041 7365 745F 		.string	"set_task"
 6012      7461 736B 
 6012      00
 6013               	.LASF96:
 6014 004a 5F77 6373 		.string	"_wcsrtombs_state"
 6014      7274 6F6D 
 6014      6273 5F73 
 6014      7461 7465 
 6014      00
 6015               	.LASF7:
 6016 005b 6C6F 6E67 		.string	"long long unsigned int"
 6016      206C 6F6E 
 6016      6720 756E 
 6016      7369 676E 
 6016      6564 2069 
 6017               	.LASF110:
 6018 0072 6664 6F70 		.string	"fdopen"
 6018      656E 00
 6019               	.LASF43:
 6020 0079 5F6C 6266 		.string	"_lbfsize"
 6020      7369 7A65 
 6020      00
 6021               	.LASF140:
 6022 0082 6D65 6D6D 		.string	"memmove"
 6022      6F76 6500 
 6023               	.LASF130:
 6024 008a 7265 6D6F 		.string	"remove_cell"
 6024      7665 5F63 
 6024      656C 6C00 
 6025               	.LASF145:
 6026 0096 5F5F 6C6F 		.string	"__locale_t"
 6026      6361 6C65 
 6026      5F74 00
 6027               	.LASF93:
 6028 00a1 5F6D 6272 		.string	"_mbrtowc_state"
68K GAS  /tmp/ccMFIMKI.s 			page 119


 6028      746F 7763 
 6028      5F73 7461 
 6028      7465 00
 6029               	.LASF88:
 6030 00b0 5F77 6374 		.string	"_wctomb_state"
 6030      6F6D 625F 
 6030      7374 6174 
 6030      6500 
 6031               	.LASF28:
 6032 00be 5F5F 746D 		.string	"__tm_sec"
 6032      5F73 6563 
 6032      00
 6033               	.LASF6:
 6034 00c7 6C6F 6E67 		.string	"long long int"
 6034      206C 6F6E 
 6034      6720 696E 
 6034      7400 
 6035               	.LASF0:
 6036 00d5 7369 676E 		.string	"signed char"
 6036      6564 2063 
 6036      6861 7200 
 6037               	.LASF135:
 6038 00e1 5F5F 6275 		.string	"__builtin_fwrite"
 6038      696C 7469 
 6038      6E5F 6677 
 6038      7269 7465 
 6038      00
 6039               	.LASF115:
 6040 00f2 6D61 726B 		.string	"mark"
 6040      00
 6041               	.LASF49:
 6042 00f7 5F75 6275 		.string	"_ubuf"
 6042      6600 
 6043               	.LASF143:
 6044 00fd 7465 7374 		.string	"test3.c"
 6044      332E 6300 
 6045               	.LASF38:
 6046 0105 5F62 6173 		.string	"_base"
 6046      6500 
 6047               	.LASF30:
 6048 010b 5F5F 746D 		.string	"__tm_hour"
 6048      5F68 6F75 
 6048      7200 
 6049               	.LASF138:
 6050 0115 5F5F 6275 		.string	"__builtin_fputc"
 6050      696C 7469 
 6050      6E5F 6670 
 6050      7574 6300 
 6051               	.LASF44:
 6052 0125 5F63 6F6F 		.string	"_cookie"
 6052      6B69 6500 
 6053               	.LASF4:
 6054 012d 6C6F 6E67 		.string	"long int"
 6054      2069 6E74 
 6054      00
 6055               	.LASF41:
 6056 0136 5F66 6C61 		.string	"_flags"
68K GAS  /tmp/ccMFIMKI.s 			page 120


 6056      6773 00
 6057               	.LASF98:
 6058 013d 4649 4C45 		.string	"FILE"
 6058      00
 6059               	.LASF59:
 6060 0142 5F73 7464 		.string	"_stdin"
 6060      696E 00
 6061               	.LASF51:
 6062 0149 5F62 6C6B 		.string	"_blksize"
 6062      7369 7A65 
 6062      00
 6063               	.LASF105:
 6064 0152 7661 6C69 		.string	"valid_cells"
 6064      645F 6365 
 6064      6C6C 7300 
 6065               	.LASF141:
 6066 015e 5F5F 6275 		.string	"__builtin_memmove"
 6066      696C 7469 
 6066      6E5F 6D65 
 6066      6D6D 6F76 
 6066      6500 
 6067               	.LASF100:
 6068 0170 636F 6D30 		.string	"com0out"
 6068      6F75 7400 
 6069               	.LASF71:
 6070 0178 5F63 7674 		.string	"_cvtbuf"
 6070      6275 6600 
 6071               	.LASF52:
 6072 0180 5F6F 6666 		.string	"_offset"
 6072      7365 7400 
 6073               	.LASF94:
 6074 0188 5F6D 6273 		.string	"_mbsrtowcs_state"
 6074      7274 6F77 
 6074      6373 5F73 
 6074      7461 7465 
 6074      00
 6075               	.LASF92:
 6076 0199 5F6D 6272 		.string	"_mbrlen_state"
 6076      6C65 6E5F 
 6076      7374 6174 
 6076      6500 
 6077               	.LASF131:
 6078 01a7 6973 5F76 		.string	"is_valid_cell"
 6078      616C 6964 
 6078      5F63 656C 
 6078      6C00 
 6079               	.LASF116:
 6080 01b5 7769 6E31 		.string	"win1"
 6080      00
 6081               	.LASF117:
 6082 01ba 7769 6E32 		.string	"win2"
 6082      00
 6083               	.LASF24:
 6084 01bf 5F73 6967 		.string	"_sign"
 6084      6E00 
 6085               	.LASF119:
 6086 01c5 696E 6974 		.string	"init_ports"
68K GAS  /tmp/ccMFIMKI.s 			page 121


 6086      5F70 6F72 
 6086      7473 00
 6087               	.LASF21:
 6088 01d0 5F66 6C6F 		.string	"_flock_t"
 6088      636B 5F74 
 6088      00
 6089               	.LASF61:
 6090 01d9 5F73 7464 		.string	"_stderr"
 6090      6572 7200 
 6091               	.LASF26:
 6092 01e1 5F42 6967 		.string	"_Bigint"
 6092      696E 7400 
 6093               	.LASF83:
 6094 01e9 5F67 616D 		.string	"_gamma_signgam"
 6094      6D61 5F73 
 6094      6967 6E67 
 6094      616D 00
 6095               	.LASF45:
 6096 01f8 5F72 6561 		.string	"_read"
 6096      6400 
 6097               	.LASF67:
 6098 01fe 5F72 6573 		.string	"_result_k"
 6098      756C 745F 
 6098      6B00 
 6099               	.LASF27:
 6100 0208 5F5F 746D 		.string	"__tm"
 6100      00
 6101               	.LASF9:
 6102 020d 756E 7369 		.string	"unsigned int"
 6102      676E 6564 
 6102      2069 6E74 
 6102      00
 6103               	.LASF15:
 6104 021a 5F5F 7763 		.string	"__wchb"
 6104      6862 00
 6105               	.LASF60:
 6106 0221 5F73 7464 		.string	"_stdout"
 6106      6F75 7400 
 6107               	.LASF70:
 6108 0229 5F63 7674 		.string	"_cvtlen"
 6108      6C65 6E00 
 6109               	.LASF5:
 6110 0231 6C6F 6E67 		.string	"long unsigned int"
 6110      2075 6E73 
 6110      6967 6E65 
 6110      6420 696E 
 6110      7400 
 6111               	.LASF42:
 6112 0243 5F66 696C 		.string	"_file"
 6112      6500 
 6113               	.LASF107:
 6114 0249 706C 6179 		.string	"player_X_playing"
 6114      6572 5F58 
 6114      5F70 6C61 
 6114      7969 6E67 
 6114      00
 6115               	.LASF102:
68K GAS  /tmp/ccMFIMKI.s 			page 122


 6116 025a 636F 6D31 		.string	"com1out"
 6116      6F75 7400 
 6117               	.LASF3:
 6118 0262 7368 6F72 		.string	"short unsigned int"
 6118      7420 756E 
 6118      7369 676E 
 6118      6564 2069 
 6118      6E74 00
 6119               	.LASF90:
 6120 0275 5F73 6967 		.string	"_signal_buf"
 6120      6E61 6C5F 
 6120      6275 6600 
 6121               	.LASF81:
 6122 0281 5F61 7363 		.string	"_asctime_buf"
 6122      7469 6D65 
 6122      5F62 7566 
 6122      00
 6123               	.LASF66:
 6124 028e 5F72 6573 		.string	"_result"
 6124      756C 7400 
 6125               	.LASF14:
 6126 0296 5F5F 7763 		.string	"__wch"
 6126      6800 
 6127               	.LASF10:
 6128 029c 7769 6E74 		.string	"wint_t"
 6128      5F74 00
 6129               	.LASF118:
 6130 02a3 6269 6E61 		.string	"binary_board"
 6130      7279 5F62 
 6130      6F61 7264 
 6130      00
 6131               	.LASF54:
 6132 02b0 5F6C 6F63 		.string	"_lock"
 6132      6B00 
 6133               	.LASF139:
 6134 02b6 5F5F 6275 		.string	"__builtin_fscanf"
 6134      696C 7469 
 6134      6E5F 6673 
 6134      6361 6E66 
 6134      00
 6135               	.LASF56:
 6136 02c7 5F66 6C61 		.string	"_flags2"
 6136      6773 3200 
 6137               	.LASF46:
 6138 02cf 5F77 7269 		.string	"_write"
 6138      7465 00
 6139               	.LASF33:
 6140 02d6 5F5F 746D 		.string	"__tm_year"
 6140      5F79 6561 
 6140      7200 
 6141               	.LASF104:
 6142 02e0 626F 6172 		.string	"board"
 6142      6400 
 6143               	.LASF136:
 6144 02e6 5F5F 6275 		.string	"__builtin_fprintf"
 6144      696C 7469 
 6144      6E5F 6670 
68K GAS  /tmp/ccMFIMKI.s 			page 123


 6144      7269 6E74 
 6144      6600 
 6145               	.LASF125:
 6146 02f8 6365 6C6C 		.string	"cell"
 6146      00
 6147               	.LASF20:
 6148 02fd 5F4C 4F43 		.string	"_LOCK_RECURSIVE_T"
 6148      4B5F 5245 
 6148      4355 5253 
 6148      4956 455F 
 6148      5400 
 6149               	.LASF144:
 6150 030f 2F68 6F6D 		.string	"/home/students/22nen/1TE22129K/mtk/mtk_git/sofutojikken/jikken2/theme3/mtk"
 6150      652F 7374 
 6150      7564 656E 
 6150      7473 2F32 
 6150      326E 656E 
 6151               	.LASF126:
 6152 035a 6469 7370 		.string	"display_board"
 6152      6C61 795F 
 6152      626F 6172 
 6152      6400 
 6153               	.LASF137:
 6154 0368 6670 7574 		.string	"fputc"
 6154      6300 
 6155               	.LASF106:
 6156 036e 6E75 6D5F 		.string	"num_valid_cells"
 6156      7661 6C69 
 6156      645F 6365 
 6156      6C6C 7300 
 6157               	.LASF32:
 6158 037e 5F5F 746D 		.string	"__tm_mon"
 6158      5F6D 6F6E 
 6158      00
 6159               	.LASF11:
 6160 0387 5F6F 6666 		.string	"_off_t"
 6160      5F74 00
 6161               	.LASF101:
 6162 038e 636F 6D31 		.string	"com1in"
 6162      696E 00
 6163               	.LASF69:
 6164 0395 5F66 7265 		.string	"_freelist"
 6164      656C 6973 
 6164      7400 
 6165               	.LASF112:
 6166 039f 6666 6C75 		.string	"fflush"
 6166      7368 00
 6167               	.LASF142:
 6168 03a6 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 6168      4331 3720 
 6168      3131 2E34 
 6168      2E30 202D 
 6168      6D63 7075 
 6169               	.LASF146:
 6170 03ea 6265 6769 		.string	"begin_sch"
 6170      6E5F 7363 
 6170      6800 
68K GAS  /tmp/ccMFIMKI.s 			page 124


 6171               	.LASF108:
 6172 03f4 5F42 6F6F 		.string	"_Bool"
 6172      6C00 
 6173               	.LASF1:
 6174 03fa 756E 7369 		.string	"unsigned char"
 6174      676E 6564 
 6174      2063 6861 
 6174      7200 
 6175               	.LASF72:
 6176 0408 5F6E 6577 		.string	"_new"
 6176      00
 6177               	.LASF99:
 6178 040d 636F 6D30 		.string	"com0in"
 6178      696E 00
 6179               	.LASF97:
 6180 0414 5F68 5F65 		.string	"_h_errno"
 6180      7272 6E6F 
 6180      00
 6181               	.LASF2:
 6182 041d 7368 6F72 		.string	"short int"
 6182      7420 696E 
 6182      7400 
 6183               	.LASF35:
 6184 0427 5F5F 746D 		.string	"__tm_yday"
 6184      5F79 6461 
 6184      7900 
 6185               	.LASF37:
 6186 0431 5F5F 7362 		.string	"__sbuf"
 6186      7566 00
 6187               	.LASF75:
 6188 0438 5F5F 4649 		.string	"__FILE"
 6188      4C45 00
 6189               	.LASF18:
 6190 043f 5F6D 6273 		.string	"_mbstate_t"
 6190      7461 7465 
 6190      5F74 00
 6191               	.LASF40:
 6192 044a 5F5F 7346 		.string	"__sFILE"
 6192      494C 4500 
 6193               	.LASF55:
 6194 0452 5F6D 6273 		.string	"_mbstate"
 6194      7461 7465 
 6194      00
 6195               	.LASF84:
 6196 045b 5F72 616E 		.string	"_rand_next"
 6196      645F 6E65 
 6196      7874 00
 6197               	.LASF147:
 6198 0466 6368 6563 		.string	"check_win"
 6198      6B5F 7769 
 6198      6E00 
 6199               	.LASF86:
 6200 0470 5F6D 626C 		.string	"_mblen_state"
 6200      656E 5F73 
 6200      7461 7465 
 6200      00
 6201               	.LASF62:
68K GAS  /tmp/ccMFIMKI.s 			page 125


 6202 047d 5F69 6E63 		.string	"_inc"
 6202      00
 6203               	.LASF64:
 6204 0482 5F6C 6F63 		.string	"_locale"
 6204      616C 6500 
 6205               	.LASF65:
 6206 048a 5F5F 636C 		.string	"__cleanup"
 6206      6561 6E75 
 6206      7000 
 6207               	.LASF23:
 6208 0494 5F6D 6178 		.string	"_maxwds"
 6208      7764 7300 
 6209               	.LASF57:
 6210 049c 5F72 6565 		.string	"_reent"
 6210      6E74 00
 6211               	.LASF111:
 6212 04a3 6673 6361 		.string	"fscanf"
 6212      6E66 00
 6213               	.LASF77:
 6214 04aa 5F73 6565 		.string	"_seed"
 6214      6400 
 6215               	.LASF123:
 6216 04b0 7661 6C69 		.string	"valid"
 6216      6400 
 6217               	.LASF16:
 6218 04b6 5F5F 636F 		.string	"__count"
 6218      756E 7400 
 6219               	.LASF17:
 6220 04be 5F5F 7661 		.string	"__value"
 6220      6C75 6500 
 6221               	.LASF47:
 6222 04c6 5F73 6565 		.string	"_seek"
 6222      6B00 
 6223               	.LASF12:
 6224 04cc 5F66 706F 		.string	"_fpos_t"
 6224      735F 7400 
 6225               	.LASF8:
 6226 04d4 6C6F 6E67 		.string	"long double"
 6226      2064 6F75 
 6226      626C 6500 
 6227               	.LASF103:
 6228 04e0 625F 626F 		.string	"b_board"
 6228      6172 6400 
 6229               	.LASF58:
 6230 04e8 5F65 7272 		.string	"_errno"
 6230      6E6F 00
 6231               	.LASF74:
 6232 04ef 6368 6172 		.string	"char"
 6232      00
 6233               	.LASF29:
 6234 04f4 5F5F 746D 		.string	"__tm_min"
 6234      5F6D 696E 
 6234      00
 6235               	.LASF122:
 6236 04fd 706C 6179 		.string	"player_x"
 6236      6572 5F78 
 6236      00
68K GAS  /tmp/ccMFIMKI.s 			page 126


 6237               	.LASF78:
 6238 0506 5F6D 756C 		.string	"_mult"
 6238      7400 
 6239               	.LASF22:
 6240 050c 5F6E 6578 		.string	"_next"
 6240      7400 
 6241               	.LASF80:
 6242 0512 5F73 7472 		.string	"_strtok_last"
 6242      746F 6B5F 
 6242      6C61 7374 
 6242      00
 6243               	.LASF133:
 6244 051f 5F5F 6D6F 		.string	"__modsi3"
 6244      6473 6933 
 6244      00
 6245               	.LASF124:
 6246 0528 706C 6179 		.string	"player_maru"
 6246      6572 5F6D 
 6246      6172 7500 
 6247               	.LASF79:
 6248 0534 5F61 6464 		.string	"_add"
 6248      00
 6249               	.LASF19:
 6250 0539 5F5F 554C 		.string	"__ULong"
 6250      6F6E 6700 
 6251               	.LASF91:
 6252 0541 5F67 6574 		.string	"_getdate_err"
 6252      6461 7465 
 6252      5F65 7272 
 6252      00
 6253               	.LASF25:
 6254 054e 5F77 6473 		.string	"_wds"
 6254      00
 6255               	.LASF34:
 6256 0553 5F5F 746D 		.string	"__tm_wday"
 6256      5F77 6461 
 6256      7900 
 6257               	.LASF13:
 6258 055d 5F73 7369 		.string	"_ssize_t"
 6258      7A65 5F74 
 6258      00
 6259               	.LASF89:
 6260 0566 5F6C 3634 		.string	"_l64a_buf"
 6260      615F 6275 
 6260      6600 
 6261               	.LASF73:
 6262 0570 5F73 6967 		.string	"_sig_func"
 6262      5F66 756E 
 6262      6300 
 6263               	.LASF127:
 6264 057a 7363 7265 		.string	"screen"
 6264      656E 00
 6265               	.LASF50:
 6266 0581 5F6E 6275 		.string	"_nbuf"
 6266      6600 
 6267               	.LASF134:
 6268 0587 6677 7269 		.string	"fwrite"
68K GAS  /tmp/ccMFIMKI.s 			page 127


 6268      7465 00
 6269               	.LASF36:
 6270 058e 5F5F 746D 		.string	"__tm_isdst"
 6270      5F69 7364 
 6270      7374 00
 6271               	.LASF82:
 6272 0599 5F6C 6F63 		.string	"_localtime_buf"
 6272      616C 7469 
 6272      6D65 5F62 
 6272      7566 00
 6273               	.LASF48:
 6274 05a8 5F63 6C6F 		.string	"_close"
 6274      7365 00
 6275               	.LASF85:
 6276 05af 5F72 3438 		.string	"_r48"
 6276      00
 6277               	.LASF87:
 6278 05b4 5F6D 6274 		.string	"_mbtowc_state"
 6278      6F77 635F 
 6278      7374 6174 
 6278      6500 
 6279               	.LASF68:
 6280 05c2 5F70 3573 		.string	"_p5s"
 6280      00
 6281               	.LASF128:
 6282 05c7 7570 6461 		.string	"update_board"
 6282      7465 5F62 
 6282      6F61 7264 
 6282      00
 6283               	.LASF129:
 6284 05d4 6D61 696E 		.string	"main"
 6284      00
 6285               	.LASF120:
 6286 05d9 696E 6974 		.string	"init_board"
 6286      5F62 6F61 
 6286      7264 00
 6287               	.LASF113:
 6288 05e4 6670 7269 		.string	"fprintf"
 6288      6E74 6600 
 6289               	.LASF31:
 6290 05ec 5F5F 746D 		.string	"__tm_mday"
 6290      5F6D 6461 
 6290      7900 
 6291               	.LASF114:
 6292 05f6 7375 6363 		.string	"success"
 6292      6573 7300 
 6293               		.ident	"GCC: (GNU) 11.4.0"
68K GAS  /tmp/ccMFIMKI.s 			page 128


DEFINED SYMBOLS
                            *ABS*:0000000000000000 test3.c
     /tmp/ccMFIMKI.s:9      .text:0000000000000000 is_valid_cell
     /tmp/ccMFIMKI.s:1835   .data:0000000000000000 num_valid_cells
     /tmp/ccMFIMKI.s:1841   .data:0000000000000004 valid_cells
     /tmp/ccMFIMKI.s:63     .text:0000000000000026 remove_cell
     /tmp/ccMFIMKI.s:161    .text:0000000000000090 update_board
     /tmp/ccMFIMKI.s:1854   .data:0000000000000028 board
     /tmp/ccMFIMKI.s:225    .text:00000000000000ce display_board
     /tmp/ccMFIMKI.s:1828   .bss:0000000000000000 player_X_playing
     /tmp/ccMFIMKI.s:1869   .bss:0000000000000026 com1out
     /tmp/ccMFIMKI.s:1881   .bss:000000000000002e com0out
     /tmp/ccMFIMKI.s:443    .text:0000000000000206 player_maru
     /tmp/ccMFIMKI.s:1887   .bss:0000000000000032 com0in
     /tmp/ccMFIMKI.s:657    .text:0000000000000302 player_x
     /tmp/ccMFIMKI.s:1875   .bss:000000000000002a com1in
     /tmp/ccMFIMKI.s:871    .text:0000000000000402 hurry_msg
     /tmp/ccMFIMKI.s:941    .text:0000000000000458 init_board
     /tmp/ccMFIMKI.s:1162   .text:00000000000005c6 binary_board
     /tmp/ccMFIMKI.s:1863   .bss:0000000000000002 b_board
     /tmp/ccMFIMKI.s:1270   .text:0000000000000624 check_win
     /tmp/ccMFIMKI.s:1642   .text:00000000000007d8 init_ports
     /tmp/ccMFIMKI.s:1782   .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
memmove
__divsi3
__modsi3
fwrite
fprintf
fputc
fflush
P
fscanf
V
fdopen
set_task
begin_sch
