68K GAS  /tmp/ccmq8Bnl.s 			page 1


   1               	#NO_APP
   2               		.file	"test3.c"
   3               		.text
   4               	.Ltext0:
   5               		.cfi_sections	.debug_frame
   6               		.section	.rodata.str1.1,"aMS",@progbits,1
   7               	.LC0:
   8 0000 7200      		.string	"r"
   9               	.LC1:
  10 0002 7700      		.string	"w"
  11               	.LC2:
  12 0004 1B5B 2564 		.string	"\033[%d;%dH"
  12      3B25 6448 
  12      00
  13               	.LC3:
  14 000d 506F 7274 		.string	"Ports Initialized! \n"
  14      7320 496E 
  14      6974 6961 
  14      6C69 7A65 
  14      6421 200A 
  15               		.text
  16               		.align	2
  17               		.globl	init_ports
  18               		.type	init_ports, @function
  19               	init_ports:
  20               	.LFB3:
  21               		.file 1 "test3.c"
   1:test3.c       **** #include <stdio.h>
   2:test3.c       **** #include <stdlib.h>
   3:test3.c       **** #include "mtk_c.h"
   4:test3.c       **** #include <stdbool.h>
   5:test3.c       **** 
   6:test3.c       **** extern char inbyte(int);
   7:test3.c       **** 
   8:test3.c       **** //For clearing the screen
   9:test3.c       **** #define ESC "\x1b"
  10:test3.c       **** #define HOME ESC "[H"
  11:test3.c       **** #define DELETESCREEN ESC "[2J"
  12:test3.c       **** #define CURSORINVISIBLE ESC "[?25l"
  13:test3.c       **** #define CURSORVISIBLE ESC "[?25h"
  14:test3.c       **** 
  15:test3.c       **** #define SAVECURSORLOC ESC "7"
  16:test3.c       **** #define RETCURSORLOC ESC "8"
  17:test3.c       **** 
  18:test3.c       **** 
  19:test3.c       **** typedef struct{
  20:test3.c       **** 	char mark;
  21:test3.c       **** 	int is_turn;
  22:test3.c       **** 	int port;
  23:test3.c       **** 	int score;
  24:test3.c       **** 	FILE *input;
  25:test3.c       **** 	FILE* output;
  26:test3.c       **** }Player;
  27:test3.c       **** 
  28:test3.c       **** //init players: player "O" starts 
  29:test3.c       **** Player player_x={'X',0,1,0,NULL,NULL};
  30:test3.c       **** Player player_O={'O',1,0,0,NULL,NULL};
68K GAS  /tmp/ccmq8Bnl.s 			page 2


  31:test3.c       **** 
  32:test3.c       **** int win_flg=0;
  33:test3.c       **** 
  34:test3.c       **** void init_ports(){
  22               		.loc 1 34 18 view -0
  23               		.cfi_startproc
  24 0000 2F0A      		move.l %a2,-(%sp)
  25               		.cfi_def_cfa_offset 8
  26               		.cfi_offset 10, -8
  27 0002 2F02      		move.l %d2,-(%sp)
  28               		.cfi_def_cfa_offset 12
  29               		.cfi_offset 2, -12
  35:test3.c       **** 	int success=4;
  30               		.loc 1 35 2 view .LVU1
  31               	.LVL0:
  36:test3.c       **** 	while (success>0){
  32               		.loc 1 36 2 view .LVU2
  33               		.loc 1 36 16 view .LVU3
  35:test3.c       **** 	int success=4;
  34               		.loc 1 35 6 is_stmt 0 view .LVU4
  35 0004 7404      		moveq #4,%d2
  36 0006 45F9 0000 		lea fdopen,%a2
  36      0000 
  37               	.LVL1:
  38               	.L6:
  37:test3.c       **** 		player_x.input=fdopen(4,"r") ;
  39               		.loc 1 37 3 is_stmt 1 view .LVU5
  40               		.loc 1 37 18 is_stmt 0 view .LVU6
  41 000c 4879 0000 		pea .LC0
  41      0000 
  42               		.cfi_def_cfa_offset 16
  43 0012 4878 0004 		pea 4.w
  44               		.cfi_def_cfa_offset 20
  45 0016 4E92      		jsr (%a2)
  46               	.LVL2:
  47               		.loc 1 37 17 view .LVU7
  48 0018 23C0 0000 		move.l %d0,player_x+14
  48      0000 
  38:test3.c       **** 		if(player_x.input!=NULL) success--;
  49               		.loc 1 38 3 is_stmt 1 view .LVU8
  50               		.loc 1 38 5 is_stmt 0 view .LVU9
  51 001e 508F      		addq.l #8,%sp
  52               		.cfi_def_cfa_offset 12
  53 0020 6702      		jeq .L2
  54               		.loc 1 38 28 is_stmt 1 discriminator 1 view .LVU10
  55               		.loc 1 38 35 is_stmt 0 discriminator 1 view .LVU11
  56 0022 5382      		subq.l #1,%d2
  57               	.LVL3:
  58               	.L2:
  39:test3.c       **** 		player_x.output=fdopen(4,"w");
  59               		.loc 1 39 3 is_stmt 1 view .LVU12
  60               		.loc 1 39 19 is_stmt 0 view .LVU13
  61 0024 4879 0000 		pea .LC1
  61      0000 
  62               		.cfi_def_cfa_offset 16
  63 002a 4878 0004 		pea 4.w
  64               		.cfi_def_cfa_offset 20
68K GAS  /tmp/ccmq8Bnl.s 			page 3


  65 002e 4E92      		jsr (%a2)
  66               	.LVL4:
  67               		.loc 1 39 18 view .LVU14
  68 0030 23C0 0000 		move.l %d0,player_x+18
  68      0000 
  40:test3.c       **** 		if(player_x.output!=NULL) success--;
  69               		.loc 1 40 3 is_stmt 1 view .LVU15
  70               		.loc 1 40 5 is_stmt 0 view .LVU16
  71 0036 508F      		addq.l #8,%sp
  72               		.cfi_def_cfa_offset 12
  73 0038 6702      		jeq .L3
  74               		.loc 1 40 29 is_stmt 1 discriminator 1 view .LVU17
  75               		.loc 1 40 36 is_stmt 0 discriminator 1 view .LVU18
  76 003a 5382      		subq.l #1,%d2
  77               	.LVL5:
  78               	.L3:
  41:test3.c       **** 		player_O.input=fdopen(3,"r");
  79               		.loc 1 41 3 is_stmt 1 view .LVU19
  80               		.loc 1 41 18 is_stmt 0 view .LVU20
  81 003c 4879 0000 		pea .LC0
  81      0000 
  82               		.cfi_def_cfa_offset 16
  83 0042 4878 0003 		pea 3.w
  84               		.cfi_def_cfa_offset 20
  85 0046 4E92      		jsr (%a2)
  86               	.LVL6:
  87               		.loc 1 41 17 view .LVU21
  88 0048 23C0 0000 		move.l %d0,player_O+14
  88      0000 
  42:test3.c       **** 		if (player_O.input!=NULL) success--;
  89               		.loc 1 42 3 is_stmt 1 view .LVU22
  90               		.loc 1 42 6 is_stmt 0 view .LVU23
  91 004e 508F      		addq.l #8,%sp
  92               		.cfi_def_cfa_offset 12
  93 0050 6702      		jeq .L4
  94               		.loc 1 42 29 is_stmt 1 discriminator 1 view .LVU24
  95               		.loc 1 42 36 is_stmt 0 discriminator 1 view .LVU25
  96 0052 5382      		subq.l #1,%d2
  97               	.LVL7:
  98               	.L4:
  43:test3.c       **** 		player_O.output=fdopen(3,"w");
  99               		.loc 1 43 3 is_stmt 1 view .LVU26
 100               		.loc 1 43 19 is_stmt 0 view .LVU27
 101 0054 4879 0000 		pea .LC1
 101      0000 
 102               		.cfi_def_cfa_offset 16
 103 005a 4878 0003 		pea 3.w
 104               		.cfi_def_cfa_offset 20
 105 005e 4E92      		jsr (%a2)
 106               	.LVL8:
 107               		.loc 1 43 18 view .LVU28
 108 0060 23C0 0000 		move.l %d0,player_O+18
 108      0000 
  44:test3.c       **** 		if (player_O.output!=NULL) success--;
 109               		.loc 1 44 3 is_stmt 1 view .LVU29
 110               		.loc 1 44 6 is_stmt 0 view .LVU30
 111 0066 508F      		addq.l #8,%sp
68K GAS  /tmp/ccmq8Bnl.s 			page 4


 112               		.cfi_def_cfa_offset 12
 113 0068 6702      		jeq .L5
 114               		.loc 1 44 30 is_stmt 1 discriminator 1 view .LVU31
 115               		.loc 1 44 37 is_stmt 0 discriminator 1 view .LVU32
 116 006a 5382      		subq.l #1,%d2
 117               	.LVL9:
 118               	.L5:
  36:test3.c       **** 		player_x.input=fdopen(4,"r") ;
 119               		.loc 1 36 16 is_stmt 1 view .LVU33
 120 006c 4A82      		tst.l %d2
 121 006e 6E9C      		jgt .L6
  45:test3.c       **** 		}
  46:test3.c       **** 	fprintf(player_x.output, "\033[%d;%dH", 1, 1);
 122               		.loc 1 46 2 view .LVU34
 123 0070 4878 0001 		pea 1.w
 124               		.cfi_def_cfa_offset 16
 125 0074 4878 0001 		pea 1.w
 126               		.cfi_def_cfa_offset 20
 127 0078 4879 0000 		pea .LC2
 127      0000 
 128               		.cfi_def_cfa_offset 24
 129 007e 2F39 0000 		move.l player_x+18,-(%sp)
 129      0000 
 130               		.cfi_def_cfa_offset 28
 131 0084 45F9 0000 		lea fprintf,%a2
 131      0000 
 132 008a 4E92      		jsr (%a2)
 133               	.LVL10:
  47:test3.c       **** 	fprintf(player_O.output, "\033[%d;%dH", 1, 1);
 134               		.loc 1 47 2 view .LVU35
 135 008c 4878 0001 		pea 1.w
 136               		.cfi_def_cfa_offset 32
 137 0090 4878 0001 		pea 1.w
 138               		.cfi_def_cfa_offset 36
 139 0094 4879 0000 		pea .LC2
 139      0000 
 140               		.cfi_def_cfa_offset 40
 141 009a 2F39 0000 		move.l player_O+18,-(%sp)
 141      0000 
 142               		.cfi_def_cfa_offset 44
 143 00a0 4E92      		jsr (%a2)
 144               	.LVL11:
  48:test3.c       **** 	fprintf(player_x.output, "Ports Initialized! \n");
 145               		.loc 1 48 2 view .LVU36
 146 00a2 4FEF 001C 		lea (28,%sp),%sp
 147               		.cfi_def_cfa_offset 16
 148 00a6 2EB9 0000 		move.l player_x+18,(%sp)
 148      0000 
 149 00ac 4878 0014 		pea 20.w
 150               		.cfi_def_cfa_offset 20
 151 00b0 4878 0001 		pea 1.w
 152               		.cfi_def_cfa_offset 24
 153 00b4 4879 0000 		pea .LC3
 153      0000 
 154               		.cfi_def_cfa_offset 28
 155 00ba 45F9 0000 		lea fwrite,%a2
 155      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 5


 156 00c0 4E92      		jsr (%a2)
 157               	.LVL12:
  49:test3.c       **** 	fprintf(player_O.output, "Ports Initialized! \n");
 158               		.loc 1 49 2 view .LVU37
 159 00c2 2F39 0000 		move.l player_O+18,-(%sp)
 159      0000 
 160               		.cfi_def_cfa_offset 32
 161 00c8 4878 0014 		pea 20.w
 162               		.cfi_def_cfa_offset 36
 163 00cc 4878 0001 		pea 1.w
 164               		.cfi_def_cfa_offset 40
 165 00d0 4879 0000 		pea .LC3
 165      0000 
 166               		.cfi_def_cfa_offset 44
 167 00d6 4E92      		jsr (%a2)
 168               	.LVL13:
  50:test3.c       **** 	}	
 169               		.loc 1 50 2 is_stmt 0 view .LVU38
 170 00d8 4FEF 0020 		lea (32,%sp),%sp
 171               		.cfi_def_cfa_offset 12
 172 00dc 241F      		move.l (%sp)+,%d2
 173               	.LVL14:
 174               		.loc 1 50 2 view .LVU39
 175 00de 245F      		move.l (%sp)+,%a2
 176 00e0 4E75      		rts
 177               		.cfi_endproc
 178               	.LFE3:
 179               		.size	init_ports, .-init_ports
 180               		.align	2
 181               		.globl	is_valid_cell
 182               		.type	is_valid_cell, @function
 183               	is_valid_cell:
 184               	.LVL15:
 185               	.LFB4:
  51:test3.c       **** 	
  52:test3.c       **** 	
  53:test3.c       **** //global variables for functions
  54:test3.c       **** int b_board[3][3]={0};
  55:test3.c       **** char board[3][3] = {
  56:test3.c       ****     {'0', '1', '2'},
  57:test3.c       ****     {'3', '4', '5'},
  58:test3.c       ****     {'6', '7', '8'}
  59:test3.c       **** };
  60:test3.c       **** char valid_cells[9] = {'0', '1', '2', '3', '4', '5', '6', '7', '8'};
  61:test3.c       **** char valid_cells_copy[9] = {'0', '1', '2', '3', '4', '5', '6', '7', '8'};
  62:test3.c       **** int valid_cells_length=9;
  63:test3.c       **** 
  64:test3.c       **** //fct for tracking empty cells
  65:test3.c       **** bool is_valid_cell(char cell) {
 186               		.loc 1 65 31 is_stmt 1 view -0
 187               		.cfi_startproc
 188               		.loc 1 65 31 is_stmt 0 view .LVU41
 189 00e2 102F 0007 		move.b 7(%sp),%d0
  66:test3.c       ****     for (int i = 0; i < 9; i++) {
 190               		.loc 1 66 5 is_stmt 1 view .LVU42
 191               	.LBB14:
 192               		.loc 1 66 10 view .LVU43
68K GAS  /tmp/ccmq8Bnl.s 			page 6


 193               	.LVL16:
 194               		.loc 1 66 23 view .LVU44
 195 00e6 41F9 0000 		lea valid_cells,%a0
 195      0000 
 196               	.LVL17:
 197               	.L24:
  67:test3.c       ****         if (valid_cells[i] == cell) return true;
 198               		.loc 1 67 9 view .LVU45
 199               		.loc 1 67 12 is_stmt 0 view .LVU46
 200 00ec B018      		cmp.b (%a0)+,%d0
 201 00ee 670C      		jeq .L25
 202               	.LVL18:
  66:test3.c       ****     for (int i = 0; i < 9; i++) {
 203               		.loc 1 66 29 is_stmt 1 discriminator 2 view .LVU47
  66:test3.c       ****     for (int i = 0; i < 9; i++) {
 204               		.loc 1 66 23 discriminator 2 view .LVU48
 205 00f0 B1FC 0000 		cmp.l #valid_cells+9,%a0
 205      0000 
 206 00f6 66F4      		jne .L24
 207               	.LBE14:
  68:test3.c       ****     }
  69:test3.c       ****     return false;
 208               		.loc 1 69 12 is_stmt 0 view .LVU49
 209 00f8 4200      		clr.b %d0
  70:test3.c       **** }
 210               		.loc 1 70 1 view .LVU50
 211 00fa 4E75      		rts
 212               	.LVL19:
 213               	.L25:
 214               	.LBB15:
  67:test3.c       ****         if (valid_cells[i] == cell) return true;
 215               		.loc 1 67 44 view .LVU51
 216 00fc 7001      		moveq #1,%d0
 217               	.LBE15:
 218               		.loc 1 70 1 view .LVU52
 219 00fe 4E75      		rts
 220               		.cfi_endproc
 221               	.LFE4:
 222               		.size	is_valid_cell, .-is_valid_cell
 223               		.align	2
 224               		.globl	remove_cell
 225               		.type	remove_cell, @function
 226               	remove_cell:
 227               	.LVL20:
 228               	.LFB5:
  71:test3.c       **** 
  72:test3.c       **** void remove_cell(char cell) {
 229               		.loc 1 72 29 is_stmt 1 view -0
 230               		.cfi_startproc
 231               		.loc 1 72 29 is_stmt 0 view .LVU54
 232 0100 2F02      		move.l %d2,-(%sp)
 233               		.cfi_def_cfa_offset 8
 234               		.cfi_offset 2, -8
 235 0102 142F 000B 		move.b 11(%sp),%d2
  73:test3.c       ****     for (int i = 0; i < valid_cells_length; i++) {
 236               		.loc 1 73 5 is_stmt 1 view .LVU55
 237               	.LBB16:
68K GAS  /tmp/ccmq8Bnl.s 			page 7


 238               		.loc 1 73 10 view .LVU56
 239               	.LVL21:
 240               		.loc 1 73 23 view .LVU57
 241 0106 2239 0000 		move.l valid_cells_length,%d1
 241      0000 
 242 010c 6F14      		jle .L29
 243               		.loc 1 73 14 is_stmt 0 view .LVU58
 244 010e 7000      		moveq #0,%d0
 245 0110 41F9 0000 		lea valid_cells,%a0
 245      0000 
 246               	.LVL22:
 247               	.L33:
  74:test3.c       ****         if (valid_cells[i] == cell) {
 248               		.loc 1 74 9 is_stmt 1 view .LVU59
 249               		.loc 1 74 12 is_stmt 0 view .LVU60
 250 0116 B430 0800 		cmp.b (%a0,%d0.l),%d2
 251 011a 670A      		jeq .L37
  73:test3.c       ****     for (int i = 0; i < valid_cells_length; i++) {
 252               		.loc 1 73 46 is_stmt 1 discriminator 2 view .LVU61
 253 011c 5280      		addq.l #1,%d0
 254               	.LVL23:
  73:test3.c       ****     for (int i = 0; i < valid_cells_length; i++) {
 255               		.loc 1 73 23 discriminator 2 view .LVU62
 256 011e B280      		cmp.l %d0,%d1
 257 0120 66F4      		jne .L33
 258               	.LVL24:
 259               	.L29:
  73:test3.c       ****     for (int i = 0; i < valid_cells_length; i++) {
 260               		.loc 1 73 23 is_stmt 0 discriminator 2 view .LVU63
 261               	.LBE16:
  75:test3.c       ****             // Shift the remaining cells
  76:test3.c       ****             for (int j = i; j < valid_cells_length - 1; j++) {
  77:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
  78:test3.c       ****             }
  79:test3.c       ****             //valid_cells[i]='n';
  80:test3.c       ****             valid_cells_length=valid_cells_length-1;
  81:test3.c       ****             break;
  82:test3.c       ****         }
  83:test3.c       ****     }
  84:test3.c       **** }
 262               		.loc 1 84 1 view .LVU64
 263 0122 241F      		move.l (%sp)+,%d2
 264 0124 4E75      		rts
 265               	.LVL25:
 266               	.L37:
 267               	.LBB18:
 268               	.LBB17:
  76:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 269               		.loc 1 76 31 is_stmt 1 view .LVU65
  76:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 270               		.loc 1 76 52 is_stmt 0 view .LVU66
 271 0126 2401      		move.l %d1,%d2
 272 0128 5382      		subq.l #1,%d2
  76:test3.c       ****                 valid_cells[j] = valid_cells[j + 1];
 273               		.loc 1 76 31 view .LVU67
 274 012a B082      		cmp.l %d2,%d0
 275 012c 6C22      		jge .L32
68K GAS  /tmp/ccmq8Bnl.s 			page 8


  77:test3.c       ****             }
 276               		.loc 1 77 32 view .LVU68
 277 012e 2202      		move.l %d2,%d1
 278 0130 9280      		sub.l %d0,%d1
 279 0132 2F01      		move.l %d1,-(%sp)
 280               		.cfi_def_cfa_offset 12
 281 0134 2200      		move.l %d0,%d1
 282 0136 0681 0000 		add.l #valid_cells+1,%d1
 282      0000 
 283 013c 2F01      		move.l %d1,-(%sp)
 284               		.cfi_def_cfa_offset 16
 285 013e 0680 0000 		add.l #valid_cells,%d0
 285      0000 
 286               	.LVL26:
  77:test3.c       ****             }
 287               		.loc 1 77 32 view .LVU69
 288 0144 2F00      		move.l %d0,-(%sp)
 289               		.cfi_def_cfa_offset 20
 290 0146 4EB9 0000 		jsr memmove
 290      0000 
 291               	.LVL27:
  77:test3.c       ****             }
 292               		.loc 1 77 32 view .LVU70
 293 014c 4FEF 000C 		lea (12,%sp),%sp
 294               		.cfi_def_cfa_offset 8
 295               	.L32:
  77:test3.c       ****             }
 296               		.loc 1 77 32 view .LVU71
 297               	.LBE17:
  80:test3.c       ****             break;
 298               		.loc 1 80 13 is_stmt 1 view .LVU72
  80:test3.c       ****             break;
 299               		.loc 1 80 31 is_stmt 0 view .LVU73
 300 0150 23C2 0000 		move.l %d2,valid_cells_length
 300      0000 
  81:test3.c       ****         }
 301               		.loc 1 81 13 is_stmt 1 view .LVU74
 302               	.LBE18:
 303               		.loc 1 84 1 is_stmt 0 view .LVU75
 304 0156 241F      		move.l (%sp)+,%d2
 305 0158 4E75      		rts
 306               		.cfi_endproc
 307               	.LFE5:
 308               		.size	remove_cell, .-remove_cell
 309               		.align	2
 310               		.globl	init_board
 311               		.type	init_board, @function
 312               	init_board:
 313               	.LFB6:
  85:test3.c       **** //draws the init Tic-Tac-Toe board for both players
  86:test3.c       **** void init_board() {
 314               		.loc 1 86 19 is_stmt 1 view -0
 315               		.cfi_startproc
  87:test3.c       **** 
  88:test3.c       **** 	//fprintf(player_x.output,"\033[2J");
  89:test3.c       **** 	//fprintf(player_x.output,"\033[2J");
  90:test3.c       **** 	valid_cells_length=9;
68K GAS  /tmp/ccmq8Bnl.s 			page 9


 316               		.loc 1 90 2 view .LVU77
 317               		.loc 1 90 20 is_stmt 0 view .LVU78
 318 015a 7009      		moveq #9,%d0
 319 015c 23C0 0000 		move.l %d0,valid_cells_length
 319      0000 
  91:test3.c       **** 	win_flg=0;
 320               		.loc 1 91 2 is_stmt 1 view .LVU79
 321               		.loc 1 91 9 is_stmt 0 view .LVU80
 322 0162 42B9 0000 		clr.l win_flg
 322      0000 
  92:test3.c       **** 	for (int i = 0; i < 9; i++) {
 323               		.loc 1 92 2 is_stmt 1 view .LVU81
 324               	.LBB19:
 325               		.loc 1 92 7 view .LVU82
 326               	.LVL28:
 327               		.loc 1 92 20 view .LVU83
  93:test3.c       **** 		valid_cells[i]=valid_cells_copy[i];
 328               		.loc 1 93 17 is_stmt 0 view .LVU84
 329 0168 13F9 0000 		move.b valid_cells_copy,valid_cells
 329      0000 0000 
 329      0000 
 330 0172 13F9 0000 		move.b valid_cells_copy+1,valid_cells+1
 330      0000 0000 
 330      0000 
 331 017c 13F9 0000 		move.b valid_cells_copy+2,valid_cells+2
 331      0000 0000 
 331      0000 
 332 0186 13F9 0000 		move.b valid_cells_copy+3,valid_cells+3
 332      0000 0000 
 332      0000 
 333 0190 13F9 0000 		move.b valid_cells_copy+4,valid_cells+4
 333      0000 0000 
 333      0000 
 334 019a 13F9 0000 		move.b valid_cells_copy+5,valid_cells+5
 334      0000 0000 
 334      0000 
 335 01a4 13F9 0000 		move.b valid_cells_copy+6,valid_cells+6
 335      0000 0000 
 335      0000 
 336 01ae 13F9 0000 		move.b valid_cells_copy+7,valid_cells+7
 336      0000 0000 
 336      0000 
 337 01b8 13F9 0000 		move.b valid_cells_copy+8,valid_cells+8
 337      0000 0000 
 337      0000 
 338               	.LVL29:
 339               		.loc 1 93 17 view .LVU85
 340               	.LBE19:
 341               	.LBB20:
 342               	.LBB21:
  94:test3.c       **** 	}
  95:test3.c       **** 	for (int i = 0; i < 3; i++) {
  96:test3.c       ****         	for (int j = 0; j < 3; j++) {
 343               		.loc 1 96 28 is_stmt 1 view .LVU86
  97:test3.c       ****         		board[i][j]='0'+i*3+j;
 344               		.loc 1 97 11 view .LVU87
 345               		.loc 1 97 22 is_stmt 0 view .LVU88
68K GAS  /tmp/ccmq8Bnl.s 			page 10


 346 01c2 13FC 0030 		move.b #48,board
 346      0000 0000 
  98:test3.c       ****         		b_board[i][j]=0;
 347               		.loc 1 98 11 is_stmt 1 view .LVU89
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 348               		.loc 1 96 34 view .LVU90
 349               	.LVL30:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 350               		.loc 1 96 28 view .LVU91
  97:test3.c       ****         		board[i][j]='0'+i*3+j;
 351               		.loc 1 97 11 view .LVU92
  97:test3.c       ****         		board[i][j]='0'+i*3+j;
 352               		.loc 1 97 22 is_stmt 0 view .LVU93
 353 01ca 13FC 0031 		move.b #49,board+1
 353      0000 0000 
 354               		.loc 1 98 11 is_stmt 1 view .LVU94
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 355               		.loc 1 96 34 view .LVU95
 356               	.LVL31:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 357               		.loc 1 96 28 view .LVU96
  97:test3.c       ****         		board[i][j]='0'+i*3+j;
 358               		.loc 1 97 11 view .LVU97
  97:test3.c       ****         		board[i][j]='0'+i*3+j;
 359               		.loc 1 97 22 is_stmt 0 view .LVU98
 360 01d2 13FC 0032 		move.b #50,board+2
 360      0000 0000 
 361               		.loc 1 98 11 is_stmt 1 view .LVU99
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 362               		.loc 1 96 34 view .LVU100
 363               	.LVL32:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 364               		.loc 1 96 28 view .LVU101
 365               	.LBE21:
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 366               		.loc 1 95 26 view .LVU102
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 367               		.loc 1 95 20 view .LVU103
 368               	.LBB22:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 369               		.loc 1 96 28 view .LVU104
  97:test3.c       ****         		b_board[i][j]=0;
 370               		.loc 1 97 11 view .LVU105
  97:test3.c       ****         		b_board[i][j]=0;
 371               		.loc 1 97 22 is_stmt 0 view .LVU106
 372 01da 13FC 0033 		move.b #51,board+3
 372      0000 0000 
 373               		.loc 1 98 11 is_stmt 1 view .LVU107
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 374               		.loc 1 96 34 view .LVU108
 375               	.LVL33:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 376               		.loc 1 96 28 view .LVU109
  97:test3.c       ****         		b_board[i][j]=0;
 377               		.loc 1 97 11 view .LVU110
  97:test3.c       ****         		b_board[i][j]=0;
 378               		.loc 1 97 22 is_stmt 0 view .LVU111
68K GAS  /tmp/ccmq8Bnl.s 			page 11


 379 01e2 13FC 0034 		move.b #52,board+4
 379      0000 0000 
 380               		.loc 1 98 11 is_stmt 1 view .LVU112
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 381               		.loc 1 96 34 view .LVU113
 382               	.LVL34:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 383               		.loc 1 96 28 view .LVU114
  97:test3.c       ****         		b_board[i][j]=0;
 384               		.loc 1 97 11 view .LVU115
  97:test3.c       ****         		b_board[i][j]=0;
 385               		.loc 1 97 22 is_stmt 0 view .LVU116
 386 01ea 13FC 0035 		move.b #53,board+5
 386      0000 0000 
 387               		.loc 1 98 11 is_stmt 1 view .LVU117
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 388               		.loc 1 96 34 view .LVU118
 389               	.LVL35:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 390               		.loc 1 96 28 view .LVU119
 391               	.LBE22:
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 392               		.loc 1 95 26 view .LVU120
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 393               		.loc 1 95 20 view .LVU121
 394               	.LBB23:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 395               		.loc 1 96 28 view .LVU122
  97:test3.c       ****         		b_board[i][j]=0;
 396               		.loc 1 97 11 view .LVU123
  97:test3.c       ****         		b_board[i][j]=0;
 397               		.loc 1 97 22 is_stmt 0 view .LVU124
 398 01f2 13FC 0036 		move.b #54,board+6
 398      0000 0000 
 399               		.loc 1 98 11 is_stmt 1 view .LVU125
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 400               		.loc 1 96 34 view .LVU126
 401               	.LVL36:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 402               		.loc 1 96 28 view .LVU127
  97:test3.c       ****         		b_board[i][j]=0;
 403               		.loc 1 97 11 view .LVU128
  97:test3.c       ****         		b_board[i][j]=0;
 404               		.loc 1 97 22 is_stmt 0 view .LVU129
 405 01fa 13FC 0037 		move.b #55,board+7
 405      0000 0000 
 406               		.loc 1 98 11 is_stmt 1 view .LVU130
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 407               		.loc 1 96 34 view .LVU131
 408               	.LVL37:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 409               		.loc 1 96 28 view .LVU132
  97:test3.c       ****         		b_board[i][j]=0;
 410               		.loc 1 97 11 view .LVU133
  97:test3.c       ****         		b_board[i][j]=0;
 411               		.loc 1 97 22 is_stmt 0 view .LVU134
 412 0202 13FC 0038 		move.b #56,board+8
68K GAS  /tmp/ccmq8Bnl.s 			page 12


 412      0000 0000 
 413               		.loc 1 98 11 is_stmt 1 view .LVU135
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 414               		.loc 1 96 34 view .LVU136
 415               	.LVL38:
  96:test3.c       ****         		board[i][j]='0'+i*3+j;
 416               		.loc 1 96 28 view .LVU137
 417               	.LBE23:
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 418               		.loc 1 95 26 view .LVU138
  95:test3.c       ****         	for (int j = 0; j < 3; j++) {
 419               		.loc 1 95 20 view .LVU139
 420               	.LBB24:
 421               		.loc 1 98 24 is_stmt 0 view .LVU140
 422 020a 42B9 0000 		clr.l b_board
 422      0000 
 423 0210 42B9 0000 		clr.l b_board+4
 423      0000 
 424 0216 42B9 0000 		clr.l b_board+8
 424      0000 
 425 021c 42B9 0000 		clr.l b_board+12
 425      0000 
 426 0222 42B9 0000 		clr.l b_board+16
 426      0000 
 427 0228 42B9 0000 		clr.l b_board+20
 427      0000 
 428 022e 42B9 0000 		clr.l b_board+24
 428      0000 
 429 0234 42B9 0000 		clr.l b_board+28
 429      0000 
 430 023a 42B9 0000 		clr.l b_board+32
 430      0000 
 431               	.LVL39:
 432               		.loc 1 98 24 view .LVU141
 433               	.LBE24:
 434               	.LBE20:
  99:test3.c       ****         		}
 100:test3.c       ****         	}
 101:test3.c       ****         }
 435               		.loc 1 101 9 view .LVU142
 436 0240 4E75      		rts
 437               		.cfi_endproc
 438               	.LFE6:
 439               		.size	init_board, .-init_board
 440               		.section	.rodata.str1.1
 441               	.LC4:
 442 0022 796F 7572 		.string	"your score is: %d\n"
 442      2073 636F 
 442      7265 2069 
 442      733A 2025 
 442      640A 00
 443               	.LC5:
 444 0035 596F 7520 		.string	"You win!!\n"
 444      7769 6E21 
 444      210A 00
 445               	.LC6:
 446 0040 596F 7520 		.string	"You lose...\n"
68K GAS  /tmp/ccmq8Bnl.s 			page 13


 446      6C6F 7365 
 446      2E2E 2E0A 
 446      00
 447               	.LC7:
 448 004d 4974 2773 		.string	"It's a draw!\n"
 448      2061 2064 
 448      7261 7721 
 448      0A00 
 449               	.LC8:
 450 005b 446F 2079 		.string	"Do you want to play again? y/n \n"
 450      6F75 2077 
 450      616E 7420 
 450      746F 2070 
 450      6C61 7920 
 451               	.LC9:
 452 007c 4761 6D65 		.string	"Game is over\n Your score is %d"
 452      2069 7320 
 452      6F76 6572 
 452      0A20 596F 
 452      7572 2073 
 453               		.text
 454               		.align	2
 455               		.globl	win_lose_msg
 456               		.type	win_lose_msg, @function
 457               	win_lose_msg:
 458               	.LFB12:
 102:test3.c       **** 
 103:test3.c       **** //updates the board after each player move
 104:test3.c       **** void update_board(int cell, char mark) {
 105:test3.c       ****     int row = cell / 3;
 106:test3.c       ****     int col = cell % 3;
 107:test3.c       ****     board[row][col] = mark;
 108:test3.c       **** }
 109:test3.c       **** //displays the board after the change
 110:test3.c       **** void display_board() {
 111:test3.c       **** 	//Clear the screen
 112:test3.c       **** 	fprintf(player_x.output,"\033[2J");
 113:test3.c       **** 	fprintf(player_O.output,"\033[2J");
 114:test3.c       **** 	// disable cursor while drawing
 115:test3.c       **** 	//fprintf(player_x.output, "%s", CURSORINVISIBLE);
 116:test3.c       **** 	//fprintf(player_O.output, "%s", CURSORINVISIBLE);
 117:test3.c       **** 	fprintf(player_x.output, "\033[%d;%dH", 1, 1);
 118:test3.c       **** 	fprintf(player_O.output, "\033[%d;%dH", 1, 1);
 119:test3.c       **** 	 //fprintf(player_O.output,"%d\n",valid_cells_length);
 120:test3.c       ****          //fprintf(player_x.output,"%d\n",valid_cells_length);
 121:test3.c       ****     	for (int i = 0; i < 3; i++) {
 122:test3.c       ****         	for (int j = 0; j < 3; j++) {
 123:test3.c       ****             		fprintf(player_x.output," %c ", board[i][j]); // Print the current cell value
 124:test3.c       ****             		fprintf(player_O.output," %c ", board[i][j]);
 125:test3.c       ****             		if (j < 2) {
 126:test3.c       ****             			fprintf(player_x.output,"|");     // Print column separator
 127:test3.c       ****             			fprintf(player_O.output,"|"); 
 128:test3.c       ****             			}
 129:test3.c       ****        			 }
 130:test3.c       ****         		fprintf(player_x.output,"\n");
 131:test3.c       ****         		fprintf(player_O.output,"\n");
 132:test3.c       ****         	if (i < 2) {
68K GAS  /tmp/ccmq8Bnl.s 			page 14


 133:test3.c       ****         		fprintf(player_x.output,"---+---+---\n"); // Print row separator
 134:test3.c       ****         		fprintf(player_O.output,"---+---+---\n");
 135:test3.c       ****     }
 136:test3.c       ****     	
 137:test3.c       **** 	
 138:test3.c       **** 	
 139:test3.c       ****     }
 140:test3.c       **** 	
 141:test3.c       ****  }
 142:test3.c       ****     
 143:test3.c       **** void binary_board(char mark){//changes the X/O to 0/1
 144:test3.c       **** 	for (int i = 0; i < 3;i++){
 145:test3.c       **** 		for (int j = 0; j < 3;j++){
 146:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 147:test3.c       **** 				b_board[i][j] = 1;
 148:test3.c       **** 			}
 149:test3.c       **** 			else b_board[i][j]=0;
 150:test3.c       **** 		}
 151:test3.c       **** 	}
 152:test3.c       **** }
 153:test3.c       **** 
 154:test3.c       **** 
 155:test3.c       **** //we check after changing the X/O to 1/0 depending on who's playing
 156:test3.c       **** int check_win(FILE* screen,int in,char mark){//in is the last input cell [0..8]
 157:test3.c       **** 	int row= in/3;
 158:test3.c       **** 	int col = in % 3;
 159:test3.c       **** 	int win[2] = {1,1};//if equals 3 means win
 160:test3.c       **** 	binary_board(mark);
 161:test3.c       **** 	//fprintf(screen,"%d \n,",row);
 162:test3.c       **** 	//fprintf(screen,"%d \n",col);
 163:test3.c       **** 	for (int i = 0; i < 3;i++){
 164:test3.c       **** 		for (int j = 0; j < 3;j++){
 165:test3.c       **** 	fprintf(screen,"%d,",b_board[i][j]);
 166:test3.c       **** 	}}
 167:test3.c       **** 	// this for loop can detect if there's a win vertically or horizontally
 168:test3.c       **** 	for (int i = 1; i < 3; i++)
 169:test3.c       **** 	{
 170:test3.c       **** 		if (col+i-1 < 2)
 171:test3.c       **** 		{
 172:test3.c       **** 			win[0] = win[0]+b_board[row][col + i];
 173:test3.c       **** 		}
 174:test3.c       **** 		if (col - i + 1 > 0)
 175:test3.c       **** 		{
 176:test3.c       **** 			win[0] = win[0]+b_board[row][col - i];
 177:test3.c       **** 		}
 178:test3.c       **** 
 179:test3.c       **** 		if(row+i-1<2){
 180:test3.c       **** 			win[1] = win[1]+b_board[row+i][col];
 181:test3.c       **** 		}
 182:test3.c       **** 		if(row-i+1>0){
 183:test3.c       **** 			win[1] = win[1]+b_board[row-i][col];
 184:test3.c       **** 		}
 185:test3.c       **** 	}
 186:test3.c       **** 	for (int i = 0; i < 2; i++){
 187:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 188:test3.c       **** 		if(win[i]==3){
 189:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
68K GAS  /tmp/ccmq8Bnl.s 			page 15


 190:test3.c       **** 			win_flg=1;
 191:test3.c       **** 			return 1;
 192:test3.c       **** 			}
 193:test3.c       **** 	}
 194:test3.c       **** 	if (in == 4)
 195:test3.c       **** 	{
 196:test3.c       **** 		int win1 = b_board[0][0] + b_board[1][1] + b_board[2][2];
 197:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 198:test3.c       **** 		if(win1==3||win2==3){
 199:test3.c       **** 			fprintf(screen, "diag1wi\n");
 200:test3.c       **** 			win_flg=1;
 201:test3.c       **** 			return 1;}
 202:test3.c       **** 	} else if(in%4==0){
 203:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 204:test3.c       **** 		if (win==3){
 205:test3.c       **** 			fprintf(screen, "diag2win\n");
 206:test3.c       **** 			win_flg=1;
 207:test3.c       **** 			return 1;
 208:test3.c       **** 			}
 209:test3.c       **** 	}else if(in%4==2){
 210:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
 211:test3.c       **** 		if(win==3){
 212:test3.c       **** 			//fprintf(screen, "diag3win\n");
 213:test3.c       **** 			win_flg=1;
 214:test3.c       **** 			return 1;
 215:test3.c       **** 	}}
 216:test3.c       **** 	else
 217:test3.c       **** 		return 0;
 218:test3.c       **** 	return 0;
 219:test3.c       **** }
 220:test3.c       **** 
 221:test3.c       **** 
 222:test3.c       **** void player_maru() {
 223:test3.c       **** 	
 224:test3.c       **** 	
 225:test3.c       **** 	
 226:test3.c       **** 	while (1)
 227:test3.c       **** 	{
 228:test3.c       **** 		P(0);
 229:test3.c       **** 		char cell;
 230:test3.c       **** 		bool valid = false;
 231:test3.c       **** 		player_x.is_turn = false;
 232:test3.c       **** 		player_O.is_turn=true;
 233:test3.c       **** 		display_board(); // Show the updated board
 234:test3.c       **** 		while (!valid) {
 235:test3.c       **** 			// choose a cell
 236:test3.c       **** 			fprintf(player_O.output, "Player 'O', choose a cell (0-8): \n");
 237:test3.c       **** 			fprintf(player_O.output,"%s", CURSORVISIBLE);//enable cursor
 238:test3.c       **** 			cell = inbyte(player_O.port);
 239:test3.c       **** 			// Validate the chosen cell
 240:test3.c       **** 			if (is_valid_cell(cell)) {
 241:test3.c       **** 				valid = true;
 242:test3.c       **** 				update_board(cell-'0', player_O.mark);  // Place 'O' on the board
 243:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 244:test3.c       **** 			} else 
 245:test3.c       **** 				fprintf(player_O.output, "Invalid cell. Try again.\n");
 246:test3.c       **** 		}
68K GAS  /tmp/ccmq8Bnl.s 			page 16


 247:test3.c       **** 
 248:test3.c       **** 		if (check_win(player_O.output,cell-'0',player_O.mark)||valid_cells_length==0) {
 249:test3.c       **** 			display_board();
 250:test3.c       **** 			V(1);
 251:test3.c       **** 			P(0);
 252:test3.c       **** 			V(0);
 253:test3.c       **** 			//break;
 254:test3.c       **** 		}
 255:test3.c       **** 		else
 256:test3.c       **** 		{
 257:test3.c       **** 			//valid = false;
 258:test3.c       **** 			V(0);
 259:test3.c       **** 		}
 260:test3.c       **** 	}
 261:test3.c       **** }
 262:test3.c       **** 
 263:test3.c       **** void win_lose_msg(){
 459               		.loc 1 263 20 is_stmt 1 view -0
 460               		.cfi_startproc
 461 0242 48E7 203E 		movem.l #8254,-(%sp)
 462               		.cfi_def_cfa_offset 28
 463               		.cfi_offset 2, -28
 464               		.cfi_offset 10, -24
 465               		.cfi_offset 11, -20
 466               		.cfi_offset 12, -16
 467               		.cfi_offset 13, -12
 468               		.cfi_offset 14, -8
 264:test3.c       **** 	P(1);
 469               		.loc 1 264 2 view .LVU144
 470 0246 4878 0001 		pea 1.w
 471               		.cfi_def_cfa_offset 32
 472 024a 47F9 0000 		lea P,%a3
 472      0000 
 473 0250 4E93      		jsr (%a3)
 474               	.LVL40:
 265:test3.c       **** 	P(1);
 475               		.loc 1 265 2 view .LVU145
 476 0252 4878 0001 		pea 1.w
 477               		.cfi_def_cfa_offset 36
 478 0256 4E93      		jsr (%a3)
 479               	.LVL41:
 266:test3.c       **** 	
 267:test3.c       **** 	if (win_flg){
 480               		.loc 1 267 2 view .LVU146
 481               		.loc 1 267 5 is_stmt 0 view .LVU147
 482 0258 508F      		addq.l #8,%sp
 483               		.cfi_def_cfa_offset 28
 484 025a 4AB9 0000 		tst.l win_flg
 484      0000 
 485 0260 6700 01A0 		jeq .L41
 268:test3.c       **** 	if(player_O.is_turn){
 486               		.loc 1 268 2 is_stmt 1 view .LVU148
 269:test3.c       **** 		
 270:test3.c       **** 		player_O.score = player_O.score + 1;
 487               		.loc 1 270 28 is_stmt 0 view .LVU149
 488 0264 2039 0000 		move.l player_O+10,%d0
 488      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 17


 271:test3.c       **** 		fprintf(player_O.output, "your score is: %d\n", player_O.score);
 489               		.loc 1 271 3 view .LVU150
 490 026a 2239 0000 		move.l player_O+18,%d1
 490      0000 
 268:test3.c       **** 	if(player_O.is_turn){
 491               		.loc 1 268 4 view .LVU151
 492 0270 4AB9 0000 		tst.l player_O+2
 492      0000 
 493 0276 6700 0120 		jeq .L42
 270:test3.c       **** 		fprintf(player_O.output, "your score is: %d\n", player_O.score);
 494               		.loc 1 270 3 is_stmt 1 view .LVU152
 270:test3.c       **** 		fprintf(player_O.output, "your score is: %d\n", player_O.score);
 495               		.loc 1 270 35 is_stmt 0 view .LVU153
 496 027a 5280      		addq.l #1,%d0
 270:test3.c       **** 		fprintf(player_O.output, "your score is: %d\n", player_O.score);
 497               		.loc 1 270 18 view .LVU154
 498 027c 23C0 0000 		move.l %d0,player_O+10
 498      0000 
 499               		.loc 1 271 3 is_stmt 1 view .LVU155
 500 0282 2F00      		move.l %d0,-(%sp)
 501               		.cfi_def_cfa_offset 32
 502 0284 4879 0000 		pea .LC4
 502      0000 
 503               		.cfi_def_cfa_offset 36
 504 028a 2F01      		move.l %d1,-(%sp)
 505               		.cfi_def_cfa_offset 40
 506 028c 4DF9 0000 		lea fprintf,%a6
 506      0000 
 507 0292 4E96      		jsr (%a6)
 508               	.LVL42:
 272:test3.c       **** 		fprintf(player_x.output, "your score is: %d\n", player_x.score);
 509               		.loc 1 272 3 view .LVU156
 510 0294 2F39 0000 		move.l player_x+10,-(%sp)
 510      0000 
 511               		.cfi_def_cfa_offset 44
 512 029a 4879 0000 		pea .LC4
 512      0000 
 513               		.cfi_def_cfa_offset 48
 514 02a0 2F39 0000 		move.l player_x+18,-(%sp)
 514      0000 
 515               		.cfi_def_cfa_offset 52
 516 02a6 4E96      		jsr (%a6)
 517               	.LVL43:
 273:test3.c       **** 		fprintf(player_O.output, "You win!!\n");
 518               		.loc 1 273 3 view .LVU157
 519 02a8 2F39 0000 		move.l player_O+18,-(%sp)
 519      0000 
 520               		.cfi_def_cfa_offset 56
 521 02ae 4878 000A 		pea 10.w
 522               		.cfi_def_cfa_offset 60
 523 02b2 4878 0001 		pea 1.w
 524               		.cfi_def_cfa_offset 64
 525 02b6 4879 0000 		pea .LC5
 525      0000 
 526               		.cfi_def_cfa_offset 68
 527 02bc 45F9 0000 		lea fwrite,%a2
 527      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 18


 528 02c2 4E92      		jsr (%a2)
 529               	.LVL44:
 274:test3.c       **** 		fprintf(player_x.output, "You lose...\n");
 530               		.loc 1 274 3 view .LVU158
 531 02c4 4FEF 0024 		lea (36,%sp),%sp
 532               		.cfi_def_cfa_offset 32
 533 02c8 2EB9 0000 		move.l player_x+18,(%sp)
 533      0000 
 275:test3.c       **** 		}
 276:test3.c       **** 	else{
 277:test3.c       **** 			player_x.score = player_x.score + 1;
 278:test3.c       **** 			fprintf(player_O.output, "your score is: %d\n", player_O.score);
 279:test3.c       **** 			fprintf(player_x.output, "your score is: %d\n", player_x.score);
 280:test3.c       **** 			fprintf(player_x.output, "You win!!\n");
 281:test3.c       **** 			fprintf(player_O.output, "You lose...\n");
 534               		.loc 1 281 4 is_stmt 0 view .LVU159
 535 02ce 4878 000C 		pea 12.w
 536               		.cfi_def_cfa_offset 36
 537 02d2 4878 0001 		pea 1.w
 538               		.cfi_def_cfa_offset 40
 539 02d6 4879 0000 		pea .LC6
 539      0000 
 540               		.cfi_def_cfa_offset 44
 541 02dc 4E92      		jsr (%a2)
 542               	.LVL45:
 543 02de 4FEF 0010 		lea (16,%sp),%sp
 544               		.cfi_def_cfa_offset 28
 545               	.L43:
 282:test3.c       **** 		}
 283:test3.c       **** 	}else{
 284:test3.c       **** 	
 285:test3.c       **** 		fprintf(player_O.output,"It's a draw!\n");
 286:test3.c       ****         	fprintf(player_x.output,"It's a draw!\n");
 287:test3.c       ****         	fprintf(player_O.output, "your score is: %d\n", player_O.score);
 288:test3.c       **** 		fprintf(player_x.output, "your score is: %d\n", player_x.score);
 289:test3.c       **** 	}
 290:test3.c       **** 	fprintf(player_O.output, "Do you want to play again? y/n \n");
 546               		.loc 1 290 2 is_stmt 1 view .LVU160
 547 02e2 2F39 0000 		move.l player_O+18,-(%sp)
 547      0000 
 548               		.cfi_def_cfa_offset 32
 549 02e8 4878 0020 		pea 32.w
 550               		.cfi_def_cfa_offset 36
 551 02ec 4878 0001 		pea 1.w
 552               		.cfi_def_cfa_offset 40
 553 02f0 4879 0000 		pea .LC8
 553      0000 
 554               		.cfi_def_cfa_offset 44
 555 02f6 4E92      		jsr (%a2)
 556               	.LVL46:
 291:test3.c       **** 	fprintf(player_x.output, "Do you want to play again? y/n \n");
 557               		.loc 1 291 2 view .LVU161
 558 02f8 2F39 0000 		move.l player_x+18,-(%sp)
 558      0000 
 559               		.cfi_def_cfa_offset 48
 560 02fe 4878 0020 		pea 32.w
 561               		.cfi_def_cfa_offset 52
68K GAS  /tmp/ccmq8Bnl.s 			page 19


 562 0302 4878 0001 		pea 1.w
 563               		.cfi_def_cfa_offset 56
 564 0306 4879 0000 		pea .LC8
 564      0000 
 565               		.cfi_def_cfa_offset 60
 566 030c 4E92      		jsr (%a2)
 567               	.LVL47:
 568 030e 4FEF 0020 		lea (32,%sp),%sp
 569               		.cfi_def_cfa_offset 28
 570 0312 45F9 0000 		lea inbyte,%a2
 570      0000 
 571 0318 4BFA FE40 		lea init_board,%a5
 572 031c 49F9 0000 		lea V,%a4
 572      0000 
 573               	.L45:
 292:test3.c       **** 	while (1)
 574               		.loc 1 292 2 view .LVU162
 575               	.LBB25:
 293:test3.c       **** 	{
 294:test3.c       **** 		char again_O = inbyte(player_O.port);
 576               		.loc 1 294 3 view .LVU163
 577               		.loc 1 294 18 is_stmt 0 view .LVU164
 578 0322 2F39 0000 		move.l player_O+6,-(%sp)
 578      0000 
 579               		.cfi_def_cfa_offset 32
 580 0328 4E92      		jsr (%a2)
 581               	.LVL48:
 582 032a 1400      		move.b %d0,%d2
 583               	.LVL49:
 295:test3.c       **** 		char again_x = inbyte(player_x.port);
 584               		.loc 1 295 3 is_stmt 1 view .LVU165
 585               		.loc 1 295 18 is_stmt 0 view .LVU166
 586 032c 2F39 0000 		move.l player_x+6,-(%sp)
 586      0000 
 587               		.cfi_def_cfa_offset 36
 588 0332 4E92      		jsr (%a2)
 589               	.LVL50:
 296:test3.c       **** 		if (again_O == 'y' && again_x == 'y')
 590               		.loc 1 296 3 is_stmt 1 view .LVU167
 591               		.loc 1 296 6 is_stmt 0 view .LVU168
 592 0334 508F      		addq.l #8,%sp
 593               		.cfi_def_cfa_offset 28
 594 0336 0C02 0079 		cmp.b #121,%d2
 595 033a 662E      		jne .L44
 596               	.L50:
 597               		.loc 1 296 22 discriminator 1 view .LVU169
 598 033c 0C00 0079 		cmp.b #121,%d0
 599 0340 6628      		jne .L44
 297:test3.c       **** 		{
 298:test3.c       **** 			init_board();
 600               		.loc 1 298 4 is_stmt 1 view .LVU170
 601 0342 4E95      		jsr (%a5)
 602               	.LVL51:
 299:test3.c       **** 			V(0);
 603               		.loc 1 299 4 view .LVU171
 604 0344 42A7      		clr.l -(%sp)
 605               		.cfi_def_cfa_offset 32
68K GAS  /tmp/ccmq8Bnl.s 			page 20


 606 0346 4E94      		jsr (%a4)
 607               	.LVL52:
 300:test3.c       **** 			P(1);
 608               		.loc 1 300 4 view .LVU172
 609 0348 4878 0001 		pea 1.w
 610               		.cfi_def_cfa_offset 36
 611 034c 4E93      		jsr (%a3)
 612               	.LVL53:
 613               	.LBE25:
 292:test3.c       **** 	{
 614               		.loc 1 292 8 view .LVU173
 293:test3.c       **** 		char again_O = inbyte(player_O.port);
 615               		.loc 1 293 2 is_stmt 0 view .LVU174
 616 034e 508F      		addq.l #8,%sp
 617               		.cfi_def_cfa_offset 28
 292:test3.c       **** 	{
 618               		.loc 1 292 2 is_stmt 1 view .LVU175
 619               	.LBB26:
 294:test3.c       **** 		char again_x = inbyte(player_x.port);
 620               		.loc 1 294 3 view .LVU176
 294:test3.c       **** 		char again_x = inbyte(player_x.port);
 621               		.loc 1 294 18 is_stmt 0 view .LVU177
 622 0350 2F39 0000 		move.l player_O+6,-(%sp)
 622      0000 
 623               		.cfi_def_cfa_offset 32
 624 0356 4E92      		jsr (%a2)
 625               	.LVL54:
 626 0358 1400      		move.b %d0,%d2
 627               	.LVL55:
 295:test3.c       **** 		if (again_O == 'y' && again_x == 'y')
 628               		.loc 1 295 3 is_stmt 1 view .LVU178
 295:test3.c       **** 		if (again_O == 'y' && again_x == 'y')
 629               		.loc 1 295 18 is_stmt 0 view .LVU179
 630 035a 2F39 0000 		move.l player_x+6,-(%sp)
 630      0000 
 631               		.cfi_def_cfa_offset 36
 632 0360 4E92      		jsr (%a2)
 633               	.LVL56:
 296:test3.c       **** 		{
 634               		.loc 1 296 3 is_stmt 1 view .LVU180
 296:test3.c       **** 		{
 635               		.loc 1 296 6 is_stmt 0 view .LVU181
 636 0362 508F      		addq.l #8,%sp
 637               		.cfi_def_cfa_offset 28
 638 0364 0C02 0079 		cmp.b #121,%d2
 639 0368 67D2      		jeq .L50
 640               	.L44:
 301:test3.c       **** 			
 302:test3.c       **** 		}
 303:test3.c       **** 		else
 304:test3.c       **** 		{
 305:test3.c       **** 			fprintf(player_O.output, "Game is over\n Your score is %d", player_O.score);
 641               		.loc 1 305 4 is_stmt 1 view .LVU182
 642 036a 2F39 0000 		move.l player_O+10,-(%sp)
 642      0000 
 643               		.cfi_def_cfa_offset 32
 644 0370 4879 0000 		pea .LC9
68K GAS  /tmp/ccmq8Bnl.s 			page 21


 644      0000 
 645               		.cfi_def_cfa_offset 36
 646 0376 2F39 0000 		move.l player_O+18,-(%sp)
 646      0000 
 647               		.cfi_def_cfa_offset 40
 648 037c 4E96      		jsr (%a6)
 649               	.LVL57:
 306:test3.c       **** 			fprintf(player_x.output, "Game is over\n Your score is %d", player_x.score);
 650               		.loc 1 306 4 view .LVU183
 651 037e 2F39 0000 		move.l player_x+10,-(%sp)
 651      0000 
 652               		.cfi_def_cfa_offset 44
 653 0384 4879 0000 		pea .LC9
 653      0000 
 654               		.cfi_def_cfa_offset 48
 655 038a 2F39 0000 		move.l player_x+18,-(%sp)
 655      0000 
 656               		.cfi_def_cfa_offset 52
 657 0390 4E96      		jsr (%a6)
 658               	.LVL58:
 659 0392 4FEF 0018 		lea (24,%sp),%sp
 660               		.cfi_def_cfa_offset 28
 661               	.L46:
 307:test3.c       **** 
 308:test3.c       **** 			while(1){}
 662               		.loc 1 308 4 discriminator 1 view .LVU184
 663               		.loc 1 308 13 discriminator 1 view .LVU185
 664               		.loc 1 308 9 discriminator 1 view .LVU186
 665               		.loc 1 308 4 discriminator 1 view .LVU187
 666               		.loc 1 308 13 discriminator 1 view .LVU188
 667               		.loc 1 308 9 discriminator 1 view .LVU189
 668 0396 60FE      		jra .L46
 669               	.LVL59:
 670               	.L42:
 671               		.loc 1 308 9 is_stmt 0 discriminator 1 view .LVU190
 672               	.LBE26:
 277:test3.c       **** 			fprintf(player_O.output, "your score is: %d\n", player_O.score);
 673               		.loc 1 277 4 is_stmt 1 view .LVU191
 277:test3.c       **** 			fprintf(player_O.output, "your score is: %d\n", player_O.score);
 674               		.loc 1 277 36 is_stmt 0 view .LVU192
 675 0398 52B9 0000 		addq.l #1,player_x+10
 675      0000 
 278:test3.c       **** 			fprintf(player_x.output, "your score is: %d\n", player_x.score);
 676               		.loc 1 278 4 is_stmt 1 view .LVU193
 677 039e 2F00      		move.l %d0,-(%sp)
 678               		.cfi_def_cfa_offset 32
 679 03a0 4879 0000 		pea .LC4
 679      0000 
 680               		.cfi_def_cfa_offset 36
 681 03a6 2F01      		move.l %d1,-(%sp)
 682               		.cfi_def_cfa_offset 40
 683 03a8 4DF9 0000 		lea fprintf,%a6
 683      0000 
 684 03ae 4E96      		jsr (%a6)
 685               	.LVL60:
 279:test3.c       **** 			fprintf(player_x.output, "You win!!\n");
 686               		.loc 1 279 4 view .LVU194
68K GAS  /tmp/ccmq8Bnl.s 			page 22


 687 03b0 2F39 0000 		move.l player_x+10,-(%sp)
 687      0000 
 688               		.cfi_def_cfa_offset 44
 689 03b6 4879 0000 		pea .LC4
 689      0000 
 690               		.cfi_def_cfa_offset 48
 691 03bc 2F39 0000 		move.l player_x+18,-(%sp)
 691      0000 
 692               		.cfi_def_cfa_offset 52
 693 03c2 4E96      		jsr (%a6)
 694               	.LVL61:
 280:test3.c       **** 			fprintf(player_O.output, "You lose...\n");
 695               		.loc 1 280 4 view .LVU195
 696 03c4 2F39 0000 		move.l player_x+18,-(%sp)
 696      0000 
 697               		.cfi_def_cfa_offset 56
 698 03ca 4878 000A 		pea 10.w
 699               		.cfi_def_cfa_offset 60
 700 03ce 4878 0001 		pea 1.w
 701               		.cfi_def_cfa_offset 64
 702 03d2 4879 0000 		pea .LC5
 702      0000 
 703               		.cfi_def_cfa_offset 68
 704 03d8 45F9 0000 		lea fwrite,%a2
 704      0000 
 705 03de 4E92      		jsr (%a2)
 706               	.LVL62:
 281:test3.c       **** 		}
 707               		.loc 1 281 4 view .LVU196
 708 03e0 4FEF 0024 		lea (36,%sp),%sp
 709               		.cfi_def_cfa_offset 32
 710 03e4 2EB9 0000 		move.l player_O+18,(%sp)
 710      0000 
 711 03ea 4878 000C 		pea 12.w
 712               		.cfi_def_cfa_offset 36
 713 03ee 4878 0001 		pea 1.w
 714               		.cfi_def_cfa_offset 40
 715 03f2 4879 0000 		pea .LC6
 715      0000 
 716               		.cfi_def_cfa_offset 44
 717 03f8 4E92      		jsr (%a2)
 718               	.LVL63:
 719 03fa 4FEF 0010 		lea (16,%sp),%sp
 720               		.cfi_def_cfa_offset 28
 721 03fe 6000 FEE2 		jra .L43
 722               	.L41:
 285:test3.c       ****         	fprintf(player_x.output,"It's a draw!\n");
 723               		.loc 1 285 3 view .LVU197
 724 0402 2F39 0000 		move.l player_O+18,-(%sp)
 724      0000 
 725               		.cfi_def_cfa_offset 32
 726 0408 4878 000D 		pea 13.w
 727               		.cfi_def_cfa_offset 36
 728 040c 4878 0001 		pea 1.w
 729               		.cfi_def_cfa_offset 40
 730 0410 4879 0000 		pea .LC7
 730      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 23


 731               		.cfi_def_cfa_offset 44
 732 0416 45F9 0000 		lea fwrite,%a2
 732      0000 
 733 041c 4E92      		jsr (%a2)
 734               	.LVL64:
 286:test3.c       ****         	fprintf(player_O.output, "your score is: %d\n", player_O.score);
 735               		.loc 1 286 10 view .LVU198
 736 041e 2F39 0000 		move.l player_x+18,-(%sp)
 736      0000 
 737               		.cfi_def_cfa_offset 48
 738 0424 4878 000D 		pea 13.w
 739               		.cfi_def_cfa_offset 52
 740 0428 4878 0001 		pea 1.w
 741               		.cfi_def_cfa_offset 56
 742 042c 4879 0000 		pea .LC7
 742      0000 
 743               		.cfi_def_cfa_offset 60
 744 0432 4E92      		jsr (%a2)
 745               	.LVL65:
 287:test3.c       **** 		fprintf(player_x.output, "your score is: %d\n", player_x.score);
 746               		.loc 1 287 10 view .LVU199
 747 0434 4FEF 001C 		lea (28,%sp),%sp
 748               		.cfi_def_cfa_offset 32
 749 0438 2EB9 0000 		move.l player_O+10,(%sp)
 749      0000 
 750 043e 4879 0000 		pea .LC4
 750      0000 
 751               		.cfi_def_cfa_offset 36
 752 0444 2F39 0000 		move.l player_O+18,-(%sp)
 752      0000 
 753               		.cfi_def_cfa_offset 40
 754 044a 4DF9 0000 		lea fprintf,%a6
 754      0000 
 755 0450 4E96      		jsr (%a6)
 756               	.LVL66:
 288:test3.c       **** 	}
 757               		.loc 1 288 3 view .LVU200
 758 0452 2F39 0000 		move.l player_x+10,-(%sp)
 758      0000 
 759               		.cfi_def_cfa_offset 44
 760 0458 4879 0000 		pea .LC4
 760      0000 
 761               		.cfi_def_cfa_offset 48
 762 045e 2F39 0000 		move.l player_x+18,-(%sp)
 762      0000 
 763               		.cfi_def_cfa_offset 52
 764 0464 4E96      		jsr (%a6)
 765               	.LVL67:
 766 0466 4FEF 0018 		lea (24,%sp),%sp
 767               		.cfi_def_cfa_offset 28
 290:test3.c       **** 	fprintf(player_x.output, "Do you want to play again? y/n \n");
 768               		.loc 1 290 2 view .LVU201
 769 046a 2F39 0000 		move.l player_O+18,-(%sp)
 769      0000 
 770               		.cfi_def_cfa_offset 32
 771 0470 4878 0020 		pea 32.w
 772               		.cfi_def_cfa_offset 36
68K GAS  /tmp/ccmq8Bnl.s 			page 24


 773 0474 4878 0001 		pea 1.w
 774               		.cfi_def_cfa_offset 40
 775 0478 4879 0000 		pea .LC8
 775      0000 
 776               		.cfi_def_cfa_offset 44
 777 047e 4E92      		jsr (%a2)
 778               	.LVL68:
 291:test3.c       **** 	while (1)
 779               		.loc 1 291 2 view .LVU202
 780 0480 2F39 0000 		move.l player_x+18,-(%sp)
 780      0000 
 781               		.cfi_def_cfa_offset 48
 782 0486 4878 0020 		pea 32.w
 783               		.cfi_def_cfa_offset 52
 784 048a 4878 0001 		pea 1.w
 785               		.cfi_def_cfa_offset 56
 786 048e 4879 0000 		pea .LC8
 786      0000 
 787               		.cfi_def_cfa_offset 60
 788 0494 4E92      		jsr (%a2)
 789               	.LVL69:
 790 0496 4FEF 0020 		lea (32,%sp),%sp
 791               		.cfi_def_cfa_offset 28
 792 049a 45F9 0000 		lea inbyte,%a2
 792      0000 
 793 04a0 4BFA FCB8 		lea init_board,%a5
 794 04a4 49F9 0000 		lea V,%a4
 794      0000 
 795 04aa 6000 FE76 		jra .L45
 796               		.cfi_endproc
 797               	.LFE12:
 798               		.size	win_lose_msg, .-win_lose_msg
 799               		.globl	__divsi3
 800               		.globl	__modsi3
 801               		.align	2
 802               		.globl	update_board
 803               		.type	update_board, @function
 804               	update_board:
 805               	.LVL70:
 806               	.LFB7:
 104:test3.c       ****     int row = cell / 3;
 807               		.loc 1 104 40 view -0
 808               		.cfi_startproc
 104:test3.c       ****     int row = cell / 3;
 809               		.loc 1 104 40 is_stmt 0 view .LVU204
 810 04ae 2F03      		move.l %d3,-(%sp)
 811               		.cfi_def_cfa_offset 8
 812               		.cfi_offset 3, -8
 813 04b0 2F02      		move.l %d2,-(%sp)
 814               		.cfi_def_cfa_offset 12
 815               		.cfi_offset 2, -12
 816 04b2 262F 000C 		move.l 12(%sp),%d3
 105:test3.c       ****     int col = cell % 3;
 817               		.loc 1 105 5 is_stmt 1 view .LVU205
 818               	.LVL71:
 106:test3.c       ****     board[row][col] = mark;
 819               		.loc 1 106 5 view .LVU206
68K GAS  /tmp/ccmq8Bnl.s 			page 25


 107:test3.c       **** }
 820               		.loc 1 107 5 view .LVU207
 105:test3.c       ****     int col = cell % 3;
 821               		.loc 1 105 9 is_stmt 0 view .LVU208
 822 04b6 4878 0003 		pea 3.w
 823               		.cfi_def_cfa_offset 16
 824 04ba 2F03      		move.l %d3,-(%sp)
 825               		.cfi_def_cfa_offset 20
 826 04bc 4EB9 0000 		jsr __divsi3
 826      0000 
 827               	.LVL72:
 828 04c2 508F      		addq.l #8,%sp
 829               		.cfi_def_cfa_offset 12
 830 04c4 2400      		move.l %d0,%d2
 106:test3.c       ****     board[row][col] = mark;
 831               		.loc 1 106 9 view .LVU209
 832 04c6 4878 0003 		pea 3.w
 833               		.cfi_def_cfa_offset 16
 834 04ca 2F03      		move.l %d3,-(%sp)
 835               		.cfi_def_cfa_offset 20
 836 04cc 4EB9 0000 		jsr __modsi3
 836      0000 
 837               	.LVL73:
 838 04d2 508F      		addq.l #8,%sp
 839               		.cfi_def_cfa_offset 12
 107:test3.c       **** }
 840               		.loc 1 107 21 view .LVU210
 841 04d4 2042      		move.l %d2,%a0
 842 04d6 D1C2      		add.l %d2,%a0
 843 04d8 D1C2      		add.l %d2,%a0
 844 04da D1FC 0000 		add.l #board,%a0
 844      0000 
 845 04e0 11AF 0013 		move.b 19(%sp),(%a0,%d0.l)
 845      0800 
 108:test3.c       **** //displays the board after the change
 846               		.loc 1 108 1 view .LVU211
 847 04e6 241F      		move.l (%sp)+,%d2
 848 04e8 261F      		move.l (%sp)+,%d3
 849               	.LVL74:
 108:test3.c       **** //displays the board after the change
 850               		.loc 1 108 1 view .LVU212
 851 04ea 4E75      		rts
 852               		.cfi_endproc
 853               	.LFE7:
 854               		.size	update_board, .-update_board
 855               		.section	.rodata.str1.1
 856               	.LC10:
 857 009b 1B5B 324A 		.string	"\033[2J"
 857      00
 858               	.LC11:
 859 00a0 2025 6320 		.string	" %c "
 859      00
 860               	.LC12:
 861 00a5 2D2D 2D2B 		.string	"---+---+---\n"
 861      2D2D 2D2B 
 861      2D2D 2D0A 
 861      00
68K GAS  /tmp/ccmq8Bnl.s 			page 26


 862               		.text
 863               		.align	2
 864               		.globl	display_board
 865               		.type	display_board, @function
 866               	display_board:
 867               	.LFB8:
 110:test3.c       **** 	//Clear the screen
 868               		.loc 1 110 22 is_stmt 1 view -0
 869               		.cfi_startproc
 870 04ec 48E7 203E 		movem.l #8254,-(%sp)
 871               		.cfi_def_cfa_offset 28
 872               		.cfi_offset 2, -28
 873               		.cfi_offset 10, -24
 874               		.cfi_offset 11, -20
 875               		.cfi_offset 12, -16
 876               		.cfi_offset 13, -12
 877               		.cfi_offset 14, -8
 112:test3.c       **** 	fprintf(player_O.output,"\033[2J");
 878               		.loc 1 112 2 view .LVU214
 879 04f0 2F39 0000 		move.l player_x+18,-(%sp)
 879      0000 
 880               		.cfi_def_cfa_offset 32
 881 04f6 4878 0004 		pea 4.w
 882               		.cfi_def_cfa_offset 36
 883 04fa 4878 0001 		pea 1.w
 884               		.cfi_def_cfa_offset 40
 885 04fe 4879 0000 		pea .LC10
 885      0000 
 886               		.cfi_def_cfa_offset 44
 887 0504 4DF9 0000 		lea fwrite,%a6
 887      0000 
 888 050a 4E96      		jsr (%a6)
 889               	.LVL75:
 113:test3.c       **** 	// disable cursor while drawing
 890               		.loc 1 113 2 view .LVU215
 891 050c 2F39 0000 		move.l player_O+18,-(%sp)
 891      0000 
 892               		.cfi_def_cfa_offset 48
 893 0512 4878 0004 		pea 4.w
 894               		.cfi_def_cfa_offset 52
 895 0516 4878 0001 		pea 1.w
 896               		.cfi_def_cfa_offset 56
 897 051a 4879 0000 		pea .LC10
 897      0000 
 898               		.cfi_def_cfa_offset 60
 899 0520 4E96      		jsr (%a6)
 900               	.LVL76:
 117:test3.c       **** 	fprintf(player_O.output, "\033[%d;%dH", 1, 1);
 901               		.loc 1 117 2 view .LVU216
 902 0522 4FEF 0020 		lea (32,%sp),%sp
 903               		.cfi_def_cfa_offset 28
 904 0526 4878 0001 		pea 1.w
 905               		.cfi_def_cfa_offset 32
 906 052a 4878 0001 		pea 1.w
 907               		.cfi_def_cfa_offset 36
 908 052e 4879 0000 		pea .LC2
 908      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 27


 909               		.cfi_def_cfa_offset 40
 910 0534 2F39 0000 		move.l player_x+18,-(%sp)
 910      0000 
 911               		.cfi_def_cfa_offset 44
 912 053a 47F9 0000 		lea fprintf,%a3
 912      0000 
 913 0540 4E93      		jsr (%a3)
 914               	.LVL77:
 118:test3.c       **** 	 //fprintf(player_O.output,"%d\n",valid_cells_length);
 915               		.loc 1 118 2 view .LVU217
 916 0542 4878 0001 		pea 1.w
 917               		.cfi_def_cfa_offset 48
 918 0546 4878 0001 		pea 1.w
 919               		.cfi_def_cfa_offset 52
 920 054a 4879 0000 		pea .LC2
 920      0000 
 921               		.cfi_def_cfa_offset 56
 922 0550 2F39 0000 		move.l player_O+18,-(%sp)
 922      0000 
 923               		.cfi_def_cfa_offset 60
 924 0556 4E93      		jsr (%a3)
 925               	.LVL78:
 121:test3.c       ****         	for (int j = 0; j < 3; j++) {
 926               		.loc 1 121 6 view .LVU218
 927               	.LBB27:
 121:test3.c       ****         	for (int j = 0; j < 3; j++) {
 928               		.loc 1 121 11 view .LVU219
 121:test3.c       ****         	for (int j = 0; j < 3; j++) {
 929               		.loc 1 121 24 view .LVU220
 930 0558 4BF9 0000 		lea board,%a5
 930      0000 
 931 055e 4FEF 0020 		lea (32,%sp),%sp
 932               		.cfi_def_cfa_offset 28
 933 0562 49F9 0000 		lea fputc,%a4
 933      0000 
 934               	.LVL79:
 935               	.L54:
 936               	.LBB28:
 122:test3.c       ****             		fprintf(player_x.output," %c ", board[i][j]); // Print the current cell value
 937               		.loc 1 122 28 view .LVU221
 123:test3.c       ****             		fprintf(player_O.output," %c ", board[i][j]);
 938               		.loc 1 123 15 view .LVU222
 939 0568 1015      		move.b (%a5),%d0
 940 056a 4880      		ext.w %d0
 941 056c 3040      		move.w %d0,%a0
 942 056e 2F08      		move.l %a0,-(%sp)
 943               		.cfi_def_cfa_offset 32
 944 0570 4879 0000 		pea .LC11
 944      0000 
 945               		.cfi_def_cfa_offset 36
 946 0576 2F39 0000 		move.l player_x+18,-(%sp)
 946      0000 
 947               		.cfi_def_cfa_offset 40
 948 057c 4E93      		jsr (%a3)
 949               	.LVL80:
 124:test3.c       ****             		if (j < 2) {
 950               		.loc 1 124 15 view .LVU223
68K GAS  /tmp/ccmq8Bnl.s 			page 28


 951 057e 244D      		move.l %a5,%a2
 952 0580 101A      		move.b (%a2)+,%d0
 953 0582 4880      		ext.w %d0
 954 0584 3040      		move.w %d0,%a0
 955 0586 2F08      		move.l %a0,-(%sp)
 956               		.cfi_def_cfa_offset 44
 957 0588 4879 0000 		pea .LC11
 957      0000 
 958               		.cfi_def_cfa_offset 48
 959 058e 2F39 0000 		move.l player_O+18,-(%sp)
 959      0000 
 960               		.cfi_def_cfa_offset 52
 961 0594 4E93      		jsr (%a3)
 962               	.LVL81:
 125:test3.c       ****             			fprintf(player_x.output,"|");     // Print column separator
 963               		.loc 1 125 15 view .LVU224
 964 0596 4FEF 0018 		lea (24,%sp),%sp
 965               		.cfi_def_cfa_offset 28
 124:test3.c       ****             		if (j < 2) {
 966               		.loc 1 124 15 is_stmt 0 view .LVU225
 967 059a 7402      		moveq #2,%d2
 968               	.LVL82:
 969               	.L57:
 126:test3.c       ****             			fprintf(player_O.output,"|"); 
 970               		.loc 1 126 16 is_stmt 1 view .LVU226
 971 059c 2F39 0000 		move.l player_x+18,-(%sp)
 971      0000 
 972               		.cfi_def_cfa_offset 32
 973 05a2 4878 007C 		pea 124.w
 974               		.cfi_def_cfa_offset 36
 975 05a6 4E94      		jsr (%a4)
 976               	.LVL83:
 127:test3.c       ****             			}
 977               		.loc 1 127 16 view .LVU227
 978 05a8 2F39 0000 		move.l player_O+18,-(%sp)
 978      0000 
 979               		.cfi_def_cfa_offset 40
 980 05ae 4878 007C 		pea 124.w
 981               		.cfi_def_cfa_offset 44
 982 05b2 4E94      		jsr (%a4)
 983               	.LVL84:
 122:test3.c       ****             		fprintf(player_x.output," %c ", board[i][j]); // Print the current cell value
 984               		.loc 1 122 34 view .LVU228
 122:test3.c       ****             		fprintf(player_x.output," %c ", board[i][j]); // Print the current cell value
 985               		.loc 1 122 28 view .LVU229
 123:test3.c       ****             		fprintf(player_O.output," %c ", board[i][j]);
 986               		.loc 1 123 15 view .LVU230
 987 05b4 1012      		move.b (%a2),%d0
 988 05b6 4880      		ext.w %d0
 989 05b8 3040      		move.w %d0,%a0
 990 05ba 2F08      		move.l %a0,-(%sp)
 991               		.cfi_def_cfa_offset 48
 992 05bc 4879 0000 		pea .LC11
 992      0000 
 993               		.cfi_def_cfa_offset 52
 994 05c2 2F39 0000 		move.l player_x+18,-(%sp)
 994      0000 
68K GAS  /tmp/ccmq8Bnl.s 			page 29


 995               		.cfi_def_cfa_offset 56
 996 05c8 4E93      		jsr (%a3)
 997               	.LVL85:
 124:test3.c       ****             		if (j < 2) {
 998               		.loc 1 124 15 view .LVU231
 999 05ca 101A      		move.b (%a2)+,%d0
 1000 05cc 4880      		ext.w %d0
 1001 05ce 3040      		move.w %d0,%a0
 1002 05d0 2F08      		move.l %a0,-(%sp)
 1003               		.cfi_def_cfa_offset 60
 1004 05d2 4879 0000 		pea .LC11
 1004      0000 
 1005               		.cfi_def_cfa_offset 64
 1006 05d8 2F39 0000 		move.l player_O+18,-(%sp)
 1006      0000 
 1007               		.cfi_def_cfa_offset 68
 1008 05de 4E93      		jsr (%a3)
 1009               	.LVL86:
 125:test3.c       ****             			fprintf(player_x.output,"|");     // Print column separator
 1010               		.loc 1 125 15 view .LVU232
 125:test3.c       ****             			fprintf(player_x.output,"|");     // Print column separator
 1011               		.loc 1 125 18 is_stmt 0 view .LVU233
 1012 05e0 4FEF 0028 		lea (40,%sp),%sp
 1013               		.cfi_def_cfa_offset 28
 1014 05e4 5382      		subq.l #1,%d2
 1015 05e6 6666      		jne .L65
 125:test3.c       ****             			fprintf(player_x.output,"|");     // Print column separator
 1016               		.loc 1 125 18 view .LVU234
 1017               	.LBE28:
 130:test3.c       ****         		fprintf(player_O.output,"\n");
 1018               		.loc 1 130 11 is_stmt 1 view .LVU235
 1019 05e8 2F39 0000 		move.l player_x+18,-(%sp)
 1019      0000 
 1020               		.cfi_def_cfa_offset 32
 1021 05ee 4878 000A 		pea 10.w
 1022               		.cfi_def_cfa_offset 36
 1023 05f2 4E94      		jsr (%a4)
 1024               	.LVL87:
 131:test3.c       ****         	if (i < 2) {
 1025               		.loc 1 131 11 view .LVU236
 1026 05f4 2F39 0000 		move.l player_O+18,-(%sp)
 1026      0000 
 1027               		.cfi_def_cfa_offset 40
 1028 05fa 4878 000A 		pea 10.w
 1029               		.cfi_def_cfa_offset 44
 1030 05fe 4E94      		jsr (%a4)
 1031               	.LVL88:
 132:test3.c       ****         		fprintf(player_x.output,"---+---+---\n"); // Print row separator
 1032               		.loc 1 132 10 view .LVU237
 132:test3.c       ****         		fprintf(player_x.output,"---+---+---\n"); // Print row separator
 1033               		.loc 1 132 13 is_stmt 0 view .LVU238
 1034 0600 4FEF 0010 		lea (16,%sp),%sp
 1035               		.cfi_def_cfa_offset 28
 1036 0604 BBFC 0000 		cmp.l #board+6,%a5
 1036      0000 
 1037 060a 673C      		jeq .L53
 133:test3.c       ****         		fprintf(player_O.output,"---+---+---\n");
68K GAS  /tmp/ccmq8Bnl.s 			page 30


 1038               		.loc 1 133 11 is_stmt 1 view .LVU239
 1039 060c 2F39 0000 		move.l player_x+18,-(%sp)
 1039      0000 
 1040               		.cfi_def_cfa_offset 32
 1041 0612 4878 000C 		pea 12.w
 1042               		.cfi_def_cfa_offset 36
 1043 0616 4878 0001 		pea 1.w
 1044               		.cfi_def_cfa_offset 40
 1045 061a 4879 0000 		pea .LC12
 1045      0000 
 1046               		.cfi_def_cfa_offset 44
 1047 0620 4E96      		jsr (%a6)
 1048               	.LVL89:
 134:test3.c       ****     }
 1049               		.loc 1 134 11 view .LVU240
 1050 0622 2F39 0000 		move.l player_O+18,-(%sp)
 1050      0000 
 1051               		.cfi_def_cfa_offset 48
 1052 0628 4878 000C 		pea 12.w
 1053               		.cfi_def_cfa_offset 52
 1054 062c 4878 0001 		pea 1.w
 1055               		.cfi_def_cfa_offset 56
 1056 0630 4879 0000 		pea .LC12
 1056      0000 
 1057               		.cfi_def_cfa_offset 60
 1058 0636 4E96      		jsr (%a6)
 1059               	.LVL90:
 121:test3.c       ****         	for (int j = 0; j < 3; j++) {
 1060               		.loc 1 121 30 view .LVU241
 121:test3.c       ****         	for (int j = 0; j < 3; j++) {
 1061               		.loc 1 121 24 view .LVU242
 1062 0638 568D      		addq.l #3,%a5
 1063 063a 4FEF 0020 		lea (32,%sp),%sp
 1064               		.cfi_def_cfa_offset 28
 1065 063e BBFC 0000 		cmp.l #board+9,%a5
 1065      0000 
 1066 0644 6600 FF22 		jne .L54
 1067               	.L53:
 1068               	.LBE27:
 141:test3.c       ****     
 1069               		.loc 1 141 2 is_stmt 0 view .LVU243
 1070 0648 4CDF 7C04 		movem.l (%sp)+,#31748
 1071 064c 4E75      		rts
 1072               	.L65:
 1073               	.LBB30:
 1074               	.LBB29:
 1075 064e 7401      		moveq #1,%d2
 1076 0650 6000 FF4A 		jra .L57
 1077               	.LBE29:
 1078               	.LBE30:
 1079               		.cfi_endproc
 1080               	.LFE8:
 1081               		.size	display_board, .-display_board
 1082               		.align	2
 1083               		.globl	binary_board
 1084               		.type	binary_board, @function
 1085               	binary_board:
68K GAS  /tmp/ccmq8Bnl.s 			page 31


 1086               	.LVL91:
 1087               	.LFB9:
 143:test3.c       **** 	for (int i = 0; i < 3;i++){
 1088               		.loc 1 143 29 is_stmt 1 view -0
 1089               		.cfi_startproc
 143:test3.c       **** 	for (int i = 0; i < 3;i++){
 1090               		.loc 1 143 29 is_stmt 0 view .LVU245
 1091 0654 122F 0007 		move.b 7(%sp),%d1
 144:test3.c       **** 		for (int j = 0; j < 3;j++){
 1092               		.loc 1 144 2 is_stmt 1 view .LVU246
 1093               	.LBB31:
 144:test3.c       **** 		for (int j = 0; j < 3;j++){
 1094               		.loc 1 144 7 view .LVU247
 1095               	.LVL92:
 144:test3.c       **** 		for (int j = 0; j < 3;j++){
 1096               		.loc 1 144 20 view .LVU248
 1097 0658 43F9 0000 		lea board,%a1
 1097      0000 
 1098 065e 41F9 0000 		lea b_board,%a0
 1098      0000 
 1099               	.LVL93:
 1100               	.L67:
 1101               	.LBB32:
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1102               		.loc 1 145 21 view .LVU249
 146:test3.c       **** 				b_board[i][j] = 1;
 1103               		.loc 1 146 4 view .LVU250
 146:test3.c       **** 				b_board[i][j] = 1;
 1104               		.loc 1 146 6 is_stmt 0 view .LVU251
 1105 0664 B211      		cmp.b (%a1),%d1
 1106 0666 57C0      		seq %d0
 1107 0668 4880      		ext.w %d0
 1108 066a 48C0      		ext.l %d0
 147:test3.c       **** 			}
 1109               		.loc 1 147 19 view .LVU252
 1110 066c 4480      		neg.l %d0
 1111 066e 2080      		move.l %d0,(%a0)
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1112               		.loc 1 145 26 is_stmt 1 view .LVU253
 1113               	.LVL94:
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1114               		.loc 1 145 21 view .LVU254
 146:test3.c       **** 				b_board[i][j] = 1;
 1115               		.loc 1 146 4 view .LVU255
 146:test3.c       **** 				b_board[i][j] = 1;
 1116               		.loc 1 146 6 is_stmt 0 view .LVU256
 1117 0670 B229 0001 		cmp.b 1(%a1),%d1
 1118 0674 57C0      		seq %d0
 1119 0676 4880      		ext.w %d0
 1120 0678 48C0      		ext.l %d0
 147:test3.c       **** 			}
 1121               		.loc 1 147 19 view .LVU257
 1122 067a 4480      		neg.l %d0
 1123 067c 2140 0004 		move.l %d0,4(%a0)
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1124               		.loc 1 145 26 is_stmt 1 view .LVU258
 1125               	.LVL95:
68K GAS  /tmp/ccmq8Bnl.s 			page 32


 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1126               		.loc 1 145 21 view .LVU259
 146:test3.c       **** 				b_board[i][j] = 1;
 1127               		.loc 1 146 4 view .LVU260
 146:test3.c       **** 				b_board[i][j] = 1;
 1128               		.loc 1 146 6 is_stmt 0 view .LVU261
 1129 0680 B229 0002 		cmp.b 2(%a1),%d1
 1130 0684 57C0      		seq %d0
 1131 0686 4880      		ext.w %d0
 1132 0688 48C0      		ext.l %d0
 147:test3.c       **** 			}
 1133               		.loc 1 147 19 view .LVU262
 1134 068a 4480      		neg.l %d0
 1135 068c 2140 0008 		move.l %d0,8(%a0)
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1136               		.loc 1 145 26 is_stmt 1 view .LVU263
 1137               	.LVL96:
 145:test3.c       **** 			if(board[i][j]==mark){//mark is either X or O ,depending on who's playing
 1138               		.loc 1 145 21 view .LVU264
 1139               	.LBE32:
 144:test3.c       **** 		for (int j = 0; j < 3;j++){
 1140               		.loc 1 144 25 view .LVU265
 144:test3.c       **** 		for (int j = 0; j < 3;j++){
 1141               		.loc 1 144 20 view .LVU266
 1142 0690 5689      		addq.l #3,%a1
 1143 0692 41E8 000C 		lea (12,%a0),%a0
 1144 0696 B1FC 0000 		cmp.l #b_board+36,%a0
 1144      0000 
 1145 069c 66C6      		jne .L67
 1146               	.LBE31:
 152:test3.c       **** 
 1147               		.loc 1 152 1 is_stmt 0 view .LVU267
 1148 069e 4E75      		rts
 1149               		.cfi_endproc
 1150               	.LFE9:
 1151               		.size	binary_board, .-binary_board
 1152               		.section	.rodata.str1.1
 1153               	.LC13:
 1154 00b2 2564 2C00 		.string	"%d,"
 1155               	.LC14:
 1156 00b6 6469 6167 		.string	"diag1wi\n"
 1156      3177 690A 
 1156      00
 1157               	.LC15:
 1158 00bf 6469 6167 		.string	"diag2win\n"
 1158      3277 696E 
 1158      0A00 
 1159               		.text
 1160               		.align	2
 1161               		.globl	check_win
 1162               		.type	check_win, @function
 1163               	check_win:
 1164               	.LVL97:
 1165               	.LFB10:
 156:test3.c       **** 	int row= in/3;
 1166               		.loc 1 156 45 is_stmt 1 view -0
 1167               		.cfi_startproc
68K GAS  /tmp/ccmq8Bnl.s 			page 33


 156:test3.c       **** 	int row= in/3;
 1168               		.loc 1 156 45 is_stmt 0 view .LVU269
 1169 06a0 48E7 3E3E 		movem.l #15934,-(%sp)
 1170               		.cfi_def_cfa_offset 44
 1171               		.cfi_offset 2, -44
 1172               		.cfi_offset 3, -40
 1173               		.cfi_offset 4, -36
 1174               		.cfi_offset 5, -32
 1175               		.cfi_offset 6, -28
 1176               		.cfi_offset 10, -24
 1177               		.cfi_offset 11, -20
 1178               		.cfi_offset 12, -16
 1179               		.cfi_offset 13, -12
 1180               		.cfi_offset 14, -8
 1181 06a4 262F 002C 		move.l 44(%sp),%d3
 1182 06a8 2A2F 0030 		move.l 48(%sp),%d5
 157:test3.c       **** 	int col = in % 3;
 1183               		.loc 1 157 2 is_stmt 1 view .LVU270
 157:test3.c       **** 	int col = in % 3;
 1184               		.loc 1 157 6 is_stmt 0 view .LVU271
 1185 06ac 4878 0003 		pea 3.w
 1186               		.cfi_def_cfa_offset 48
 1187 06b0 2F05      		move.l %d5,-(%sp)
 1188               		.cfi_def_cfa_offset 52
 1189 06b2 4EB9 0000 		jsr __divsi3
 1189      0000 
 1190               	.LVL98:
 1191 06b8 508F      		addq.l #8,%sp
 1192               		.cfi_def_cfa_offset 44
 1193 06ba 2800      		move.l %d0,%d4
 1194               	.LVL99:
 158:test3.c       **** 	int win[2] = {1,1};//if equals 3 means win
 1195               		.loc 1 158 2 is_stmt 1 view .LVU272
 158:test3.c       **** 	int win[2] = {1,1};//if equals 3 means win
 1196               		.loc 1 158 6 is_stmt 0 view .LVU273
 1197 06bc 4878 0003 		pea 3.w
 1198               		.cfi_def_cfa_offset 48
 1199 06c0 2F05      		move.l %d5,-(%sp)
 1200               		.cfi_def_cfa_offset 52
 1201 06c2 4EB9 0000 		jsr __modsi3
 1201      0000 
 1202               	.LVL100:
 158:test3.c       **** 	int win[2] = {1,1};//if equals 3 means win
 1203               		.loc 1 158 6 view .LVU274
 1204 06c8 508F      		addq.l #8,%sp
 1205               		.cfi_def_cfa_offset 44
 1206 06ca 2840      		move.l %d0,%a4
 1207               	.LVL101:
 159:test3.c       **** 	binary_board(mark);
 1208               		.loc 1 159 2 is_stmt 1 view .LVU275
 160:test3.c       **** 	//fprintf(screen,"%d \n,",row);
 1209               		.loc 1 160 2 view .LVU276
 1210 06cc 102F 0037 		move.b 55(%sp),%d0
 1211               	.LVL102:
 160:test3.c       **** 	//fprintf(screen,"%d \n,",row);
 1212               		.loc 1 160 2 is_stmt 0 view .LVU277
 1213 06d0 4880      		ext.w %d0
68K GAS  /tmp/ccmq8Bnl.s 			page 34


 1214 06d2 3040      		move.w %d0,%a0
 1215 06d4 2F08      		move.l %a0,-(%sp)
 1216               		.cfi_def_cfa_offset 48
 1217 06d6 4EBA FF7C 		jsr binary_board
 1218               	.LVL103:
 163:test3.c       **** 		for (int j = 0; j < 3;j++){
 1219               		.loc 1 163 2 is_stmt 1 view .LVU278
 1220               	.LBB33:
 163:test3.c       **** 		for (int j = 0; j < 3;j++){
 1221               		.loc 1 163 7 view .LVU279
 163:test3.c       **** 		for (int j = 0; j < 3;j++){
 1222               		.loc 1 163 20 view .LVU280
 1223 06da 4BF9 0000 		lea b_board,%a5
 1223      0000 
 1224 06e0 264D      		move.l %a5,%a3
 1225 06e2 588F      		addq.l #4,%sp
 1226               		.cfi_def_cfa_offset 44
 1227 06e4 4DF9 0000 		lea fprintf,%a6
 1227      0000 
 1228               	.LVL104:
 1229               	.L72:
 1230               	.LBB34:
 164:test3.c       **** 	fprintf(screen,"%d,",b_board[i][j]);
 1231               		.loc 1 164 21 view .LVU281
 1232               	.LBE34:
 1233               	.LBE33:
 156:test3.c       **** 	int row= in/3;
 1234               		.loc 1 156 45 is_stmt 0 view .LVU282
 1235 06ea 244B      		move.l %a3,%a2
 1236 06ec 7403      		moveq #3,%d2
 1237               	.LVL105:
 1238               	.L73:
 1239               	.LBB36:
 1240               	.LBB35:
 165:test3.c       **** 	}}
 1241               		.loc 1 165 2 is_stmt 1 discriminator 3 view .LVU283
 1242 06ee 2F1A      		move.l (%a2)+,-(%sp)
 1243               		.cfi_def_cfa_offset 48
 1244 06f0 4879 0000 		pea .LC13
 1244      0000 
 1245               		.cfi_def_cfa_offset 52
 1246 06f6 2F03      		move.l %d3,-(%sp)
 1247               		.cfi_def_cfa_offset 56
 1248 06f8 4E96      		jsr (%a6)
 1249               	.LVL106:
 164:test3.c       **** 	fprintf(screen,"%d,",b_board[i][j]);
 1250               		.loc 1 164 26 discriminator 3 view .LVU284
 164:test3.c       **** 	fprintf(screen,"%d,",b_board[i][j]);
 1251               		.loc 1 164 21 discriminator 3 view .LVU285
 1252 06fa 5382      		subq.l #1,%d2
 1253               	.LVL107:
 164:test3.c       **** 	fprintf(screen,"%d,",b_board[i][j]);
 1254               		.loc 1 164 21 is_stmt 0 discriminator 3 view .LVU286
 1255 06fc 4FEF 000C 		lea (12,%sp),%sp
 1256               		.cfi_def_cfa_offset 44
 1257 0700 66EC      		jne .L73
 1258               	.LBE35:
68K GAS  /tmp/ccmq8Bnl.s 			page 35


 163:test3.c       **** 		for (int j = 0; j < 3;j++){
 1259               		.loc 1 163 25 is_stmt 1 discriminator 2 view .LVU287
 163:test3.c       **** 		for (int j = 0; j < 3;j++){
 1260               		.loc 1 163 20 discriminator 2 view .LVU288
 1261 0702 47EB 000C 		lea (12,%a3),%a3
 1262 0706 B7FC 0000 		cmp.l #b_board+36,%a3
 1262      0000 
 1263 070c 66DC      		jne .L72
 1264 070e 2044      		move.l %d4,%a0
 1265 0710 D1C4      		add.l %d4,%a0
 1266 0712 D1C4      		add.l %d4,%a0
 1267 0714 247C 3FFF 		move.l #1073741821,%a2
 1267      FFFD 
 1268 071a D5CC      		add.l %a4,%a2
 1269 071c D5C8      		add.l %a0,%a2
 1270 071e D5CA      		add.l %a2,%a2
 1271 0720 D5CA      		add.l %a2,%a2
 1272 0722 D5FC 0000 		add.l #b_board,%a2
 1272      0000 
 1273 0728 47F4 8803 		lea 3(%a4,%a0.l),%a3
 1274 072c D7CB      		add.l %a3,%a3
 1275 072e D7CB      		add.l %a3,%a3
 1276 0730 D7FC 0000 		add.l #b_board,%a3
 1276      0000 
 1277 0736 227C 3FFF 		move.l #1073741823,%a1
 1277      FFFF 
 1278 073c D3CC      		add.l %a4,%a1
 1279 073e D3C8      		add.l %a0,%a1
 1280 0740 D3C9      		add.l %a1,%a1
 1281 0742 D3C9      		add.l %a1,%a1
 1282 0744 D3FC 0000 		add.l #b_board,%a1
 1282      0000 
 1283 074a 41F4 8800 		lea (%a4,%a0.l),%a0
 1284 074e D1C8      		add.l %a0,%a0
 1285 0750 D1C8      		add.l %a0,%a0
 1286 0752 D1FC 0000 		add.l #b_board,%a0
 1286      0000 
 1287               	.LBE36:
 159:test3.c       **** 	binary_board(mark);
 1288               		.loc 1 159 6 is_stmt 0 view .LVU289
 1289 0758 7401      		moveq #1,%d2
 1290               	.LVL108:
 159:test3.c       **** 	binary_board(mark);
 1291               		.loc 1 159 6 view .LVU290
 1292 075a 7201      		moveq #1,%d1
 1293               	.LBB37:
 168:test3.c       **** 	{
 1294               		.loc 1 168 11 view .LVU291
 1295 075c 7001      		moveq #1,%d0
 1296               	.LVL109:
 1297               	.L79:
 170:test3.c       **** 		{
 1298               		.loc 1 170 3 is_stmt 1 view .LVU292
 170:test3.c       **** 		{
 1299               		.loc 1 170 6 is_stmt 0 view .LVU293
 1300 075e 4DF4 0800 		lea (%a4,%d0.l),%a6
 1301 0762 7C02      		moveq #2,%d6
68K GAS  /tmp/ccmq8Bnl.s 			page 36


 1302 0764 BC8E      		cmp.l %a6,%d6
 1303 0766 6D04      		jlt .L75
 172:test3.c       **** 		}
 1304               		.loc 1 172 4 is_stmt 1 view .LVU294
 172:test3.c       **** 		}
 1305               		.loc 1 172 19 is_stmt 0 view .LVU295
 1306 0768 D2A8 0004 		add.l 4(%a0),%d1
 1307               	.LVL110:
 1308               	.L75:
 174:test3.c       **** 		{
 1309               		.loc 1 174 3 is_stmt 1 view .LVU296
 174:test3.c       **** 		{
 1310               		.loc 1 174 6 is_stmt 0 view .LVU297
 1311 076c 2C4C      		move.l %a4,%a6
 1312 076e 9DC0      		sub.l %d0,%a6
 1313 0770 BCFC 0000 		cmp.w #0,%a6
 1314 0774 6D02      		jlt .L76
 176:test3.c       **** 		}
 1315               		.loc 1 176 4 is_stmt 1 view .LVU298
 176:test3.c       **** 		}
 1316               		.loc 1 176 19 is_stmt 0 view .LVU299
 1317 0776 D291      		add.l (%a1),%d1
 1318               	.LVL111:
 1319               	.L76:
 179:test3.c       **** 			win[1] = win[1]+b_board[row+i][col];
 1320               		.loc 1 179 3 is_stmt 1 view .LVU300
 179:test3.c       **** 			win[1] = win[1]+b_board[row+i][col];
 1321               		.loc 1 179 5 is_stmt 0 view .LVU301
 1322 0778 2C44      		move.l %d4,%a6
 1323 077a DDC0      		add.l %d0,%a6
 1324 077c 7C02      		moveq #2,%d6
 1325 077e BC8E      		cmp.l %a6,%d6
 1326 0780 6D02      		jlt .L77
 180:test3.c       **** 		}
 1327               		.loc 1 180 4 is_stmt 1 view .LVU302
 180:test3.c       **** 		}
 1328               		.loc 1 180 19 is_stmt 0 view .LVU303
 1329 0782 D493      		add.l (%a3),%d2
 1330               	.LVL112:
 1331               	.L77:
 182:test3.c       **** 			win[1] = win[1]+b_board[row-i][col];
 1332               		.loc 1 182 3 is_stmt 1 view .LVU304
 182:test3.c       **** 			win[1] = win[1]+b_board[row-i][col];
 1333               		.loc 1 182 5 is_stmt 0 view .LVU305
 1334 0784 2C44      		move.l %d4,%a6
 1335 0786 9DC0      		sub.l %d0,%a6
 1336 0788 BCFC 0000 		cmp.w #0,%a6
 1337 078c 6D02      		jlt .L78
 183:test3.c       **** 		}
 1338               		.loc 1 183 4 is_stmt 1 view .LVU306
 183:test3.c       **** 		}
 1339               		.loc 1 183 19 is_stmt 0 view .LVU307
 1340 078e D492      		add.l (%a2),%d2
 1341               	.LVL113:
 1342               	.L78:
 168:test3.c       **** 	{
 1343               		.loc 1 168 26 is_stmt 1 discriminator 2 view .LVU308
68K GAS  /tmp/ccmq8Bnl.s 			page 37


 168:test3.c       **** 	{
 1344               		.loc 1 168 20 discriminator 2 view .LVU309
 1345 0790 45EA FFF4 		lea (-12,%a2),%a2
 1346 0794 47EB 000C 		lea (12,%a3),%a3
 1347 0798 5989      		subq.l #4,%a1
 1348 079a 5888      		addq.l #4,%a0
 1349 079c 5580      		subq.l #2,%d0
 1350               	.LVL114:
 168:test3.c       **** 	{
 1351               		.loc 1 168 20 is_stmt 0 discriminator 2 view .LVU310
 1352 079e 6632      		jne .L87
 1353               	.LVL115:
 168:test3.c       **** 	{
 1354               		.loc 1 168 20 discriminator 2 view .LVU311
 1355               	.LBE37:
 1356               	.LBB38:
 186:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 1357               		.loc 1 186 20 is_stmt 1 view .LVU312
 188:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
 1358               		.loc 1 188 3 view .LVU313
 188:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
 1359               		.loc 1 188 5 is_stmt 0 view .LVU314
 1360 07a0 7003      		moveq #3,%d0
 1361               	.LVL116:
 188:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
 1362               		.loc 1 188 5 view .LVU315
 1363 07a2 B081      		cmp.l %d1,%d0
 1364 07a4 6700 00A6 		jeq .L80
 186:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 1365               		.loc 1 186 26 is_stmt 1 view .LVU316
 1366               	.LVL117:
 186:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 1367               		.loc 1 186 20 view .LVU317
 188:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
 1368               		.loc 1 188 3 view .LVU318
 188:test3.c       **** 			//fprintf(screen, "vert/horiz win\n");
 1369               		.loc 1 188 5 is_stmt 0 view .LVU319
 1370 07a8 B082      		cmp.l %d2,%d0
 1371 07aa 6700 00A0 		jeq .L80
 186:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 1372               		.loc 1 186 26 is_stmt 1 view .LVU320
 1373               	.LVL118:
 186:test3.c       **** 		//fprintf(screen,"%d \n",win[i]);
 1374               		.loc 1 186 20 view .LVU321
 1375               	.LBE38:
 194:test3.c       **** 	{
 1376               		.loc 1 194 2 view .LVU322
 194:test3.c       **** 	{
 1377               		.loc 1 194 5 is_stmt 0 view .LVU323
 1378 07ae 7204      		moveq #4,%d1
 1379               	.LVL119:
 194:test3.c       **** 	{
 1380               		.loc 1 194 5 view .LVU324
 1381 07b0 B285      		cmp.l %d5,%d1
 1382 07b2 674A      		jeq .L107
 202:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1383               		.loc 1 202 9 is_stmt 1 view .LVU325
68K GAS  /tmp/ccmq8Bnl.s 			page 38


 202:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1384               		.loc 1 202 16 is_stmt 0 view .LVU326
 1385 07b4 7003      		moveq #3,%d0
 1386 07b6 C085      		and.l %d5,%d0
 202:test3.c       **** 		int win=b_board[0][0] + b_board[1][1] + b_board[2][2];
 1387               		.loc 1 202 11 view .LVU327
 1388 07b8 661C      		jne .L85
 1389               	.LBB39:
 203:test3.c       **** 		if (win==3){
 1390               		.loc 1 203 3 is_stmt 1 view .LVU328
 1391               	.LVL120:
 204:test3.c       **** 			fprintf(screen, "diag2win\n");
 1392               		.loc 1 204 3 view .LVU329
 203:test3.c       **** 		if (win==3){
 1393               		.loc 1 203 25 is_stmt 0 view .LVU330
 1394 07ba 2215      		move.l (%a5),%d1
 1395 07bc D2AD 0010 		add.l 16(%a5),%d1
 203:test3.c       **** 		if (win==3){
 1396               		.loc 1 203 7 view .LVU331
 1397 07c0 D2B9 0000 		add.l b_board+32,%d1
 1397      0000 
 204:test3.c       **** 			fprintf(screen, "diag2win\n");
 1398               		.loc 1 204 6 view .LVU332
 1399 07c6 5781      		subq.l #3,%d1
 1400 07c8 6700 0092 		jeq .L108
 1401               	.LBE39:
 219:test3.c       **** 
 1402               		.loc 1 219 1 view .LVU333
 1403 07cc 4CDF 7C7C 		movem.l (%sp)+,#31868
 1404               	.LVL121:
 219:test3.c       **** 
 1405               		.loc 1 219 1 view .LVU334
 1406 07d0 4E75      		rts
 1407               	.LVL122:
 1408               	.L87:
 1409               	.LBB40:
 219:test3.c       **** 
 1410               		.loc 1 219 1 view .LVU335
 1411 07d2 7002      		moveq #2,%d0
 1412               	.LVL123:
 219:test3.c       **** 
 1413               		.loc 1 219 1 view .LVU336
 1414 07d4 6088      		jra .L79
 1415               	.LVL124:
 1416               	.L85:
 219:test3.c       **** 
 1417               		.loc 1 219 1 view .LVU337
 1418               	.LBE40:
 209:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
 1419               		.loc 1 209 8 is_stmt 1 view .LVU338
 1420               	.LBB41:
 207:test3.c       **** 			}
 1421               		.loc 1 207 11 is_stmt 0 view .LVU339
 1422 07d6 0285 8000 		and.l #-2147483645,%d5
 1422      0003 
 1423               	.LBE41:
 209:test3.c       **** 		int win=b_board[0][2] + b_board[1][1] + b_board[2][0];
68K GAS  /tmp/ccmq8Bnl.s 			page 39


 1424               		.loc 1 209 10 view .LVU340
 1425 07dc 5585      		subq.l #2,%d5
 1426 07de 6616      		jne .L90
 1427               	.LBB42:
 210:test3.c       **** 		if(win==3){
 1428               		.loc 1 210 3 is_stmt 1 view .LVU341
 1429               	.LVL125:
 211:test3.c       **** 			//fprintf(screen, "diag3win\n");
 1430               		.loc 1 211 3 view .LVU342
 210:test3.c       **** 		if(win==3){
 1431               		.loc 1 210 25 is_stmt 0 view .LVU343
 1432 07e0 2039 0000 		move.l b_board+8,%d0
 1432      0000 
 1433 07e6 D0B9 0000 		add.l b_board+16,%d0
 1433      0000 
 210:test3.c       **** 		if(win==3){
 1434               		.loc 1 210 7 view .LVU344
 1435 07ec D0B9 0000 		add.l b_board+24,%d0
 1435      0000 
 211:test3.c       **** 			//fprintf(screen, "diag3win\n");
 1436               		.loc 1 211 5 view .LVU345
 1437 07f2 5780      		subq.l #3,%d0
 1438 07f4 6756      		jeq .L80
 1439               	.LVL126:
 1440               	.L90:
 211:test3.c       **** 			//fprintf(screen, "diag3win\n");
 1441               		.loc 1 211 5 view .LVU346
 1442               	.LBE42:
 218:test3.c       **** }
 1443               		.loc 1 218 9 view .LVU347
 1444 07f6 7000      		moveq #0,%d0
 219:test3.c       **** 
 1445               		.loc 1 219 1 view .LVU348
 1446 07f8 4CDF 7C7C 		movem.l (%sp)+,#31868
 1447               	.LVL127:
 219:test3.c       **** 
 1448               		.loc 1 219 1 view .LVU349
 1449 07fc 4E75      		rts
 1450               	.LVL128:
 1451               	.L107:
 1452               	.LBB43:
 196:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1453               		.loc 1 196 3 is_stmt 1 view .LVU350
 196:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1454               		.loc 1 196 40 is_stmt 0 view .LVU351
 1455 07fe 2039 0000 		move.l b_board+16,%d0
 1455      0000 
 1456               	.LVL129:
 197:test3.c       **** 		if(win1==3||win2==3){
 1457               		.loc 1 197 3 is_stmt 1 view .LVU352
 197:test3.c       **** 		if(win1==3||win2==3){
 1458               		.loc 1 197 28 is_stmt 0 view .LVU353
 1459 0804 2200      		move.l %d0,%d1
 1460 0806 D2B9 0000 		add.l b_board+8,%d1
 1460      0000 
 197:test3.c       **** 		if(win1==3||win2==3){
 1461               		.loc 1 197 7 view .LVU354
68K GAS  /tmp/ccmq8Bnl.s 			page 40


 1462 080c D2B9 0000 		add.l b_board+24,%d1
 1462      0000 
 1463               	.LVL130:
 198:test3.c       **** 			fprintf(screen, "diag1wi\n");
 1464               		.loc 1 198 3 is_stmt 1 view .LVU355
 196:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1465               		.loc 1 196 28 is_stmt 0 view .LVU356
 1466 0812 D095      		add.l (%a5),%d0
 1467               	.LVL131:
 196:test3.c       **** 		int win2 = b_board[0][2] + b_board[1][1] + b_board[2][0];
 1468               		.loc 1 196 7 view .LVU357
 1469 0814 D0B9 0000 		add.l b_board+32,%d0
 1469      0000 
 198:test3.c       **** 			fprintf(screen, "diag1wi\n");
 1470               		.loc 1 198 5 view .LVU358
 1471 081a 7C03      		moveq #3,%d6
 1472 081c BC80      		cmp.l %d0,%d6
 1473 081e 6704      		jeq .L84
 198:test3.c       **** 			fprintf(screen, "diag1wi\n");
 1474               		.loc 1 198 13 discriminator 1 view .LVU359
 1475 0820 BC81      		cmp.l %d1,%d6
 1476 0822 66D2      		jne .L90
 1477               	.L84:
 199:test3.c       **** 			win_flg=1;
 1478               		.loc 1 199 4 is_stmt 1 view .LVU360
 1479 0824 2F03      		move.l %d3,-(%sp)
 1480               		.cfi_def_cfa_offset 48
 1481 0826 4878 0008 		pea 8.w
 1482               		.cfi_def_cfa_offset 52
 1483 082a 4878 0001 		pea 1.w
 1484               		.cfi_def_cfa_offset 56
 1485 082e 4879 0000 		pea .LC14
 1485      0000 
 1486               		.cfi_def_cfa_offset 60
 1487 0834 4EB9 0000 		jsr fwrite
 1487      0000 
 1488               	.LVL132:
 200:test3.c       **** 			return 1;}
 1489               		.loc 1 200 4 view .LVU361
 200:test3.c       **** 			return 1;}
 1490               		.loc 1 200 11 is_stmt 0 view .LVU362
 1491 083a 7001      		moveq #1,%d0
 1492 083c 23C0 0000 		move.l %d0,win_flg
 1492      0000 
 201:test3.c       **** 	} else if(in%4==0){
 1493               		.loc 1 201 4 is_stmt 1 view .LVU363
 201:test3.c       **** 	} else if(in%4==0){
 1494               		.loc 1 201 11 is_stmt 0 view .LVU364
 1495 0842 4FEF 0010 		lea (16,%sp),%sp
 1496               		.cfi_def_cfa_offset 44
 1497               	.LBE43:
 219:test3.c       **** 
 1498               		.loc 1 219 1 view .LVU365
 1499 0846 4CDF 7C7C 		movem.l (%sp)+,#31868
 1500               	.LVL133:
 219:test3.c       **** 
 1501               		.loc 1 219 1 view .LVU366
68K GAS  /tmp/ccmq8Bnl.s 			page 41


 1502 084a 4E75      		rts
 1503               	.LVL134:
 1504               	.L80:
 1505               	.LBB44:
 190:test3.c       **** 			return 1;
 1506               		.loc 1 190 4 is_stmt 1 view .LVU367
 190:test3.c       **** 			return 1;
 1507               		.loc 1 190 11 is_stmt 0 view .LVU368
 1508 084c 7401      		moveq #1,%d2
 1509               	.LVL135:
 190:test3.c       **** 			return 1;
 1510               		.loc 1 190 11 view .LVU369
 1511 084e 23C2 0000 		move.l %d2,win_flg
 1511      0000 
 191:test3.c       **** 			}
 1512               		.loc 1 191 4 is_stmt 1 view .LVU370
 191:test3.c       **** 			}
 1513               		.loc 1 191 11 is_stmt 0 view .LVU371
 1514 0854 7001      		moveq #1,%d0
 1515               	.LBE44:
 219:test3.c       **** 
 1516               		.loc 1 219 1 view .LVU372
 1517 0856 4CDF 7C7C 		movem.l (%sp)+,#31868
 1518               	.LVL136:
 219:test3.c       **** 
 1519               		.loc 1 219 1 view .LVU373
 1520 085a 4E75      		rts
 1521               	.LVL137:
 1522               	.L108:
 1523               	.LBB45:
 205:test3.c       **** 			win_flg=1;
 1524               		.loc 1 205 4 is_stmt 1 view .LVU374
 1525 085c 2F03      		move.l %d3,-(%sp)
 1526               		.cfi_def_cfa_offset 48
 1527 085e 4878 0009 		pea 9.w
 1528               		.cfi_def_cfa_offset 52
 1529 0862 4878 0001 		pea 1.w
 1530               		.cfi_def_cfa_offset 56
 1531 0866 4879 0000 		pea .LC15
 1531      0000 
 1532               		.cfi_def_cfa_offset 60
 1533 086c 4EB9 0000 		jsr fwrite
 1533      0000 
 1534               	.LVL138:
 206:test3.c       **** 			return 1;
 1535               		.loc 1 206 4 view .LVU375
 206:test3.c       **** 			return 1;
 1536               		.loc 1 206 11 is_stmt 0 view .LVU376
 1537 0872 7C01      		moveq #1,%d6
 1538 0874 23C6 0000 		move.l %d6,win_flg
 1538      0000 
 207:test3.c       **** 			}
 1539               		.loc 1 207 4 is_stmt 1 view .LVU377
 207:test3.c       **** 			}
 1540               		.loc 1 207 11 is_stmt 0 view .LVU378
 1541 087a 4FEF 0010 		lea (16,%sp),%sp
 1542               		.cfi_def_cfa_offset 44
68K GAS  /tmp/ccmq8Bnl.s 			page 42


 1543 087e 7001      		moveq #1,%d0
 1544               	.LBE45:
 219:test3.c       **** 
 1545               		.loc 1 219 1 view .LVU379
 1546 0880 4CDF 7C7C 		movem.l (%sp)+,#31868
 1547               	.LVL139:
 219:test3.c       **** 
 1548               		.loc 1 219 1 view .LVU380
 1549 0884 4E75      		rts
 1550               		.cfi_endproc
 1551               	.LFE10:
 1552               		.size	check_win, .-check_win
 1553               		.section	.rodata.str1.1
 1554               	.LC16:
 1555 00c9 506C 6179 		.string	"Player 'O', choose a cell (0-8): \n"
 1555      6572 2027 
 1555      4F27 2C20 
 1555      6368 6F6F 
 1555      7365 2061 
 1556               	.LC17:
 1557 00ec 1B5B 3F32 		.string	"\033[?25h"
 1557      3568 00
 1558               	.LC18:
 1559 00f3 496E 7661 		.string	"Invalid cell. Try again.\n"
 1559      6C69 6420 
 1559      6365 6C6C 
 1559      2E20 5472 
 1559      7920 6167 
 1560               		.text
 1561               		.align	2
 1562               		.globl	player_maru
 1563               		.type	player_maru, @function
 1564               	player_maru:
 1565               	.LFB11:
 222:test3.c       **** 	
 1566               		.loc 1 222 20 is_stmt 1 view -0
 1567               		.cfi_startproc
 1568 0886 48E7 3F3E 		movem.l #16190,-(%sp)
 1569               		.cfi_def_cfa_offset 48
 1570               		.cfi_offset 2, -48
 1571               		.cfi_offset 3, -44
 1572               		.cfi_offset 4, -40
 1573               		.cfi_offset 5, -36
 1574               		.cfi_offset 6, -32
 1575               		.cfi_offset 7, -28
 1576               		.cfi_offset 10, -24
 1577               		.cfi_offset 11, -20
 1578               		.cfi_offset 12, -16
 1579               		.cfi_offset 13, -12
 1580               		.cfi_offset 14, -8
 1581 088a 2E3C 0000 		move.l #P,%d7
 1581      0000 
 1582 0890 45F9 0000 		lea fwrite,%a2
 1582      0000 
 1583 0896 49F9 0000 		lea inbyte,%a4
 1583      0000 
 1584 089c 2A3C 0000 		move.l #board,%d5
68K GAS  /tmp/ccmq8Bnl.s 			page 43


 1584      0000 
 1585 08a2 283C 0000 		move.l #__divsi3,%d4
 1585      0000 
 1586 08a8 263C 0000 		move.l #__modsi3,%d3
 1586      0000 
 1587 08ae 4BF9 0000 		lea player_O,%a5
 1587      0000 
 1588 08b4 243C 0000 		move.l #remove_cell,%d2
 1588      0000 
 226:test3.c       **** 	{
 1589               		.loc 1 226 2 view .LVU382
 1590               	.LBB46:
 228:test3.c       **** 		char cell;
 1591               		.loc 1 228 3 view .LVU383
 1592 08ba 42A7      		clr.l -(%sp)
 1593               		.cfi_def_cfa_offset 52
 1594 08bc 2047      		move.l %d7,%a0
 1595 08be 4E90      		jsr (%a0)
 1596               	.LVL140:
 229:test3.c       **** 		bool valid = false;
 1597               		.loc 1 229 3 view .LVU384
 230:test3.c       **** 		player_x.is_turn = false;
 1598               		.loc 1 230 3 view .LVU385
 231:test3.c       **** 		player_O.is_turn=true;
 1599               		.loc 1 231 3 view .LVU386
 231:test3.c       **** 		player_O.is_turn=true;
 1600               		.loc 1 231 20 is_stmt 0 view .LVU387
 1601 08c0 42B9 0000 		clr.l player_x+2
 1601      0000 
 232:test3.c       **** 		display_board(); // Show the updated board
 1602               		.loc 1 232 3 is_stmt 1 view .LVU388
 232:test3.c       **** 		display_board(); // Show the updated board
 1603               		.loc 1 232 19 is_stmt 0 view .LVU389
 1604 08c6 7001      		moveq #1,%d0
 1605 08c8 23C0 0000 		move.l %d0,player_O+2
 1605      0000 
 233:test3.c       **** 		while (!valid) {
 1606               		.loc 1 233 3 is_stmt 1 view .LVU390
 1607 08ce 4EBA FC1C 		jsr display_board
 1608               	.LVL141:
 234:test3.c       **** 			// choose a cell
 1609               		.loc 1 234 3 view .LVU391
 234:test3.c       **** 			// choose a cell
 1610               		.loc 1 234 10 view .LVU392
 1611 08d2 588F      		addq.l #4,%sp
 1612               		.cfi_def_cfa_offset 48
 1613               	.L118:
 236:test3.c       **** 			fprintf(player_O.output,"%s", CURSORVISIBLE);//enable cursor
 1614               		.loc 1 236 4 view .LVU393
 1615 08d4 2F39 0000 		move.l player_O+18,-(%sp)
 1615      0000 
 1616               		.cfi_def_cfa_offset 52
 1617 08da 4878 0022 		pea 34.w
 1618               		.cfi_def_cfa_offset 56
 1619 08de 4878 0001 		pea 1.w
 1620               		.cfi_def_cfa_offset 60
 1621 08e2 4879 0000 		pea .LC16
68K GAS  /tmp/ccmq8Bnl.s 			page 44


 1621      0000 
 1622               		.cfi_def_cfa_offset 64
 1623 08e8 4E92      		jsr (%a2)
 1624               	.LVL142:
 237:test3.c       **** 			cell = inbyte(player_O.port);
 1625               		.loc 1 237 4 view .LVU394
 1626 08ea 2F39 0000 		move.l player_O+18,-(%sp)
 1626      0000 
 1627               		.cfi_def_cfa_offset 68
 1628 08f0 4878 0006 		pea 6.w
 1629               		.cfi_def_cfa_offset 72
 1630 08f4 4878 0001 		pea 1.w
 1631               		.cfi_def_cfa_offset 76
 1632 08f8 4879 0000 		pea .LC17
 1632      0000 
 1633               		.cfi_def_cfa_offset 80
 1634 08fe 4E92      		jsr (%a2)
 1635               	.LVL143:
 238:test3.c       **** 			// Validate the chosen cell
 1636               		.loc 1 238 4 view .LVU395
 238:test3.c       **** 			// Validate the chosen cell
 1637               		.loc 1 238 11 is_stmt 0 view .LVU396
 1638 0900 4FEF 001C 		lea (28,%sp),%sp
 1639               		.cfi_def_cfa_offset 52
 1640 0904 2EB9 0000 		move.l player_O+6,(%sp)
 1640      0000 
 1641 090a 4E94      		jsr (%a4)
 1642               	.LVL144:
 240:test3.c       **** 				valid = true;
 1643               		.loc 1 240 4 is_stmt 1 view .LVU397
 1644               	.LBB47:
 1645               	.LBI47:
  65:test3.c       ****     for (int i = 0; i < 9; i++) {
 1646               		.loc 1 65 6 view .LVU398
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1647               		.loc 1 66 5 view .LVU399
 1648               	.LBB48:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1649               		.loc 1 66 10 view .LVU400
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1650               		.loc 1 66 23 view .LVU401
 1651 090c 41F9 0000 		lea valid_cells,%a0
 1651      0000 
 1652 0912 588F      		addq.l #4,%sp
 1653               		.cfi_def_cfa_offset 48
 1654               	.LVL145:
 1655               	.L112:
  67:test3.c       ****     }
 1656               		.loc 1 67 9 view .LVU402
  67:test3.c       ****     }
 1657               		.loc 1 67 12 is_stmt 0 view .LVU403
 1658 0914 B018      		cmp.b (%a0)+,%d0
 1659 0916 6764      		jeq .L111
 1660               	.LVL146:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1661               		.loc 1 66 29 is_stmt 1 view .LVU404
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
68K GAS  /tmp/ccmq8Bnl.s 			page 45


 1662               		.loc 1 66 23 view .LVU405
 1663 0918 B1FC 0000 		cmp.l #valid_cells+9,%a0
 1663      0000 
 1664 091e 66F4      		jne .L112
 1665               	.LVL147:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1666               		.loc 1 66 23 is_stmt 0 view .LVU406
 1667               	.LBE48:
 1668               	.LBE47:
 245:test3.c       **** 		}
 1669               		.loc 1 245 5 is_stmt 1 view .LVU407
 1670 0920 2F39 0000 		move.l player_O+18,-(%sp)
 1670      0000 
 1671               		.cfi_def_cfa_offset 52
 1672 0926 4878 0019 		pea 25.w
 1673               		.cfi_def_cfa_offset 56
 1674 092a 4878 0001 		pea 1.w
 1675               		.cfi_def_cfa_offset 60
 1676 092e 4879 0000 		pea .LC18
 1676      0000 
 1677               		.cfi_def_cfa_offset 64
 1678 0934 4E92      		jsr (%a2)
 1679               	.LVL148:
 234:test3.c       **** 			// choose a cell
 1680               		.loc 1 234 10 view .LVU408
 245:test3.c       **** 		}
 1681               		.loc 1 245 5 is_stmt 0 view .LVU409
 1682 0936 4FEF 0010 		lea (16,%sp),%sp
 1683               		.cfi_def_cfa_offset 48
 236:test3.c       **** 			fprintf(player_O.output,"%s", CURSORVISIBLE);//enable cursor
 1684               		.loc 1 236 4 is_stmt 1 view .LVU410
 1685 093a 2F39 0000 		move.l player_O+18,-(%sp)
 1685      0000 
 1686               		.cfi_def_cfa_offset 52
 1687 0940 4878 0022 		pea 34.w
 1688               		.cfi_def_cfa_offset 56
 1689 0944 4878 0001 		pea 1.w
 1690               		.cfi_def_cfa_offset 60
 1691 0948 4879 0000 		pea .LC16
 1691      0000 
 1692               		.cfi_def_cfa_offset 64
 1693 094e 4E92      		jsr (%a2)
 1694               	.LVL149:
 237:test3.c       **** 			cell = inbyte(player_O.port);
 1695               		.loc 1 237 4 view .LVU411
 1696 0950 2F39 0000 		move.l player_O+18,-(%sp)
 1696      0000 
 1697               		.cfi_def_cfa_offset 68
 1698 0956 4878 0006 		pea 6.w
 1699               		.cfi_def_cfa_offset 72
 1700 095a 4878 0001 		pea 1.w
 1701               		.cfi_def_cfa_offset 76
 1702 095e 4879 0000 		pea .LC17
 1702      0000 
 1703               		.cfi_def_cfa_offset 80
 1704 0964 4E92      		jsr (%a2)
 1705               	.LVL150:
68K GAS  /tmp/ccmq8Bnl.s 			page 46


 238:test3.c       **** 			// Validate the chosen cell
 1706               		.loc 1 238 4 view .LVU412
 238:test3.c       **** 			// Validate the chosen cell
 1707               		.loc 1 238 11 is_stmt 0 view .LVU413
 1708 0966 4FEF 001C 		lea (28,%sp),%sp
 1709               		.cfi_def_cfa_offset 52
 1710 096a 2EB9 0000 		move.l player_O+6,(%sp)
 1710      0000 
 1711 0970 4E94      		jsr (%a4)
 1712               	.LVL151:
 240:test3.c       **** 				valid = true;
 1713               		.loc 1 240 4 is_stmt 1 view .LVU414
 1714               	.LBB50:
  65:test3.c       ****     for (int i = 0; i < 9; i++) {
 1715               		.loc 1 65 6 view .LVU415
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1716               		.loc 1 66 5 view .LVU416
 1717               	.LBB49:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1718               		.loc 1 66 10 view .LVU417
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1719               		.loc 1 66 23 view .LVU418
 1720 0972 41F9 0000 		lea valid_cells,%a0
 1720      0000 
 1721 0978 588F      		addq.l #4,%sp
 1722               		.cfi_def_cfa_offset 48
 1723 097a 6098      		jra .L112
 1724               	.LVL152:
 1725               	.L111:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 1726               		.loc 1 66 23 is_stmt 0 view .LVU419
 1727               	.LBE49:
 1728               	.LBE50:
 240:test3.c       **** 				valid = true;
 1729               		.loc 1 240 8 view .LVU420
 1730 097c 4880      		ext.w %d0
 240:test3.c       **** 				valid = true;
 1731               		.loc 1 240 8 view .LVU421
 1732 097e 3640      		move.w %d0,%a3
 1733               	.LVL153:
 241:test3.c       **** 				update_board(cell-'0', player_O.mark);  // Place 'O' on the board
 1734               		.loc 1 241 5 is_stmt 1 view .LVU422
 242:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 1735               		.loc 1 242 5 view .LVU423
 1736 0980 4DEB FFD0 		lea (-48,%a3),%a6
 1737               	.LVL154:
 1738               	.LBB51:
 1739               	.LBI51:
 104:test3.c       ****     int row = cell / 3;
 1740               		.loc 1 104 6 view .LVU424
 1741               	.LBB52:
 105:test3.c       ****     int col = cell % 3;
 1742               		.loc 1 105 5 view .LVU425
 106:test3.c       ****     board[row][col] = mark;
 1743               		.loc 1 106 5 view .LVU426
 107:test3.c       **** }
 1744               		.loc 1 107 5 view .LVU427
68K GAS  /tmp/ccmq8Bnl.s 			page 47


 105:test3.c       ****     int col = cell % 3;
 1745               		.loc 1 105 9 is_stmt 0 view .LVU428
 1746 0984 4878 0003 		pea 3.w
 1747               		.cfi_def_cfa_offset 52
 1748 0988 2F0E      		move.l %a6,-(%sp)
 1749               		.cfi_def_cfa_offset 56
 1750 098a 2044      		move.l %d4,%a0
 1751 098c 4E90      		jsr (%a0)
 1752               	.LVL155:
 105:test3.c       ****     int col = cell % 3;
 1753               		.loc 1 105 9 view .LVU429
 1754 098e 508F      		addq.l #8,%sp
 1755               		.cfi_def_cfa_offset 48
 1756 0990 2C00      		move.l %d0,%d6
 106:test3.c       ****     board[row][col] = mark;
 1757               		.loc 1 106 9 view .LVU430
 1758 0992 4878 0003 		pea 3.w
 1759               		.cfi_def_cfa_offset 52
 1760 0996 2F0E      		move.l %a6,-(%sp)
 1761               		.cfi_def_cfa_offset 56
 1762 0998 2043      		move.l %d3,%a0
 1763 099a 4E90      		jsr (%a0)
 1764               	.LVL156:
 1765 099c 508F      		addq.l #8,%sp
 1766               		.cfi_def_cfa_offset 48
 107:test3.c       **** }
 1767               		.loc 1 107 21 view .LVU431
 1768 099e 2046      		move.l %d6,%a0
 1769 09a0 D1C6      		add.l %d6,%a0
 1770 09a2 D1C6      		add.l %d6,%a0
 1771 09a4 D1C5      		add.l %d5,%a0
 1772 09a6 1195 0800 		move.b (%a5),(%a0,%d0.l)
 1773               	.LVL157:
 107:test3.c       **** }
 1774               		.loc 1 107 21 view .LVU432
 1775               	.LBE52:
 1776               	.LBE51:
 243:test3.c       **** 			} else 
 1777               		.loc 1 243 5 is_stmt 1 view .LVU433
 1778 09aa 2F0B      		move.l %a3,-(%sp)
 1779               		.cfi_def_cfa_offset 52
 1780 09ac 2042      		move.l %d2,%a0
 1781 09ae 4E90      		jsr (%a0)
 1782               	.LVL158:
 234:test3.c       **** 			// choose a cell
 1783               		.loc 1 234 10 view .LVU434
 248:test3.c       **** 			display_board();
 1784               		.loc 1 248 3 view .LVU435
 248:test3.c       **** 			display_board();
 1785               		.loc 1 248 7 is_stmt 0 view .LVU436
 1786 09b0 1015      		move.b (%a5),%d0
 1787 09b2 4880      		ext.w %d0
 1788 09b4 3040      		move.w %d0,%a0
 1789 09b6 2F08      		move.l %a0,-(%sp)
 1790               		.cfi_def_cfa_offset 56
 1791 09b8 2F0E      		move.l %a6,-(%sp)
 1792               		.cfi_def_cfa_offset 60
68K GAS  /tmp/ccmq8Bnl.s 			page 48


 1793 09ba 2F39 0000 		move.l player_O+18,-(%sp)
 1793      0000 
 1794               		.cfi_def_cfa_offset 64
 1795 09c0 4EBA FCDE 		jsr check_win
 1796               	.LVL159:
 248:test3.c       **** 			display_board();
 1797               		.loc 1 248 6 view .LVU437
 1798 09c4 4FEF 0010 		lea (16,%sp),%sp
 1799               		.cfi_def_cfa_offset 48
 1800 09c8 4A80      		tst.l %d0
 1801 09ca 6608      		jne .L116
 248:test3.c       **** 			display_board();
 1802               		.loc 1 248 56 discriminator 1 view .LVU438
 1803 09cc 4AB9 0000 		tst.l valid_cells_length
 1803      0000 
 1804 09d2 663E      		jne .L114
 1805               	.L116:
 249:test3.c       **** 			V(1);
 1806               		.loc 1 249 4 is_stmt 1 view .LVU439
 1807 09d4 4EBA FB16 		jsr display_board
 1808               	.LVL160:
 250:test3.c       **** 			P(0);
 1809               		.loc 1 250 4 view .LVU440
 1810 09d8 4878 0001 		pea 1.w
 1811               		.cfi_def_cfa_offset 52
 1812 09dc 4EB9 0000 		jsr V
 1812      0000 
 1813               	.LVL161:
 251:test3.c       **** 			V(0);
 1814               		.loc 1 251 4 view .LVU441
 1815 09e2 42A7      		clr.l -(%sp)
 1816               		.cfi_def_cfa_offset 56
 1817 09e4 2047      		move.l %d7,%a0
 1818 09e6 4E90      		jsr (%a0)
 1819               	.LVL162:
 252:test3.c       **** 			//break;
 1820               		.loc 1 252 4 view .LVU442
 1821 09e8 42A7      		clr.l -(%sp)
 1822               		.cfi_def_cfa_offset 60
 1823 09ea 4EB9 0000 		jsr V
 1823      0000 
 1824               	.LVL163:
 1825 09f0 4FEF 000C 		lea (12,%sp),%sp
 1826               		.cfi_def_cfa_offset 48
 1827               	.LVL164:
 252:test3.c       **** 			//break;
 1828               		.loc 1 252 4 is_stmt 0 view .LVU443
 1829               	.LBE46:
 226:test3.c       **** 	{
 1830               		.loc 1 226 2 is_stmt 1 view .LVU444
 1831               	.LBB53:
 228:test3.c       **** 		char cell;
 1832               		.loc 1 228 3 view .LVU445
 1833 09f4 42A7      		clr.l -(%sp)
 1834               		.cfi_def_cfa_offset 52
 1835 09f6 2047      		move.l %d7,%a0
 1836 09f8 4E90      		jsr (%a0)
68K GAS  /tmp/ccmq8Bnl.s 			page 49


 1837               	.LVL165:
 229:test3.c       **** 		bool valid = false;
 1838               		.loc 1 229 3 view .LVU446
 230:test3.c       **** 		player_x.is_turn = false;
 1839               		.loc 1 230 3 view .LVU447
 231:test3.c       **** 		player_O.is_turn=true;
 1840               		.loc 1 231 3 view .LVU448
 231:test3.c       **** 		player_O.is_turn=true;
 1841               		.loc 1 231 20 is_stmt 0 view .LVU449
 1842 09fa 42B9 0000 		clr.l player_x+2
 1842      0000 
 232:test3.c       **** 		display_board(); // Show the updated board
 1843               		.loc 1 232 3 is_stmt 1 view .LVU450
 232:test3.c       **** 		display_board(); // Show the updated board
 1844               		.loc 1 232 19 is_stmt 0 view .LVU451
 1845 0a00 7001      		moveq #1,%d0
 1846 0a02 23C0 0000 		move.l %d0,player_O+2
 1846      0000 
 233:test3.c       **** 		while (!valid) {
 1847               		.loc 1 233 3 is_stmt 1 view .LVU452
 1848 0a08 4EBA FAE2 		jsr display_board
 1849               	.LVL166:
 234:test3.c       **** 			// choose a cell
 1850               		.loc 1 234 3 view .LVU453
 234:test3.c       **** 			// choose a cell
 1851               		.loc 1 234 10 view .LVU454
 1852 0a0c 588F      		addq.l #4,%sp
 1853               		.cfi_def_cfa_offset 48
 1854 0a0e 6000 FEC4 		jra .L118
 1855               	.LVL167:
 1856               	.L114:
 258:test3.c       **** 		}
 1857               		.loc 1 258 4 view .LVU455
 1858 0a12 42A7      		clr.l -(%sp)
 1859               		.cfi_def_cfa_offset 52
 1860 0a14 4EB9 0000 		jsr V
 1860      0000 
 1861               	.LVL168:
 1862 0a1a 588F      		addq.l #4,%sp
 1863               		.cfi_def_cfa_offset 48
 1864               	.LVL169:
 258:test3.c       **** 		}
 1865               		.loc 1 258 4 is_stmt 0 view .LVU456
 1866               	.LBE53:
 226:test3.c       **** 	{
 1867               		.loc 1 226 2 is_stmt 1 view .LVU457
 1868               	.LBB54:
 228:test3.c       **** 		char cell;
 1869               		.loc 1 228 3 view .LVU458
 1870 0a1c 42A7      		clr.l -(%sp)
 1871               		.cfi_def_cfa_offset 52
 1872 0a1e 2047      		move.l %d7,%a0
 1873 0a20 4E90      		jsr (%a0)
 1874               	.LVL170:
 229:test3.c       **** 		bool valid = false;
 1875               		.loc 1 229 3 view .LVU459
 230:test3.c       **** 		player_x.is_turn = false;
68K GAS  /tmp/ccmq8Bnl.s 			page 50


 1876               		.loc 1 230 3 view .LVU460
 231:test3.c       **** 		player_O.is_turn=true;
 1877               		.loc 1 231 3 view .LVU461
 231:test3.c       **** 		player_O.is_turn=true;
 1878               		.loc 1 231 20 is_stmt 0 view .LVU462
 1879 0a22 42B9 0000 		clr.l player_x+2
 1879      0000 
 232:test3.c       **** 		display_board(); // Show the updated board
 1880               		.loc 1 232 3 is_stmt 1 view .LVU463
 232:test3.c       **** 		display_board(); // Show the updated board
 1881               		.loc 1 232 19 is_stmt 0 view .LVU464
 1882 0a28 7001      		moveq #1,%d0
 1883 0a2a 23C0 0000 		move.l %d0,player_O+2
 1883      0000 
 233:test3.c       **** 		while (!valid) {
 1884               		.loc 1 233 3 is_stmt 1 view .LVU465
 1885 0a30 4EBA FABA 		jsr display_board
 1886               	.LVL171:
 234:test3.c       **** 			// choose a cell
 1887               		.loc 1 234 3 view .LVU466
 234:test3.c       **** 			// choose a cell
 1888               		.loc 1 234 10 view .LVU467
 1889 0a34 588F      		addq.l #4,%sp
 1890               		.cfi_def_cfa_offset 48
 1891 0a36 6000 FE9C 		jra .L118
 1892               	.LBE54:
 1893               		.cfi_endproc
 1894               	.LFE11:
 1895               		.size	player_maru, .-player_maru
 1896               		.section	.rodata.str1.1
 1897               	.LC19:
 1898 010d 506C 6179 		.string	"Player 'X', choose a cell (0-8): \n"
 1898      6572 2027 
 1898      5827 2C20 
 1898      6368 6F6F 
 1898      7365 2061 
 1899               	.LC20:
 1900 0130 506C 6179 		.string	"Player 'X', cell chosen: \n"
 1900      6572 2027 
 1900      5827 2C20 
 1900      6365 6C6C 
 1900      2063 686F 
 1901               		.text
 1902               		.align	2
 1903               		.globl	task_player_x
 1904               		.type	task_player_x, @function
 1905               	task_player_x:
 1906               	.LFB13:
 309:test3.c       **** 		}
 310:test3.c       **** 	}
 311:test3.c       **** }
 312:test3.c       **** void task_player_x() {
 1907               		.loc 1 312 22 view -0
 1908               		.cfi_startproc
 1909 0a3a 48E7 3F3E 		movem.l #16190,-(%sp)
 1910               		.cfi_def_cfa_offset 48
 1911               		.cfi_offset 2, -48
68K GAS  /tmp/ccmq8Bnl.s 			page 51


 1912               		.cfi_offset 3, -44
 1913               		.cfi_offset 4, -40
 1914               		.cfi_offset 5, -36
 1915               		.cfi_offset 6, -32
 1916               		.cfi_offset 7, -28
 1917               		.cfi_offset 10, -24
 1918               		.cfi_offset 11, -20
 1919               		.cfi_offset 12, -16
 1920               		.cfi_offset 13, -12
 1921               		.cfi_offset 14, -8
 1922 0a3e 2E3C 0000 		move.l #P,%d7
 1922      0000 
 1923 0a44 45F9 0000 		lea fwrite,%a2
 1923      0000 
 1924 0a4a 49F9 0000 		lea inbyte,%a4
 1924      0000 
 1925 0a50 2A3C 0000 		move.l #board,%d5
 1925      0000 
 1926 0a56 283C 0000 		move.l #__divsi3,%d4
 1926      0000 
 1927 0a5c 263C 0000 		move.l #__modsi3,%d3
 1927      0000 
 1928 0a62 4BF9 0000 		lea player_x,%a5
 1928      0000 
 1929 0a68 243C 0000 		move.l #remove_cell,%d2
 1929      0000 
 313:test3.c       **** 	//char cell ;
 314:test3.c       **** 	
 315:test3.c       **** 	while(1){
 1930               		.loc 1 315 2 view .LVU469
 1931               	.LBB55:
 316:test3.c       **** 		//fprintf(player_x.output,"Hello player x");
 317:test3.c       **** 		P(0);
 1932               		.loc 1 317 3 view .LVU470
 1933 0a6e 42A7      		clr.l -(%sp)
 1934               		.cfi_def_cfa_offset 52
 1935 0a70 2047      		move.l %d7,%a0
 1936 0a72 4E90      		jsr (%a0)
 1937               	.LVL172:
 318:test3.c       **** 		char cell;
 1938               		.loc 1 318 3 view .LVU471
 319:test3.c       **** 		bool valid = false;
 1939               		.loc 1 319 3 view .LVU472
 320:test3.c       **** 		player_x.is_turn = true;
 1940               		.loc 1 320 3 view .LVU473
 1941               		.loc 1 320 20 is_stmt 0 view .LVU474
 1942 0a74 7001      		moveq #1,%d0
 1943 0a76 23C0 0000 		move.l %d0,player_x+2
 1943      0000 
 321:test3.c       **** 		player_O.is_turn = false;
 1944               		.loc 1 321 3 is_stmt 1 view .LVU475
 1945               		.loc 1 321 20 is_stmt 0 view .LVU476
 1946 0a7c 42B9 0000 		clr.l player_O+2
 1946      0000 
 322:test3.c       **** 		display_board(); // Show the updated board
 1947               		.loc 1 322 3 is_stmt 1 view .LVU477
 1948 0a82 4EBA FA68 		jsr display_board
68K GAS  /tmp/ccmq8Bnl.s 			page 52


 1949               	.LVL173:
 323:test3.c       **** 		while (!valid) {
 1950               		.loc 1 323 3 view .LVU478
 1951               		.loc 1 323 10 view .LVU479
 1952 0a86 588F      		addq.l #4,%sp
 1953               		.cfi_def_cfa_offset 48
 1954               	.L133:
 324:test3.c       **** 			//choose a cell
 325:test3.c       **** 			fprintf(player_x.output, "Player 'X', choose a cell (0-8): \n");
 1955               		.loc 1 325 4 view .LVU480
 1956 0a88 2F39 0000 		move.l player_x+18,-(%sp)
 1956      0000 
 1957               		.cfi_def_cfa_offset 52
 1958 0a8e 4878 0022 		pea 34.w
 1959               		.cfi_def_cfa_offset 56
 1960 0a92 4878 0001 		pea 1.w
 1961               		.cfi_def_cfa_offset 60
 1962 0a96 4879 0000 		pea .LC19
 1962      0000 
 1963               		.cfi_def_cfa_offset 64
 1964 0a9c 4E92      		jsr (%a2)
 1965               	.LVL174:
 326:test3.c       **** 			fprintf(player_x.output,"%s", CURSORVISIBLE);//enable cursor
 1966               		.loc 1 326 4 view .LVU481
 1967 0a9e 2F39 0000 		move.l player_x+18,-(%sp)
 1967      0000 
 1968               		.cfi_def_cfa_offset 68
 1969 0aa4 4878 0006 		pea 6.w
 1970               		.cfi_def_cfa_offset 72
 1971 0aa8 4878 0001 		pea 1.w
 1972               		.cfi_def_cfa_offset 76
 1973 0aac 4879 0000 		pea .LC17
 1973      0000 
 1974               		.cfi_def_cfa_offset 80
 1975 0ab2 4E92      		jsr (%a2)
 1976               	.LVL175:
 327:test3.c       **** 			cell = inbyte(player_x.port);
 1977               		.loc 1 327 4 view .LVU482
 1978               		.loc 1 327 11 is_stmt 0 view .LVU483
 1979 0ab4 4FEF 001C 		lea (28,%sp),%sp
 1980               		.cfi_def_cfa_offset 52
 1981 0ab8 2EB9 0000 		move.l player_x+6,(%sp)
 1981      0000 
 1982 0abe 4E94      		jsr (%a4)
 1983               	.LVL176:
 1984 0ac0 1C00      		move.b %d0,%d6
 1985               	.LVL177:
 328:test3.c       **** 			fprintf(player_x.output, "Player 'X', cell chosen: \n");
 1986               		.loc 1 328 4 is_stmt 1 view .LVU484
 1987 0ac2 2F39 0000 		move.l player_x+18,-(%sp)
 1987      0000 
 1988               		.cfi_def_cfa_offset 56
 1989 0ac8 4878 001A 		pea 26.w
 1990               		.cfi_def_cfa_offset 60
 1991 0acc 4878 0001 		pea 1.w
 1992               		.cfi_def_cfa_offset 64
 1993 0ad0 4879 0000 		pea .LC20
68K GAS  /tmp/ccmq8Bnl.s 			page 53


 1993      0000 
 1994               		.cfi_def_cfa_offset 68
 1995 0ad6 4E92      		jsr (%a2)
 1996               	.LVL178:
 329:test3.c       **** 			// Validate the chosen cell
 330:test3.c       **** 			if (is_valid_cell(cell)) {
 1997               		.loc 1 330 4 view .LVU485
 1998               	.LBB56:
 1999               	.LBI56:
  65:test3.c       ****     for (int i = 0; i < 9; i++) {
 2000               		.loc 1 65 6 view .LVU486
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2001               		.loc 1 66 5 view .LVU487
 2002               	.LBB57:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2003               		.loc 1 66 10 view .LVU488
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2004               		.loc 1 66 23 view .LVU489
 2005 0ad8 41F9 0000 		lea valid_cells,%a0
 2005      0000 
 2006 0ade 4FEF 0014 		lea (20,%sp),%sp
 2007               		.cfi_def_cfa_offset 48
 2008               	.LVL179:
 2009               	.L127:
  67:test3.c       ****     }
 2010               		.loc 1 67 9 view .LVU490
  67:test3.c       ****     }
 2011               		.loc 1 67 12 is_stmt 0 view .LVU491
 2012 0ae2 BC18      		cmp.b (%a0)+,%d6
 2013 0ae4 6700 0082 		jeq .L126
 2014               	.LVL180:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2015               		.loc 1 66 29 is_stmt 1 view .LVU492
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2016               		.loc 1 66 23 view .LVU493
 2017 0ae8 B1FC 0000 		cmp.l #valid_cells+9,%a0
 2017      0000 
 2018 0aee 66F2      		jne .L127
 2019               	.LVL181:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2020               		.loc 1 66 23 is_stmt 0 view .LVU494
 2021               	.LBE57:
 2022               	.LBE56:
 331:test3.c       **** 				valid = true;
 332:test3.c       **** 				update_board(cell-'0', player_x.mark);  // Place 'X' on the board
 333:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 334:test3.c       **** 			} else {
 335:test3.c       **** 				fprintf(player_x.output, "Invalid cell. Try again.\n");
 2023               		.loc 1 335 5 is_stmt 1 view .LVU495
 2024 0af0 2F39 0000 		move.l player_x+18,-(%sp)
 2024      0000 
 2025               		.cfi_def_cfa_offset 52
 2026 0af6 4878 0019 		pea 25.w
 2027               		.cfi_def_cfa_offset 56
 2028 0afa 4878 0001 		pea 1.w
 2029               		.cfi_def_cfa_offset 60
 2030 0afe 4879 0000 		pea .LC18
68K GAS  /tmp/ccmq8Bnl.s 			page 54


 2030      0000 
 2031               		.cfi_def_cfa_offset 64
 2032 0b04 4E92      		jsr (%a2)
 2033               	.LVL182:
 323:test3.c       **** 			//choose a cell
 2034               		.loc 1 323 10 view .LVU496
 2035               		.loc 1 335 5 is_stmt 0 view .LVU497
 2036 0b06 4FEF 0010 		lea (16,%sp),%sp
 2037               		.cfi_def_cfa_offset 48
 325:test3.c       **** 			fprintf(player_x.output,"%s", CURSORVISIBLE);//enable cursor
 2038               		.loc 1 325 4 is_stmt 1 view .LVU498
 2039 0b0a 2F39 0000 		move.l player_x+18,-(%sp)
 2039      0000 
 2040               		.cfi_def_cfa_offset 52
 2041 0b10 4878 0022 		pea 34.w
 2042               		.cfi_def_cfa_offset 56
 2043 0b14 4878 0001 		pea 1.w
 2044               		.cfi_def_cfa_offset 60
 2045 0b18 4879 0000 		pea .LC19
 2045      0000 
 2046               		.cfi_def_cfa_offset 64
 2047 0b1e 4E92      		jsr (%a2)
 2048               	.LVL183:
 326:test3.c       **** 			cell = inbyte(player_x.port);
 2049               		.loc 1 326 4 view .LVU499
 2050 0b20 2F39 0000 		move.l player_x+18,-(%sp)
 2050      0000 
 2051               		.cfi_def_cfa_offset 68
 2052 0b26 4878 0006 		pea 6.w
 2053               		.cfi_def_cfa_offset 72
 2054 0b2a 4878 0001 		pea 1.w
 2055               		.cfi_def_cfa_offset 76
 2056 0b2e 4879 0000 		pea .LC17
 2056      0000 
 2057               		.cfi_def_cfa_offset 80
 2058 0b34 4E92      		jsr (%a2)
 2059               	.LVL184:
 327:test3.c       **** 			fprintf(player_x.output, "Player 'X', cell chosen: \n");
 2060               		.loc 1 327 4 view .LVU500
 327:test3.c       **** 			fprintf(player_x.output, "Player 'X', cell chosen: \n");
 2061               		.loc 1 327 11 is_stmt 0 view .LVU501
 2062 0b36 4FEF 001C 		lea (28,%sp),%sp
 2063               		.cfi_def_cfa_offset 52
 2064 0b3a 2EB9 0000 		move.l player_x+6,(%sp)
 2064      0000 
 2065 0b40 4E94      		jsr (%a4)
 2066               	.LVL185:
 327:test3.c       **** 			fprintf(player_x.output, "Player 'X', cell chosen: \n");
 2067               		.loc 1 327 11 view .LVU502
 2068 0b42 1C00      		move.b %d0,%d6
 328:test3.c       **** 			// Validate the chosen cell
 2069               		.loc 1 328 4 is_stmt 1 view .LVU503
 2070 0b44 2F39 0000 		move.l player_x+18,-(%sp)
 2070      0000 
 2071               		.cfi_def_cfa_offset 56
 2072 0b4a 4878 001A 		pea 26.w
 2073               		.cfi_def_cfa_offset 60
68K GAS  /tmp/ccmq8Bnl.s 			page 55


 2074 0b4e 4878 0001 		pea 1.w
 2075               		.cfi_def_cfa_offset 64
 2076 0b52 4879 0000 		pea .LC20
 2076      0000 
 2077               		.cfi_def_cfa_offset 68
 2078 0b58 4E92      		jsr (%a2)
 2079               	.LVL186:
 330:test3.c       **** 				valid = true;
 2080               		.loc 1 330 4 view .LVU504
 2081               	.LBB59:
  65:test3.c       ****     for (int i = 0; i < 9; i++) {
 2082               		.loc 1 65 6 view .LVU505
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2083               		.loc 1 66 5 view .LVU506
 2084               	.LBB58:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2085               		.loc 1 66 10 view .LVU507
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2086               		.loc 1 66 23 view .LVU508
 2087 0b5a 41F9 0000 		lea valid_cells,%a0
 2087      0000 
 2088 0b60 4FEF 0014 		lea (20,%sp),%sp
 2089               		.cfi_def_cfa_offset 48
 2090 0b64 6000 FF7C 		jra .L127
 2091               	.LVL187:
 2092               	.L126:
  66:test3.c       ****         if (valid_cells[i] == cell) return true;
 2093               		.loc 1 66 23 is_stmt 0 view .LVU509
 2094               	.LBE58:
 2095               	.LBE59:
 330:test3.c       **** 				valid = true;
 2096               		.loc 1 330 8 view .LVU510
 2097 0b68 4886      		ext.w %d6
 330:test3.c       **** 				valid = true;
 2098               		.loc 1 330 8 view .LVU511
 2099 0b6a 3646      		move.w %d6,%a3
 2100               	.LVL188:
 331:test3.c       **** 				update_board(cell-'0', player_x.mark);  // Place 'X' on the board
 2101               		.loc 1 331 5 is_stmt 1 view .LVU512
 332:test3.c       **** 				remove_cell(cell);       // Remove the cell from the available list
 2102               		.loc 1 332 5 view .LVU513
 2103 0b6c 4DEB FFD0 		lea (-48,%a3),%a6
 2104               	.LVL189:
 2105               	.LBB60:
 2106               	.LBI60:
 104:test3.c       ****     int row = cell / 3;
 2107               		.loc 1 104 6 view .LVU514
 2108               	.LBB61:
 105:test3.c       ****     int col = cell % 3;
 2109               		.loc 1 105 5 view .LVU515
 106:test3.c       ****     board[row][col] = mark;
 2110               		.loc 1 106 5 view .LVU516
 107:test3.c       **** }
 2111               		.loc 1 107 5 view .LVU517
 105:test3.c       ****     int col = cell % 3;
 2112               		.loc 1 105 9 is_stmt 0 view .LVU518
 2113 0b70 4878 0003 		pea 3.w
68K GAS  /tmp/ccmq8Bnl.s 			page 56


 2114               		.cfi_def_cfa_offset 52
 2115 0b74 2F0E      		move.l %a6,-(%sp)
 2116               		.cfi_def_cfa_offset 56
 2117 0b76 2044      		move.l %d4,%a0
 2118 0b78 4E90      		jsr (%a0)
 2119               	.LVL190:
 105:test3.c       ****     int col = cell % 3;
 2120               		.loc 1 105 9 view .LVU519
 2121 0b7a 508F      		addq.l #8,%sp
 2122               		.cfi_def_cfa_offset 48
 2123 0b7c 2C00      		move.l %d0,%d6
 2124               	.LVL191:
 106:test3.c       ****     board[row][col] = mark;
 2125               		.loc 1 106 9 view .LVU520
 2126 0b7e 4878 0003 		pea 3.w
 2127               		.cfi_def_cfa_offset 52
 2128 0b82 2F0E      		move.l %a6,-(%sp)
 2129               		.cfi_def_cfa_offset 56
 2130 0b84 2043      		move.l %d3,%a0
 2131 0b86 4E90      		jsr (%a0)
 2132               	.LVL192:
 2133 0b88 508F      		addq.l #8,%sp
 2134               		.cfi_def_cfa_offset 48
 107:test3.c       **** }
 2135               		.loc 1 107 21 view .LVU521
 2136 0b8a 2046      		move.l %d6,%a0
 2137 0b8c D1C6      		add.l %d6,%a0
 2138 0b8e D1C6      		add.l %d6,%a0
 2139 0b90 D1C5      		add.l %d5,%a0
 2140 0b92 1195 0800 		move.b (%a5),(%a0,%d0.l)
 2141               	.LVL193:
 107:test3.c       **** }
 2142               		.loc 1 107 21 view .LVU522
 2143               	.LBE61:
 2144               	.LBE60:
 333:test3.c       **** 			} else {
 2145               		.loc 1 333 5 is_stmt 1 view .LVU523
 2146 0b96 2F0B      		move.l %a3,-(%sp)
 2147               		.cfi_def_cfa_offset 52
 2148 0b98 2042      		move.l %d2,%a0
 2149 0b9a 4E90      		jsr (%a0)
 2150               	.LVL194:
 323:test3.c       **** 			//choose a cell
 2151               		.loc 1 323 10 view .LVU524
 336:test3.c       **** 			}
 337:test3.c       **** 		}
 338:test3.c       **** 
 339:test3.c       **** 		if(check_win(player_x.output,cell-'0',player_x.mark)||valid_cells_length==0) {
 2152               		.loc 1 339 3 view .LVU525
 2153               		.loc 1 339 6 is_stmt 0 view .LVU526
 2154 0b9c 1015      		move.b (%a5),%d0
 2155 0b9e 4880      		ext.w %d0
 2156 0ba0 3040      		move.w %d0,%a0
 2157 0ba2 2F08      		move.l %a0,-(%sp)
 2158               		.cfi_def_cfa_offset 56
 2159 0ba4 2F0E      		move.l %a6,-(%sp)
 2160               		.cfi_def_cfa_offset 60
68K GAS  /tmp/ccmq8Bnl.s 			page 57


 2161 0ba6 2F39 0000 		move.l player_x+18,-(%sp)
 2161      0000 
 2162               		.cfi_def_cfa_offset 64
 2163 0bac 4EBA FAF2 		jsr check_win
 2164               	.LVL195:
 2165               		.loc 1 339 5 view .LVU527
 2166 0bb0 4FEF 0010 		lea (16,%sp),%sp
 2167               		.cfi_def_cfa_offset 48
 2168 0bb4 4A80      		tst.l %d0
 2169 0bb6 6608      		jne .L131
 2170               		.loc 1 339 55 discriminator 1 view .LVU528
 2171 0bb8 4AB9 0000 		tst.l valid_cells_length
 2171      0000 
 2172 0bbe 663E      		jne .L129
 2173               	.L131:
 340:test3.c       **** 			display_board();//clears screen
 2174               		.loc 1 340 4 is_stmt 1 view .LVU529
 2175 0bc0 4EBA F92A 		jsr display_board
 2176               	.LVL196:
 341:test3.c       ****             		V(1);
 2177               		.loc 1 341 15 view .LVU530
 2178 0bc4 4878 0001 		pea 1.w
 2179               		.cfi_def_cfa_offset 52
 2180 0bc8 4EB9 0000 		jsr V
 2180      0000 
 2181               	.LVL197:
 342:test3.c       **** 			P(0);
 2182               		.loc 1 342 4 view .LVU531
 2183 0bce 42A7      		clr.l -(%sp)
 2184               		.cfi_def_cfa_offset 56
 2185 0bd0 2047      		move.l %d7,%a0
 2186 0bd2 4E90      		jsr (%a0)
 2187               	.LVL198:
 343:test3.c       **** 			V(0);
 2188               		.loc 1 343 4 view .LVU532
 2189 0bd4 42A7      		clr.l -(%sp)
 2190               		.cfi_def_cfa_offset 60
 2191 0bd6 4EB9 0000 		jsr V
 2191      0000 
 2192               	.LVL199:
 2193 0bdc 4FEF 000C 		lea (12,%sp),%sp
 2194               		.cfi_def_cfa_offset 48
 2195               	.LVL200:
 2196               		.loc 1 343 4 is_stmt 0 view .LVU533
 2197               	.LBE55:
 315:test3.c       **** 		//fprintf(player_x.output,"Hello player x");
 2198               		.loc 1 315 2 is_stmt 1 view .LVU534
 2199               	.LBB62:
 317:test3.c       **** 		char cell;
 2200               		.loc 1 317 3 view .LVU535
 2201 0be0 42A7      		clr.l -(%sp)
 2202               		.cfi_def_cfa_offset 52
 2203 0be2 2047      		move.l %d7,%a0
 2204 0be4 4E90      		jsr (%a0)
 2205               	.LVL201:
 318:test3.c       **** 		bool valid = false;
 2206               		.loc 1 318 3 view .LVU536
68K GAS  /tmp/ccmq8Bnl.s 			page 58


 319:test3.c       **** 		player_x.is_turn = true;
 2207               		.loc 1 319 3 view .LVU537
 320:test3.c       **** 		player_O.is_turn = false;
 2208               		.loc 1 320 3 view .LVU538
 320:test3.c       **** 		player_O.is_turn = false;
 2209               		.loc 1 320 20 is_stmt 0 view .LVU539
 2210 0be6 7001      		moveq #1,%d0
 2211 0be8 23C0 0000 		move.l %d0,player_x+2
 2211      0000 
 321:test3.c       **** 		display_board(); // Show the updated board
 2212               		.loc 1 321 3 is_stmt 1 view .LVU540
 321:test3.c       **** 		display_board(); // Show the updated board
 2213               		.loc 1 321 20 is_stmt 0 view .LVU541
 2214 0bee 42B9 0000 		clr.l player_O+2
 2214      0000 
 322:test3.c       **** 		while (!valid) {
 2215               		.loc 1 322 3 is_stmt 1 view .LVU542
 2216 0bf4 4EBA F8F6 		jsr display_board
 2217               	.LVL202:
 323:test3.c       **** 			//choose a cell
 2218               		.loc 1 323 3 view .LVU543
 323:test3.c       **** 			//choose a cell
 2219               		.loc 1 323 10 view .LVU544
 2220 0bf8 588F      		addq.l #4,%sp
 2221               		.cfi_def_cfa_offset 48
 2222 0bfa 6000 FE8C 		jra .L133
 2223               	.LVL203:
 2224               	.L129:
 344:test3.c       **** 			//break;
 345:test3.c       **** 		}else
 346:test3.c       **** 		{
 347:test3.c       **** 			//valid = false;
 348:test3.c       **** 			V(0);
 2225               		.loc 1 348 4 view .LVU545
 2226 0bfe 42A7      		clr.l -(%sp)
 2227               		.cfi_def_cfa_offset 52
 2228 0c00 4EB9 0000 		jsr V
 2228      0000 
 2229               	.LVL204:
 2230 0c06 588F      		addq.l #4,%sp
 2231               		.cfi_def_cfa_offset 48
 2232               	.LVL205:
 2233               		.loc 1 348 4 is_stmt 0 view .LVU546
 2234               	.LBE62:
 315:test3.c       **** 		//fprintf(player_x.output,"Hello player x");
 2235               		.loc 1 315 2 is_stmt 1 view .LVU547
 2236               	.LBB63:
 317:test3.c       **** 		char cell;
 2237               		.loc 1 317 3 view .LVU548
 2238 0c08 42A7      		clr.l -(%sp)
 2239               		.cfi_def_cfa_offset 52
 2240 0c0a 2047      		move.l %d7,%a0
 2241 0c0c 4E90      		jsr (%a0)
 2242               	.LVL206:
 318:test3.c       **** 		bool valid = false;
 2243               		.loc 1 318 3 view .LVU549
 319:test3.c       **** 		player_x.is_turn = true;
68K GAS  /tmp/ccmq8Bnl.s 			page 59


 2244               		.loc 1 319 3 view .LVU550
 320:test3.c       **** 		player_O.is_turn = false;
 2245               		.loc 1 320 3 view .LVU551
 320:test3.c       **** 		player_O.is_turn = false;
 2246               		.loc 1 320 20 is_stmt 0 view .LVU552
 2247 0c0e 7001      		moveq #1,%d0
 2248 0c10 23C0 0000 		move.l %d0,player_x+2
 2248      0000 
 321:test3.c       **** 		display_board(); // Show the updated board
 2249               		.loc 1 321 3 is_stmt 1 view .LVU553
 321:test3.c       **** 		display_board(); // Show the updated board
 2250               		.loc 1 321 20 is_stmt 0 view .LVU554
 2251 0c16 42B9 0000 		clr.l player_O+2
 2251      0000 
 322:test3.c       **** 		while (!valid) {
 2252               		.loc 1 322 3 is_stmt 1 view .LVU555
 2253 0c1c 4EBA F8CE 		jsr display_board
 2254               	.LVL207:
 323:test3.c       **** 			//choose a cell
 2255               		.loc 1 323 3 view .LVU556
 323:test3.c       **** 			//choose a cell
 2256               		.loc 1 323 10 view .LVU557
 2257 0c20 588F      		addq.l #4,%sp
 2258               		.cfi_def_cfa_offset 48
 2259 0c22 6000 FE64 		jra .L133
 2260               	.LBE63:
 2261               		.cfi_endproc
 2262               	.LFE13:
 2263               		.size	task_player_x, .-task_player_x
 2264               		.section	.text.startup,"ax",@progbits
 2265               		.align	2
 2266               		.globl	main
 2267               		.type	main, @function
 2268               	main:
 2269               	.LFB14:
 349:test3.c       **** 		}
 350:test3.c       ****                
 351:test3.c       **** }
 352:test3.c       **** }
 353:test3.c       **** 
 354:test3.c       **** 
 355:test3.c       **** int main()
 356:test3.c       **** {
 2270               		.loc 1 356 1 view -0
 2271               		.cfi_startproc
 2272 0000 2F0A      		move.l %a2,-(%sp)
 2273               		.cfi_def_cfa_offset 8
 2274               		.cfi_offset 10, -8
 357:test3.c       **** 	// initialization
 358:test3.c       **** 	init_kernel();
 2275               		.loc 1 358 2 view .LVU559
 2276 0002 4EB9 0000 		jsr init_kernel
 2276      0000 
 2277               	.LVL208:
 359:test3.c       **** 	init_ports();
 2278               		.loc 1 359 2 view .LVU560
 2279 0008 4EB9 0000 		jsr init_ports
68K GAS  /tmp/ccmq8Bnl.s 			page 60


 2279      0000 
 2280               	.LVL209:
 360:test3.c       **** 
 361:test3.c       **** 	
 362:test3.c       **** 	set_task(player_maru);
 2281               		.loc 1 362 2 view .LVU561
 2282 000e 4879 0000 		pea player_maru
 2282      0000 
 2283               		.cfi_def_cfa_offset 12
 2284 0014 45F9 0000 		lea set_task,%a2
 2284      0000 
 2285 001a 4E92      		jsr (%a2)
 2286               	.LVL210:
 363:test3.c       **** 	set_task(task_player_x);
 2287               		.loc 1 363 2 view .LVU562
 2288 001c 4879 0000 		pea task_player_x
 2288      0000 
 2289               		.cfi_def_cfa_offset 16
 2290 0022 4E92      		jsr (%a2)
 2291               	.LVL211:
 364:test3.c       ****     set_task(win_lose_msg);
 2292               		.loc 1 364 5 view .LVU563
 2293 0024 4879 0000 		pea win_lose_msg
 2293      0000 
 2294               		.cfi_def_cfa_offset 20
 2295 002a 4E92      		jsr (%a2)
 2296               	.LVL212:
 365:test3.c       ****     	
 366:test3.c       **** 
 367:test3.c       ****     	begin_sch();
 2297               		.loc 1 367 6 view .LVU564
 2298 002c 4EB9 0000 		jsr begin_sch
 2298      0000 
 2299               	.LVL213:
 368:test3.c       ****     	return 0;
 2300               		.loc 1 368 6 view .LVU565
 369:test3.c       **** 	
 370:test3.c       **** }
 2301               		.loc 1 370 1 is_stmt 0 view .LVU566
 2302 0032 4FEF 000C 		lea (12,%sp),%sp
 2303               		.cfi_def_cfa_offset 8
 2304 0036 7000      		moveq #0,%d0
 2305 0038 245F      		move.l (%sp)+,%a2
 2306 003a 4E75      		rts
 2307               		.cfi_endproc
 2308               	.LFE14:
 2309               		.size	main, .-main
 2310               		.globl	valid_cells_length
 2311               		.data
 2312               		.align	2
 2313               		.type	valid_cells_length, @object
 2314               		.size	valid_cells_length, 4
 2315               	valid_cells_length:
 2316 0000 0000 0009 		.long	9
 2317               		.globl	valid_cells_copy
 2318               		.type	valid_cells_copy, @object
 2319               		.size	valid_cells_copy, 9
68K GAS  /tmp/ccmq8Bnl.s 			page 61


 2320               	valid_cells_copy:
 2321 0004 3031 3233 		.ascii	"012345678"
 2321      3435 3637 
 2321      38
 2322               		.globl	valid_cells
 2323               		.type	valid_cells, @object
 2324               		.size	valid_cells, 9
 2325               	valid_cells:
 2326 000d 3031 3233 		.ascii	"012345678"
 2326      3435 3637 
 2326      38
 2327               		.globl	board
 2328               		.type	board, @object
 2329               		.size	board, 9
 2330               	board:
 2331 0016 3031 32   		.ascii	"012"
 2332 0019 3334 35   		.ascii	"345"
 2333 001c 3637 38   		.ascii	"678"
 2334               		.globl	b_board
 2335               		.section	.bss
 2336               		.align	2
 2337               		.type	b_board, @object
 2338               		.size	b_board, 36
 2339               	b_board:
 2340 0000 0000 0000 		.zero	36
 2340      0000 0000 
 2340      0000 0000 
 2340      0000 0000 
 2340      0000 0000 
 2341               		.globl	win_flg
 2342               		.align	2
 2343               		.type	win_flg, @object
 2344               		.size	win_flg, 4
 2345               	win_flg:
 2346 0024 0000 0000 		.zero	4
 2347               		.globl	player_O
 2348               		.data
 2349 001f 00        		.align	2
 2350               		.type	player_O, @object
 2351               		.size	player_O, 22
 2352               	player_O:
 2353 0020 4F        		.byte	79
 2354 0021 00        		.zero	1
 2355 0022 0000 0001 		.long	1
 2356 0026 0000 0000 		.long	0
 2357 002a 0000 0000 		.long	0
 2358 002e 0000 0000 		.long	0
 2359 0032 0000 0000 		.long	0
 2360               		.globl	player_x
 2361               		.align	2
 2362               		.type	player_x, @object
 2363               		.size	player_x, 22
 2364               	player_x:
 2365 0036 58        		.byte	88
 2366 0037 00        		.zero	1
 2367 0038 0000 0000 		.long	0
 2368 003c 0000 0001 		.long	1
68K GAS  /tmp/ccmq8Bnl.s 			page 62


 2369 0040 0000 0000 		.long	0
 2370 0044 0000 0000 		.long	0
 2371 0048 0000 0000 		.long	0
 2372               		.text
 2373               	.Letext0:
 2374               		.file 2 "/usr/local/lib/gcc/m68k-elf/11.4.0/include/stddef.h"
 2375               		.file 3 "/usr/local/m68k-elf/include/sys/_types.h"
 2376               		.file 4 "/usr/local/m68k-elf/include/sys/reent.h"
 2377               		.file 5 "/usr/local/m68k-elf/include/sys/lock.h"
 2378               		.file 6 "/usr/local/m68k-elf/include/stdio.h"
 2379               		.file 7 "mtk_c.h"
 2380               		.file 8 "<built-in>"
 2381               		.section	.debug_info,"",@progbits
 2382               	.Ldebug_info0:
 2383 0000 0000 12A8 		.long	0x12a8
 2384 0004 0005      		.word	0x5
 2385 0006 01        		.byte	0x1
 2386 0007 04        		.byte	0x4
 2387 0008 0000 0000 		.long	.Ldebug_abbrev0
 2388 000c 2C        		.uleb128 0x2c
 2389 000d 0000 0000 		.long	.LASF149
 2390 0011 1D        		.byte	0x1d
 2391 0012 0000 0000 		.long	.LASF150
 2392 0016 0000 0000 		.long	.LASF151
 2393 001a 0000 0000 		.long	.LLRL57
 2394 001e 0000 0000 		.long	0
 2395 0022 0000 0000 		.long	.Ldebug_line0
 2396 0026 09        		.uleb128 0x9
 2397 0027 01        		.byte	0x1
 2398 0028 06        		.byte	0x6
 2399 0029 0000 0000 		.long	.LASF0
 2400 002d 09        		.uleb128 0x9
 2401 002e 01        		.byte	0x1
 2402 002f 08        		.byte	0x8
 2403 0030 0000 0000 		.long	.LASF1
 2404 0034 09        		.uleb128 0x9
 2405 0035 02        		.byte	0x2
 2406 0036 05        		.byte	0x5
 2407 0037 0000 0000 		.long	.LASF2
 2408 003b 09        		.uleb128 0x9
 2409 003c 02        		.byte	0x2
 2410 003d 07        		.byte	0x7
 2411 003e 0000 0000 		.long	.LASF3
 2412 0042 09        		.uleb128 0x9
 2413 0043 04        		.byte	0x4
 2414 0044 05        		.byte	0x5
 2415 0045 0000 0000 		.long	.LASF4
 2416 0049 09        		.uleb128 0x9
 2417 004a 04        		.byte	0x4
 2418 004b 07        		.byte	0x7
 2419 004c 0000 0000 		.long	.LASF5
 2420 0050 09        		.uleb128 0x9
 2421 0051 08        		.byte	0x8
 2422 0052 05        		.byte	0x5
 2423 0053 0000 0000 		.long	.LASF6
 2424 0057 09        		.uleb128 0x9
 2425 0058 08        		.byte	0x8
68K GAS  /tmp/ccmq8Bnl.s 			page 63


 2426 0059 07        		.byte	0x7
 2427 005a 0000 0000 		.long	.LASF7
 2428 005e 09        		.uleb128 0x9
 2429 005f 0C        		.byte	0xc
 2430 0060 04        		.byte	0x4
 2431 0061 0000 0000 		.long	.LASF8
 2432 0065 20        		.uleb128 0x20
 2433 0066 0000 0000 		.long	.LASF10
 2434 006a 02        		.byte	0x2
 2435 006b 015E      		.word	0x15e
 2436 006d 17        		.byte	0x17
 2437 006e 0000 0072 		.long	0x72
 2438 0072 09        		.uleb128 0x9
 2439 0073 04        		.byte	0x4
 2440 0074 07        		.byte	0x7
 2441 0075 0000 0000 		.long	.LASF9
 2442 0079 0B        		.uleb128 0xb
 2443 007a 0000 0000 		.long	.LASF11
 2444 007e 03        		.byte	0x3
 2445 007f 2E        		.byte	0x2e
 2446 0080 0E        		.byte	0xe
 2447 0081 0000 0042 		.long	0x42
 2448 0085 2D        		.uleb128 0x2d
 2449 0086 04        		.byte	0x4
 2450 0087 05        		.byte	0x5
 2451 0088 696E 7400 		.string	"int"
 2452 008c 0B        		.uleb128 0xb
 2453 008d 0000 0000 		.long	.LASF12
 2454 0091 03        		.byte	0x3
 2455 0092 74        		.byte	0x74
 2456 0093 0E        		.byte	0xe
 2457 0094 0000 0042 		.long	0x42
 2458 0098 0B        		.uleb128 0xb
 2459 0099 0000 0000 		.long	.LASF13
 2460 009d 03        		.byte	0x3
 2461 009e 93        		.byte	0x93
 2462 009f 17        		.byte	0x17
 2463 00a0 0000 0042 		.long	0x42
 2464 00a4 2E        		.uleb128 0x2e
 2465 00a5 04        		.byte	0x4
 2466 00a6 03        		.byte	0x3
 2467 00a7 A5        		.byte	0xa5
 2468 00a8 03        		.byte	0x3
 2469 00a9 0000 00C4 		.long	0xc4
 2470 00ad 21        		.uleb128 0x21
 2471 00ae 0000 0000 		.long	.LASF14
 2472 00b2 A7        		.byte	0xa7
 2473 00b3 0C        		.byte	0xc
 2474 00b4 0000 0065 		.long	0x65
 2475 00b8 21        		.uleb128 0x21
 2476 00b9 0000 0000 		.long	.LASF15
 2477 00bd A8        		.byte	0xa8
 2478 00be 13        		.byte	0x13
 2479 00bf 0000 00C4 		.long	0xc4
 2480 00c3 00        		.byte	0
 2481 00c4 08        		.uleb128 0x8
 2482 00c5 0000 002D 		.long	0x2d
68K GAS  /tmp/ccmq8Bnl.s 			page 64


 2483 00c9 0000 00D4 		.long	0xd4
 2484 00cd 07        		.uleb128 0x7
 2485 00ce 0000 0049 		.long	0x49
 2486 00d2 03        		.byte	0x3
 2487 00d3 00        		.byte	0
 2488 00d4 22        		.uleb128 0x22
 2489 00d5 08        		.byte	0x8
 2490 00d6 03        		.byte	0x3
 2491 00d7 A2        		.byte	0xa2
 2492 00d8 0000 00F7 		.long	0xf7
 2493 00dc 02        		.uleb128 0x2
 2494 00dd 0000 0000 		.long	.LASF16
 2495 00e1 03        		.byte	0x3
 2496 00e2 A4        		.byte	0xa4
 2497 00e3 07        		.byte	0x7
 2498 00e4 0000 0085 		.long	0x85
 2499 00e8 00        		.byte	0
 2500 00e9 02        		.uleb128 0x2
 2501 00ea 0000 0000 		.long	.LASF17
 2502 00ee 03        		.byte	0x3
 2503 00ef A9        		.byte	0xa9
 2504 00f0 05        		.byte	0x5
 2505 00f1 0000 00A4 		.long	0xa4
 2506 00f5 04        		.byte	0x4
 2507 00f6 00        		.byte	0
 2508 00f7 0B        		.uleb128 0xb
 2509 00f8 0000 0000 		.long	.LASF18
 2510 00fc 03        		.byte	0x3
 2511 00fd AA        		.byte	0xaa
 2512 00fe 03        		.byte	0x3
 2513 00ff 0000 00D4 		.long	0xd4
 2514 0103 2F        		.uleb128 0x2f
 2515 0104 04        		.byte	0x4
 2516 0105 0B        		.uleb128 0xb
 2517 0106 0000 0000 		.long	.LASF19
 2518 010a 04        		.byte	0x4
 2519 010b 16        		.byte	0x16
 2520 010c 19        		.byte	0x19
 2521 010d 0000 0049 		.long	0x49
 2522 0111 0B        		.uleb128 0xb
 2523 0112 0000 0000 		.long	.LASF20
 2524 0116 05        		.byte	0x5
 2525 0117 0C        		.byte	0xc
 2526 0118 0D        		.byte	0xd
 2527 0119 0000 0085 		.long	0x85
 2528 011d 0B        		.uleb128 0xb
 2529 011e 0000 0000 		.long	.LASF21
 2530 0122 04        		.byte	0x4
 2531 0123 23        		.byte	0x23
 2532 0124 1B        		.byte	0x1b
 2533 0125 0000 0111 		.long	0x111
 2534 0129 12        		.uleb128 0x12
 2535 012a 0000 0000 		.long	.LASF26
 2536 012e 18        		.byte	0x18
 2537 012f 34        		.byte	0x34
 2538 0130 0000 017F 		.long	0x17f
 2539 0134 02        		.uleb128 0x2
68K GAS  /tmp/ccmq8Bnl.s 			page 65


 2540 0135 0000 0000 		.long	.LASF22
 2541 0139 04        		.byte	0x4
 2542 013a 36        		.byte	0x36
 2543 013b 13        		.byte	0x13
 2544 013c 0000 017F 		.long	0x17f
 2545 0140 00        		.byte	0
 2546 0141 0A        		.uleb128 0xa
 2547 0142 5F6B 00   		.string	"_k"
 2548 0145 37        		.byte	0x37
 2549 0146 07        		.byte	0x7
 2550 0147 0000 0085 		.long	0x85
 2551 014b 04        		.byte	0x4
 2552 014c 02        		.uleb128 0x2
 2553 014d 0000 0000 		.long	.LASF23
 2554 0151 04        		.byte	0x4
 2555 0152 37        		.byte	0x37
 2556 0153 0B        		.byte	0xb
 2557 0154 0000 0085 		.long	0x85
 2558 0158 08        		.byte	0x8
 2559 0159 02        		.uleb128 0x2
 2560 015a 0000 0000 		.long	.LASF24
 2561 015e 04        		.byte	0x4
 2562 015f 37        		.byte	0x37
 2563 0160 14        		.byte	0x14
 2564 0161 0000 0085 		.long	0x85
 2565 0165 0C        		.byte	0xc
 2566 0166 02        		.uleb128 0x2
 2567 0167 0000 0000 		.long	.LASF25
 2568 016b 04        		.byte	0x4
 2569 016c 37        		.byte	0x37
 2570 016d 1B        		.byte	0x1b
 2571 016e 0000 0085 		.long	0x85
 2572 0172 10        		.byte	0x10
 2573 0173 0A        		.uleb128 0xa
 2574 0174 5F78 00   		.string	"_x"
 2575 0177 38        		.byte	0x38
 2576 0178 0B        		.byte	0xb
 2577 0179 0000 0184 		.long	0x184
 2578 017d 14        		.byte	0x14
 2579 017e 00        		.byte	0
 2580 017f 06        		.uleb128 0x6
 2581 0180 0000 0129 		.long	0x129
 2582 0184 08        		.uleb128 0x8
 2583 0185 0000 0105 		.long	0x105
 2584 0189 0000 0194 		.long	0x194
 2585 018d 07        		.uleb128 0x7
 2586 018e 0000 0049 		.long	0x49
 2587 0192 00        		.byte	0
 2588 0193 00        		.byte	0
 2589 0194 12        		.uleb128 0x12
 2590 0195 0000 0000 		.long	.LASF27
 2591 0199 24        		.byte	0x24
 2592 019a 3C        		.byte	0x3c
 2593 019b 0000 0215 		.long	0x215
 2594 019f 02        		.uleb128 0x2
 2595 01a0 0000 0000 		.long	.LASF28
 2596 01a4 04        		.byte	0x4
68K GAS  /tmp/ccmq8Bnl.s 			page 66


 2597 01a5 3E        		.byte	0x3e
 2598 01a6 09        		.byte	0x9
 2599 01a7 0000 0085 		.long	0x85
 2600 01ab 00        		.byte	0
 2601 01ac 02        		.uleb128 0x2
 2602 01ad 0000 0000 		.long	.LASF29
 2603 01b1 04        		.byte	0x4
 2604 01b2 3F        		.byte	0x3f
 2605 01b3 09        		.byte	0x9
 2606 01b4 0000 0085 		.long	0x85
 2607 01b8 04        		.byte	0x4
 2608 01b9 02        		.uleb128 0x2
 2609 01ba 0000 0000 		.long	.LASF30
 2610 01be 04        		.byte	0x4
 2611 01bf 40        		.byte	0x40
 2612 01c0 09        		.byte	0x9
 2613 01c1 0000 0085 		.long	0x85
 2614 01c5 08        		.byte	0x8
 2615 01c6 02        		.uleb128 0x2
 2616 01c7 0000 0000 		.long	.LASF31
 2617 01cb 04        		.byte	0x4
 2618 01cc 41        		.byte	0x41
 2619 01cd 09        		.byte	0x9
 2620 01ce 0000 0085 		.long	0x85
 2621 01d2 0C        		.byte	0xc
 2622 01d3 02        		.uleb128 0x2
 2623 01d4 0000 0000 		.long	.LASF32
 2624 01d8 04        		.byte	0x4
 2625 01d9 42        		.byte	0x42
 2626 01da 09        		.byte	0x9
 2627 01db 0000 0085 		.long	0x85
 2628 01df 10        		.byte	0x10
 2629 01e0 02        		.uleb128 0x2
 2630 01e1 0000 0000 		.long	.LASF33
 2631 01e5 04        		.byte	0x4
 2632 01e6 43        		.byte	0x43
 2633 01e7 09        		.byte	0x9
 2634 01e8 0000 0085 		.long	0x85
 2635 01ec 14        		.byte	0x14
 2636 01ed 02        		.uleb128 0x2
 2637 01ee 0000 0000 		.long	.LASF34
 2638 01f2 04        		.byte	0x4
 2639 01f3 44        		.byte	0x44
 2640 01f4 09        		.byte	0x9
 2641 01f5 0000 0085 		.long	0x85
 2642 01f9 18        		.byte	0x18
 2643 01fa 02        		.uleb128 0x2
 2644 01fb 0000 0000 		.long	.LASF35
 2645 01ff 04        		.byte	0x4
 2646 0200 45        		.byte	0x45
 2647 0201 09        		.byte	0x9
 2648 0202 0000 0085 		.long	0x85
 2649 0206 1C        		.byte	0x1c
 2650 0207 02        		.uleb128 0x2
 2651 0208 0000 0000 		.long	.LASF36
 2652 020c 04        		.byte	0x4
 2653 020d 46        		.byte	0x46
68K GAS  /tmp/ccmq8Bnl.s 			page 67


 2654 020e 09        		.byte	0x9
 2655 020f 0000 0085 		.long	0x85
 2656 0213 20        		.byte	0x20
 2657 0214 00        		.byte	0
 2658 0215 12        		.uleb128 0x12
 2659 0216 0000 0000 		.long	.LASF37
 2660 021a 08        		.byte	0x8
 2661 021b 73        		.byte	0x73
 2662 021c 0000 023B 		.long	0x23b
 2663 0220 02        		.uleb128 0x2
 2664 0221 0000 0000 		.long	.LASF38
 2665 0225 04        		.byte	0x4
 2666 0226 74        		.byte	0x74
 2667 0227 11        		.byte	0x11
 2668 0228 0000 023B 		.long	0x23b
 2669 022c 00        		.byte	0
 2670 022d 02        		.uleb128 0x2
 2671 022e 0000 0000 		.long	.LASF39
 2672 0232 04        		.byte	0x4
 2673 0233 75        		.byte	0x75
 2674 0234 06        		.byte	0x6
 2675 0235 0000 0085 		.long	0x85
 2676 0239 04        		.byte	0x4
 2677 023a 00        		.byte	0
 2678 023b 06        		.uleb128 0x6
 2679 023c 0000 002D 		.long	0x2d
 2680 0240 12        		.uleb128 0x12
 2681 0241 0000 0000 		.long	.LASF40
 2682 0245 68        		.byte	0x68
 2683 0246 98        		.byte	0x98
 2684 0247 0000 0379 		.long	0x379
 2685 024b 0A        		.uleb128 0xa
 2686 024c 5F70 00   		.string	"_p"
 2687 024f 99        		.byte	0x99
 2688 0250 12        		.byte	0x12
 2689 0251 0000 023B 		.long	0x23b
 2690 0255 00        		.byte	0
 2691 0256 0A        		.uleb128 0xa
 2692 0257 5F72 00   		.string	"_r"
 2693 025a 9A        		.byte	0x9a
 2694 025b 07        		.byte	0x7
 2695 025c 0000 0085 		.long	0x85
 2696 0260 04        		.byte	0x4
 2697 0261 0A        		.uleb128 0xa
 2698 0262 5F77 00   		.string	"_w"
 2699 0265 9B        		.byte	0x9b
 2700 0266 07        		.byte	0x7
 2701 0267 0000 0085 		.long	0x85
 2702 026b 08        		.byte	0x8
 2703 026c 02        		.uleb128 0x2
 2704 026d 0000 0000 		.long	.LASF41
 2705 0271 04        		.byte	0x4
 2706 0272 9C        		.byte	0x9c
 2707 0273 09        		.byte	0x9
 2708 0274 0000 0034 		.long	0x34
 2709 0278 0C        		.byte	0xc
 2710 0279 02        		.uleb128 0x2
68K GAS  /tmp/ccmq8Bnl.s 			page 68


 2711 027a 0000 0000 		.long	.LASF42
 2712 027e 04        		.byte	0x4
 2713 027f 9D        		.byte	0x9d
 2714 0280 09        		.byte	0x9
 2715 0281 0000 0034 		.long	0x34
 2716 0285 0E        		.byte	0xe
 2717 0286 0A        		.uleb128 0xa
 2718 0287 5F62 6600 		.string	"_bf"
 2719 028b 9E        		.byte	0x9e
 2720 028c 11        		.byte	0x11
 2721 028d 0000 0215 		.long	0x215
 2722 0291 10        		.byte	0x10
 2723 0292 02        		.uleb128 0x2
 2724 0293 0000 0000 		.long	.LASF43
 2725 0297 04        		.byte	0x4
 2726 0298 9F        		.byte	0x9f
 2727 0299 07        		.byte	0x7
 2728 029a 0000 0085 		.long	0x85
 2729 029e 18        		.byte	0x18
 2730 029f 02        		.uleb128 0x2
 2731 02a0 0000 0000 		.long	.LASF44
 2732 02a4 04        		.byte	0x4
 2733 02a5 A6        		.byte	0xa6
 2734 02a6 0A        		.byte	0xa
 2735 02a7 0000 0103 		.long	0x103
 2736 02ab 1C        		.byte	0x1c
 2737 02ac 02        		.uleb128 0x2
 2738 02ad 0000 0000 		.long	.LASF45
 2739 02b1 04        		.byte	0x4
 2740 02b2 A8        		.byte	0xa8
 2741 02b3 1D        		.byte	0x1d
 2742 02b4 0000 048F 		.long	0x48f
 2743 02b8 20        		.byte	0x20
 2744 02b9 02        		.uleb128 0x2
 2745 02ba 0000 0000 		.long	.LASF46
 2746 02be 04        		.byte	0x4
 2747 02bf AA        		.byte	0xaa
 2748 02c0 1D        		.byte	0x1d
 2749 02c1 0000 04BC 		.long	0x4bc
 2750 02c5 24        		.byte	0x24
 2751 02c6 02        		.uleb128 0x2
 2752 02c7 0000 0000 		.long	.LASF47
 2753 02cb 04        		.byte	0x4
 2754 02cc AD        		.byte	0xad
 2755 02cd 0D        		.byte	0xd
 2756 02ce 0000 04DF 		.long	0x4df
 2757 02d2 28        		.byte	0x28
 2758 02d3 02        		.uleb128 0x2
 2759 02d4 0000 0000 		.long	.LASF48
 2760 02d8 04        		.byte	0x4
 2761 02d9 AE        		.byte	0xae
 2762 02da 09        		.byte	0x9
 2763 02db 0000 04F8 		.long	0x4f8
 2764 02df 2C        		.byte	0x2c
 2765 02e0 0A        		.uleb128 0xa
 2766 02e1 5F75 6200 		.string	"_ub"
 2767 02e5 B1        		.byte	0xb1
68K GAS  /tmp/ccmq8Bnl.s 			page 69


 2768 02e6 11        		.byte	0x11
 2769 02e7 0000 0215 		.long	0x215
 2770 02eb 30        		.byte	0x30
 2771 02ec 0A        		.uleb128 0xa
 2772 02ed 5F75 7000 		.string	"_up"
 2773 02f1 B2        		.byte	0xb2
 2774 02f2 12        		.byte	0x12
 2775 02f3 0000 023B 		.long	0x23b
 2776 02f7 38        		.byte	0x38
 2777 02f8 0A        		.uleb128 0xa
 2778 02f9 5F75 7200 		.string	"_ur"
 2779 02fd B3        		.byte	0xb3
 2780 02fe 07        		.byte	0x7
 2781 02ff 0000 0085 		.long	0x85
 2782 0303 3C        		.byte	0x3c
 2783 0304 02        		.uleb128 0x2
 2784 0305 0000 0000 		.long	.LASF49
 2785 0309 04        		.byte	0x4
 2786 030a B6        		.byte	0xb6
 2787 030b 11        		.byte	0x11
 2788 030c 0000 04FD 		.long	0x4fd
 2789 0310 40        		.byte	0x40
 2790 0311 02        		.uleb128 0x2
 2791 0312 0000 0000 		.long	.LASF50
 2792 0316 04        		.byte	0x4
 2793 0317 B7        		.byte	0xb7
 2794 0318 11        		.byte	0x11
 2795 0319 0000 050D 		.long	0x50d
 2796 031d 43        		.byte	0x43
 2797 031e 0A        		.uleb128 0xa
 2798 031f 5F6C 6200 		.string	"_lb"
 2799 0323 BA        		.byte	0xba
 2800 0324 11        		.byte	0x11
 2801 0325 0000 0215 		.long	0x215
 2802 0329 44        		.byte	0x44
 2803 032a 02        		.uleb128 0x2
 2804 032b 0000 0000 		.long	.LASF51
 2805 032f 04        		.byte	0x4
 2806 0330 BD        		.byte	0xbd
 2807 0331 07        		.byte	0x7
 2808 0332 0000 0085 		.long	0x85
 2809 0336 4C        		.byte	0x4c
 2810 0337 02        		.uleb128 0x2
 2811 0338 0000 0000 		.long	.LASF52
 2812 033c 04        		.byte	0x4
 2813 033d BE        		.byte	0xbe
 2814 033e 0A        		.byte	0xa
 2815 033f 0000 0079 		.long	0x79
 2816 0343 50        		.byte	0x50
 2817 0344 02        		.uleb128 0x2
 2818 0345 0000 0000 		.long	.LASF53
 2819 0349 04        		.byte	0x4
 2820 034a C1        		.byte	0xc1
 2821 034b 12        		.byte	0x12
 2822 034c 0000 0397 		.long	0x397
 2823 0350 54        		.byte	0x54
 2824 0351 02        		.uleb128 0x2
68K GAS  /tmp/ccmq8Bnl.s 			page 70


 2825 0352 0000 0000 		.long	.LASF54
 2826 0356 04        		.byte	0x4
 2827 0357 C5        		.byte	0xc5
 2828 0358 0C        		.byte	0xc
 2829 0359 0000 011D 		.long	0x11d
 2830 035d 58        		.byte	0x58
 2831 035e 02        		.uleb128 0x2
 2832 035f 0000 0000 		.long	.LASF55
 2833 0363 04        		.byte	0x4
 2834 0364 C7        		.byte	0xc7
 2835 0365 0E        		.byte	0xe
 2836 0366 0000 00F7 		.long	0xf7
 2837 036a 5C        		.byte	0x5c
 2838 036b 02        		.uleb128 0x2
 2839 036c 0000 0000 		.long	.LASF56
 2840 0370 04        		.byte	0x4
 2841 0371 C8        		.byte	0xc8
 2842 0372 09        		.byte	0x9
 2843 0373 0000 0085 		.long	0x85
 2844 0377 64        		.byte	0x64
 2845 0378 00        		.byte	0
 2846 0379 13        		.uleb128 0x13
 2847 037a 0000 0098 		.long	0x98
 2848 037e 0000 0397 		.long	0x397
 2849 0382 04        		.uleb128 0x4
 2850 0383 0000 0397 		.long	0x397
 2851 0387 04        		.uleb128 0x4
 2852 0388 0000 0103 		.long	0x103
 2853 038c 04        		.uleb128 0x4
 2854 038d 0000 047E 		.long	0x47e
 2855 0391 04        		.uleb128 0x4
 2856 0392 0000 0085 		.long	0x85
 2857 0396 00        		.byte	0
 2858 0397 06        		.uleb128 0x6
 2859 0398 0000 039C 		.long	0x39c
 2860 039c 30        		.uleb128 0x30
 2861 039d 0000 0000 		.long	.LASF57
 2862 03a1 0116      		.word	0x116
 2863 03a3 04        		.byte	0x4
 2864 03a4 0237      		.word	0x237
 2865 03a6 08        		.byte	0x8
 2866 03a7 0000 047E 		.long	0x47e
 2867 03ab 03        		.uleb128 0x3
 2868 03ac 0000 0000 		.long	.LASF58
 2869 03b0 0239      		.word	0x239
 2870 03b2 07        		.byte	0x7
 2871 03b3 0000 0085 		.long	0x85
 2872 03b7 00        		.byte	0
 2873 03b8 03        		.uleb128 0x3
 2874 03b9 0000 0000 		.long	.LASF59
 2875 03bd 023E      		.word	0x23e
 2876 03bf 0B        		.byte	0xb
 2877 03c0 0000 052A 		.long	0x52a
 2878 03c4 04        		.byte	0x4
 2879 03c5 03        		.uleb128 0x3
 2880 03c6 0000 0000 		.long	.LASF60
 2881 03ca 023E      		.word	0x23e
68K GAS  /tmp/ccmq8Bnl.s 			page 71


 2882 03cc 14        		.byte	0x14
 2883 03cd 0000 052A 		.long	0x52a
 2884 03d1 08        		.byte	0x8
 2885 03d2 03        		.uleb128 0x3
 2886 03d3 0000 0000 		.long	.LASF61
 2887 03d7 023E      		.word	0x23e
 2888 03d9 1E        		.byte	0x1e
 2889 03da 0000 052A 		.long	0x52a
 2890 03de 0C        		.byte	0xc
 2891 03df 03        		.uleb128 0x3
 2892 03e0 0000 0000 		.long	.LASF62
 2893 03e4 0240      		.word	0x240
 2894 03e6 08        		.byte	0x8
 2895 03e7 0000 0085 		.long	0x85
 2896 03eb 10        		.byte	0x10
 2897 03ec 03        		.uleb128 0x3
 2898 03ed 0000 0000 		.long	.LASF63
 2899 03f1 0241      		.word	0x241
 2900 03f3 08        		.byte	0x8
 2901 03f4 0000 06B2 		.long	0x6b2
 2902 03f8 14        		.byte	0x14
 2903 03f9 03        		.uleb128 0x3
 2904 03fa 0000 0000 		.long	.LASF64
 2905 03fe 0246      		.word	0x246
 2906 0400 16        		.byte	0x16
 2907 0401 0000 06C7 		.long	0x6c7
 2908 0405 2E        		.byte	0x2e
 2909 0406 03        		.uleb128 0x3
 2910 0407 0000 0000 		.long	.LASF65
 2911 040b 024C      		.word	0x24c
 2912 040d 0A        		.byte	0xa
 2913 040e 0000 06D7 		.long	0x6d7
 2914 0412 32        		.byte	0x32
 2915 0413 03        		.uleb128 0x3
 2916 0414 0000 0000 		.long	.LASF66
 2917 0418 024F      		.word	0x24f
 2918 041a 13        		.byte	0x13
 2919 041b 0000 017F 		.long	0x17f
 2920 041f 36        		.byte	0x36
 2921 0420 03        		.uleb128 0x3
 2922 0421 0000 0000 		.long	.LASF67
 2923 0425 0250      		.word	0x250
 2924 0427 07        		.byte	0x7
 2925 0428 0000 0085 		.long	0x85
 2926 042c 3A        		.byte	0x3a
 2927 042d 03        		.uleb128 0x3
 2928 042e 0000 0000 		.long	.LASF68
 2929 0432 0251      		.word	0x251
 2930 0434 13        		.byte	0x13
 2931 0435 0000 017F 		.long	0x17f
 2932 0439 3E        		.byte	0x3e
 2933 043a 03        		.uleb128 0x3
 2934 043b 0000 0000 		.long	.LASF69
 2935 043f 0252      		.word	0x252
 2936 0441 14        		.byte	0x14
 2937 0442 0000 06DC 		.long	0x6dc
 2938 0446 42        		.byte	0x42
68K GAS  /tmp/ccmq8Bnl.s 			page 72


 2939 0447 03        		.uleb128 0x3
 2940 0448 0000 0000 		.long	.LASF70
 2941 044c 0255      		.word	0x255
 2942 044e 07        		.byte	0x7
 2943 044f 0000 0085 		.long	0x85
 2944 0453 46        		.byte	0x46
 2945 0454 03        		.uleb128 0x3
 2946 0455 0000 0000 		.long	.LASF71
 2947 0459 0256      		.word	0x256
 2948 045b 09        		.byte	0x9
 2949 045c 0000 047E 		.long	0x47e
 2950 0460 4A        		.byte	0x4a
 2951 0461 03        		.uleb128 0x3
 2952 0462 0000 0000 		.long	.LASF72
 2953 0466 0279      		.word	0x279
 2954 0468 07        		.byte	0x7
 2955 0469 0000 069A 		.long	0x69a
 2956 046d 4E        		.byte	0x4e
 2957 046e 31        		.uleb128 0x31
 2958 046f 0000 0000 		.long	.LASF73
 2959 0473 04        		.byte	0x4
 2960 0474 0281      		.word	0x281
 2961 0476 0B        		.byte	0xb
 2962 0477 0000 06EC 		.long	0x6ec
 2963 047b 0112      		.word	0x112
 2964 047d 00        		.byte	0
 2965 047e 06        		.uleb128 0x6
 2966 047f 0000 0483 		.long	0x483
 2967 0483 09        		.uleb128 0x9
 2968 0484 01        		.byte	0x1
 2969 0485 06        		.byte	0x6
 2970 0486 0000 0000 		.long	.LASF74
 2971 048a 32        		.uleb128 0x32
 2972 048b 0000 0483 		.long	0x483
 2973 048f 06        		.uleb128 0x6
 2974 0490 0000 0379 		.long	0x379
 2975 0494 13        		.uleb128 0x13
 2976 0495 0000 0098 		.long	0x98
 2977 0499 0000 04B2 		.long	0x4b2
 2978 049d 04        		.uleb128 0x4
 2979 049e 0000 0397 		.long	0x397
 2980 04a2 04        		.uleb128 0x4
 2981 04a3 0000 0103 		.long	0x103
 2982 04a7 04        		.uleb128 0x4
 2983 04a8 0000 04B2 		.long	0x4b2
 2984 04ac 04        		.uleb128 0x4
 2985 04ad 0000 0085 		.long	0x85
 2986 04b1 00        		.byte	0
 2987 04b2 06        		.uleb128 0x6
 2988 04b3 0000 048A 		.long	0x48a
 2989 04b7 23        		.uleb128 0x23
 2990 04b8 0000 04B2 		.long	0x4b2
 2991 04bc 06        		.uleb128 0x6
 2992 04bd 0000 0494 		.long	0x494
 2993 04c1 13        		.uleb128 0x13
 2994 04c2 0000 008C 		.long	0x8c
 2995 04c6 0000 04DF 		.long	0x4df
68K GAS  /tmp/ccmq8Bnl.s 			page 73


 2996 04ca 04        		.uleb128 0x4
 2997 04cb 0000 0397 		.long	0x397
 2998 04cf 04        		.uleb128 0x4
 2999 04d0 0000 0103 		.long	0x103
 3000 04d4 04        		.uleb128 0x4
 3001 04d5 0000 008C 		.long	0x8c
 3002 04d9 04        		.uleb128 0x4
 3003 04da 0000 0085 		.long	0x85
 3004 04de 00        		.byte	0
 3005 04df 06        		.uleb128 0x6
 3006 04e0 0000 04C1 		.long	0x4c1
 3007 04e4 13        		.uleb128 0x13
 3008 04e5 0000 0085 		.long	0x85
 3009 04e9 0000 04F8 		.long	0x4f8
 3010 04ed 04        		.uleb128 0x4
 3011 04ee 0000 0397 		.long	0x397
 3012 04f2 04        		.uleb128 0x4
 3013 04f3 0000 0103 		.long	0x103
 3014 04f7 00        		.byte	0
 3015 04f8 06        		.uleb128 0x6
 3016 04f9 0000 04E4 		.long	0x4e4
 3017 04fd 08        		.uleb128 0x8
 3018 04fe 0000 002D 		.long	0x2d
 3019 0502 0000 050D 		.long	0x50d
 3020 0506 07        		.uleb128 0x7
 3021 0507 0000 0049 		.long	0x49
 3022 050b 02        		.byte	0x2
 3023 050c 00        		.byte	0
 3024 050d 08        		.uleb128 0x8
 3025 050e 0000 002D 		.long	0x2d
 3026 0512 0000 051D 		.long	0x51d
 3027 0516 07        		.uleb128 0x7
 3028 0517 0000 0049 		.long	0x49
 3029 051b 00        		.byte	0
 3030 051c 00        		.byte	0
 3031 051d 20        		.uleb128 0x20
 3032 051e 0000 0000 		.long	.LASF75
 3033 0522 04        		.byte	0x4
 3034 0523 010D      		.word	0x10d
 3035 0525 1A        		.byte	0x1a
 3036 0526 0000 0240 		.long	0x240
 3037 052a 06        		.uleb128 0x6
 3038 052b 0000 051D 		.long	0x51d
 3039 052f 33        		.uleb128 0x33
 3040 0530 0000 0000 		.long	.LASF76
 3041 0534 0E        		.byte	0xe
 3042 0535 04        		.byte	0x4
 3043 0536 0131      		.word	0x131
 3044 0538 08        		.byte	0x8
 3045 0539 0000 0565 		.long	0x565
 3046 053d 03        		.uleb128 0x3
 3047 053e 0000 0000 		.long	.LASF77
 3048 0542 0132      		.word	0x132
 3049 0544 12        		.byte	0x12
 3050 0545 0000 0565 		.long	0x565
 3051 0549 00        		.byte	0
 3052 054a 03        		.uleb128 0x3
68K GAS  /tmp/ccmq8Bnl.s 			page 74


 3053 054b 0000 0000 		.long	.LASF78
 3054 054f 0133      		.word	0x133
 3055 0551 12        		.byte	0x12
 3056 0552 0000 0565 		.long	0x565
 3057 0556 06        		.byte	0x6
 3058 0557 03        		.uleb128 0x3
 3059 0558 0000 0000 		.long	.LASF79
 3060 055c 0134      		.word	0x134
 3061 055e 12        		.byte	0x12
 3062 055f 0000 003B 		.long	0x3b
 3063 0563 0C        		.byte	0xc
 3064 0564 00        		.byte	0
 3065 0565 08        		.uleb128 0x8
 3066 0566 0000 003B 		.long	0x3b
 3067 056a 0000 0575 		.long	0x575
 3068 056e 07        		.uleb128 0x7
 3069 056f 0000 0049 		.long	0x49
 3070 0573 02        		.byte	0x2
 3071 0574 00        		.byte	0
 3072 0575 34        		.uleb128 0x34
 3073 0576 C4        		.byte	0xc4
 3074 0577 04        		.byte	0x4
 3075 0578 025A      		.word	0x25a
 3076 057a 07        		.byte	0x7
 3077 057b 0000 066A 		.long	0x66a
 3078 057f 03        		.uleb128 0x3
 3079 0580 0000 0000 		.long	.LASF80
 3080 0584 025F      		.word	0x25f
 3081 0586 12        		.byte	0x12
 3082 0587 0000 047E 		.long	0x47e
 3083 058b 00        		.byte	0
 3084 058c 03        		.uleb128 0x3
 3085 058d 0000 0000 		.long	.LASF81
 3086 0591 0260      		.word	0x260
 3087 0593 10        		.byte	0x10
 3088 0594 0000 066A 		.long	0x66a
 3089 0598 04        		.byte	0x4
 3090 0599 03        		.uleb128 0x3
 3091 059a 0000 0000 		.long	.LASF82
 3092 059e 0261      		.word	0x261
 3093 05a0 17        		.byte	0x17
 3094 05a1 0000 0194 		.long	0x194
 3095 05a5 1E        		.byte	0x1e
 3096 05a6 03        		.uleb128 0x3
 3097 05a7 0000 0000 		.long	.LASF83
 3098 05ab 0262      		.word	0x262
 3099 05ad 0F        		.byte	0xf
 3100 05ae 0000 0085 		.long	0x85
 3101 05b2 42        		.byte	0x42
 3102 05b3 03        		.uleb128 0x3
 3103 05b4 0000 0000 		.long	.LASF84
 3104 05b8 0263      		.word	0x263
 3105 05ba 2C        		.byte	0x2c
 3106 05bb 0000 0057 		.long	0x57
 3107 05bf 46        		.byte	0x46
 3108 05c0 03        		.uleb128 0x3
 3109 05c1 0000 0000 		.long	.LASF85
68K GAS  /tmp/ccmq8Bnl.s 			page 75


 3110 05c5 0264      		.word	0x264
 3111 05c7 1A        		.byte	0x1a
 3112 05c8 0000 052F 		.long	0x52f
 3113 05cc 4E        		.byte	0x4e
 3114 05cd 03        		.uleb128 0x3
 3115 05ce 0000 0000 		.long	.LASF86
 3116 05d2 0265      		.word	0x265
 3117 05d4 16        		.byte	0x16
 3118 05d5 0000 00F7 		.long	0xf7
 3119 05d9 5C        		.byte	0x5c
 3120 05da 03        		.uleb128 0x3
 3121 05db 0000 0000 		.long	.LASF87
 3122 05df 0266      		.word	0x266
 3123 05e1 16        		.byte	0x16
 3124 05e2 0000 00F7 		.long	0xf7
 3125 05e6 64        		.byte	0x64
 3126 05e7 03        		.uleb128 0x3
 3127 05e8 0000 0000 		.long	.LASF88
 3128 05ec 0267      		.word	0x267
 3129 05ee 16        		.byte	0x16
 3130 05ef 0000 00F7 		.long	0xf7
 3131 05f3 6C        		.byte	0x6c
 3132 05f4 03        		.uleb128 0x3
 3133 05f5 0000 0000 		.long	.LASF89
 3134 05f9 0268      		.word	0x268
 3135 05fb 10        		.byte	0x10
 3136 05fc 0000 067A 		.long	0x67a
 3137 0600 74        		.byte	0x74
 3138 0601 03        		.uleb128 0x3
 3139 0602 0000 0000 		.long	.LASF90
 3140 0606 0269      		.word	0x269
 3141 0608 10        		.byte	0x10
 3142 0609 0000 068A 		.long	0x68a
 3143 060d 7C        		.byte	0x7c
 3144 060e 03        		.uleb128 0x3
 3145 060f 0000 0000 		.long	.LASF91
 3146 0613 026A      		.word	0x26a
 3147 0615 0F        		.byte	0xf
 3148 0616 0000 0085 		.long	0x85
 3149 061a 94        		.byte	0x94
 3150 061b 03        		.uleb128 0x3
 3151 061c 0000 0000 		.long	.LASF92
 3152 0620 026B      		.word	0x26b
 3153 0622 16        		.byte	0x16
 3154 0623 0000 00F7 		.long	0xf7
 3155 0627 98        		.byte	0x98
 3156 0628 03        		.uleb128 0x3
 3157 0629 0000 0000 		.long	.LASF93
 3158 062d 026C      		.word	0x26c
 3159 062f 16        		.byte	0x16
 3160 0630 0000 00F7 		.long	0xf7
 3161 0634 A0        		.byte	0xa0
 3162 0635 03        		.uleb128 0x3
 3163 0636 0000 0000 		.long	.LASF94
 3164 063a 026D      		.word	0x26d
 3165 063c 16        		.byte	0x16
 3166 063d 0000 00F7 		.long	0xf7
68K GAS  /tmp/ccmq8Bnl.s 			page 76


 3167 0641 A8        		.byte	0xa8
 3168 0642 03        		.uleb128 0x3
 3169 0643 0000 0000 		.long	.LASF95
 3170 0647 026E      		.word	0x26e
 3171 0649 16        		.byte	0x16
 3172 064a 0000 00F7 		.long	0xf7
 3173 064e B0        		.byte	0xb0
 3174 064f 03        		.uleb128 0x3
 3175 0650 0000 0000 		.long	.LASF96
 3176 0654 026F      		.word	0x26f
 3177 0656 16        		.byte	0x16
 3178 0657 0000 00F7 		.long	0xf7
 3179 065b B8        		.byte	0xb8
 3180 065c 03        		.uleb128 0x3
 3181 065d 0000 0000 		.long	.LASF97
 3182 0661 0270      		.word	0x270
 3183 0663 08        		.byte	0x8
 3184 0664 0000 0085 		.long	0x85
 3185 0668 C0        		.byte	0xc0
 3186 0669 00        		.byte	0
 3187 066a 08        		.uleb128 0x8
 3188 066b 0000 0483 		.long	0x483
 3189 066f 0000 067A 		.long	0x67a
 3190 0673 07        		.uleb128 0x7
 3191 0674 0000 0049 		.long	0x49
 3192 0678 19        		.byte	0x19
 3193 0679 00        		.byte	0
 3194 067a 08        		.uleb128 0x8
 3195 067b 0000 0483 		.long	0x483
 3196 067f 0000 068A 		.long	0x68a
 3197 0683 07        		.uleb128 0x7
 3198 0684 0000 0049 		.long	0x49
 3199 0688 07        		.byte	0x7
 3200 0689 00        		.byte	0
 3201 068a 08        		.uleb128 0x8
 3202 068b 0000 0483 		.long	0x483
 3203 068f 0000 069A 		.long	0x69a
 3204 0693 07        		.uleb128 0x7
 3205 0694 0000 0049 		.long	0x49
 3206 0698 17        		.byte	0x17
 3207 0699 00        		.byte	0
 3208 069a 35        		.uleb128 0x35
 3209 069b C4        		.byte	0xc4
 3210 069c 04        		.byte	0x4
 3211 069d 0258      		.word	0x258
 3212 069f 03        		.byte	0x3
 3213 06a0 0000 06B2 		.long	0x6b2
 3214 06a4 36        		.uleb128 0x36
 3215 06a5 0000 0000 		.long	.LASF57
 3216 06a9 04        		.byte	0x4
 3217 06aa 0271      		.word	0x271
 3218 06ac 0B        		.byte	0xb
 3219 06ad 0000 0575 		.long	0x575
 3220 06b1 00        		.byte	0
 3221 06b2 08        		.uleb128 0x8
 3222 06b3 0000 0483 		.long	0x483
 3223 06b7 0000 06C2 		.long	0x6c2
68K GAS  /tmp/ccmq8Bnl.s 			page 77


 3224 06bb 07        		.uleb128 0x7
 3225 06bc 0000 0049 		.long	0x49
 3226 06c0 18        		.byte	0x18
 3227 06c1 00        		.byte	0
 3228 06c2 37        		.uleb128 0x37
 3229 06c3 0000 0000 		.long	.LASF152
 3230 06c7 06        		.uleb128 0x6
 3231 06c8 0000 06C2 		.long	0x6c2
 3232 06cc 24        		.uleb128 0x24
 3233 06cd 0000 06D7 		.long	0x6d7
 3234 06d1 04        		.uleb128 0x4
 3235 06d2 0000 0397 		.long	0x397
 3236 06d6 00        		.byte	0
 3237 06d7 06        		.uleb128 0x6
 3238 06d8 0000 06CC 		.long	0x6cc
 3239 06dc 06        		.uleb128 0x6
 3240 06dd 0000 017F 		.long	0x17f
 3241 06e1 24        		.uleb128 0x24
 3242 06e2 0000 06EC 		.long	0x6ec
 3243 06e6 04        		.uleb128 0x4
 3244 06e7 0000 0085 		.long	0x85
 3245 06eb 00        		.byte	0
 3246 06ec 06        		.uleb128 0x6
 3247 06ed 0000 06F1 		.long	0x6f1
 3248 06f1 06        		.uleb128 0x6
 3249 06f2 0000 06E1 		.long	0x6e1
 3250 06f6 0B        		.uleb128 0xb
 3251 06f7 0000 0000 		.long	.LASF98
 3252 06fb 06        		.byte	0x6
 3253 06fc 42        		.byte	0x42
 3254 06fd 10        		.byte	0x10
 3255 06fe 0000 051D 		.long	0x51d
 3256 0702 38        		.uleb128 0x38
 3257 0703 0000 0709 		.long	0x709
 3258 0707 14        		.uleb128 0x14
 3259 0708 00        		.byte	0
 3260 0709 06        		.uleb128 0x6
 3261 070a 0000 0702 		.long	0x702
 3262 070e 22        		.uleb128 0x22
 3263 070f 16        		.byte	0x16
 3264 0710 01        		.byte	0x1
 3265 0711 13        		.byte	0x13
 3266 0712 0000 0765 		.long	0x765
 3267 0716 02        		.uleb128 0x2
 3268 0717 0000 0000 		.long	.LASF99
 3269 071b 01        		.byte	0x1
 3270 071c 14        		.byte	0x14
 3271 071d 07        		.byte	0x7
 3272 071e 0000 0483 		.long	0x483
 3273 0722 00        		.byte	0
 3274 0723 02        		.uleb128 0x2
 3275 0724 0000 0000 		.long	.LASF100
 3276 0728 01        		.byte	0x1
 3277 0729 15        		.byte	0x15
 3278 072a 06        		.byte	0x6
 3279 072b 0000 0085 		.long	0x85
 3280 072f 02        		.byte	0x2
68K GAS  /tmp/ccmq8Bnl.s 			page 78


 3281 0730 02        		.uleb128 0x2
 3282 0731 0000 0000 		.long	.LASF101
 3283 0735 01        		.byte	0x1
 3284 0736 16        		.byte	0x16
 3285 0737 06        		.byte	0x6
 3286 0738 0000 0085 		.long	0x85
 3287 073c 06        		.byte	0x6
 3288 073d 02        		.uleb128 0x2
 3289 073e 0000 0000 		.long	.LASF102
 3290 0742 01        		.byte	0x1
 3291 0743 17        		.byte	0x17
 3292 0744 06        		.byte	0x6
 3293 0745 0000 0085 		.long	0x85
 3294 0749 0A        		.byte	0xa
 3295 074a 02        		.uleb128 0x2
 3296 074b 0000 0000 		.long	.LASF103
 3297 074f 01        		.byte	0x1
 3298 0750 18        		.byte	0x18
 3299 0751 08        		.byte	0x8
 3300 0752 0000 0765 		.long	0x765
 3301 0756 0E        		.byte	0xe
 3302 0757 02        		.uleb128 0x2
 3303 0758 0000 0000 		.long	.LASF104
 3304 075c 01        		.byte	0x1
 3305 075d 19        		.byte	0x19
 3306 075e 08        		.byte	0x8
 3307 075f 0000 0765 		.long	0x765
 3308 0763 12        		.byte	0x12
 3309 0764 00        		.byte	0
 3310 0765 06        		.uleb128 0x6
 3311 0766 0000 06F6 		.long	0x6f6
 3312 076a 23        		.uleb128 0x23
 3313 076b 0000 0765 		.long	0x765
 3314 076f 0B        		.uleb128 0xb
 3315 0770 0000 0000 		.long	.LASF105
 3316 0774 01        		.byte	0x1
 3317 0775 1A        		.byte	0x1a
 3318 0776 02        		.byte	0x2
 3319 0777 0000 070E 		.long	0x70e
 3320 077b 0D        		.uleb128 0xd
 3321 077c 0000 0000 		.long	.LASF106
 3322 0780 1D        		.byte	0x1d
 3323 0781 08        		.byte	0x8
 3324 0782 0000 076F 		.long	0x76f
 3325 0786 05        		.uleb128 0x5
 3326 0787 03        		.byte	0x3
 3327 0788 0000 0000 		.long	player_x
 3328 078c 0D        		.uleb128 0xd
 3329 078d 0000 0000 		.long	.LASF107
 3330 0791 1E        		.byte	0x1e
 3331 0792 08        		.byte	0x8
 3332 0793 0000 076F 		.long	0x76f
 3333 0797 05        		.uleb128 0x5
 3334 0798 03        		.byte	0x3
 3335 0799 0000 0000 		.long	player_O
 3336 079d 0D        		.uleb128 0xd
 3337 079e 0000 0000 		.long	.LASF108
68K GAS  /tmp/ccmq8Bnl.s 			page 79


 3338 07a2 20        		.byte	0x20
 3339 07a3 05        		.byte	0x5
 3340 07a4 0000 0085 		.long	0x85
 3341 07a8 05        		.uleb128 0x5
 3342 07a9 03        		.byte	0x3
 3343 07aa 0000 0000 		.long	win_flg
 3344 07ae 08        		.uleb128 0x8
 3345 07af 0000 0085 		.long	0x85
 3346 07b3 0000 07C4 		.long	0x7c4
 3347 07b7 07        		.uleb128 0x7
 3348 07b8 0000 0049 		.long	0x49
 3349 07bc 02        		.byte	0x2
 3350 07bd 07        		.uleb128 0x7
 3351 07be 0000 0049 		.long	0x49
 3352 07c2 02        		.byte	0x2
 3353 07c3 00        		.byte	0
 3354 07c4 0D        		.uleb128 0xd
 3355 07c5 0000 0000 		.long	.LASF109
 3356 07c9 36        		.byte	0x36
 3357 07ca 05        		.byte	0x5
 3358 07cb 0000 07AE 		.long	0x7ae
 3359 07cf 05        		.uleb128 0x5
 3360 07d0 03        		.byte	0x3
 3361 07d1 0000 0000 		.long	b_board
 3362 07d5 08        		.uleb128 0x8
 3363 07d6 0000 0483 		.long	0x483
 3364 07da 0000 07EB 		.long	0x7eb
 3365 07de 07        		.uleb128 0x7
 3366 07df 0000 0049 		.long	0x49
 3367 07e3 02        		.byte	0x2
 3368 07e4 07        		.uleb128 0x7
 3369 07e5 0000 0049 		.long	0x49
 3370 07e9 02        		.byte	0x2
 3371 07ea 00        		.byte	0
 3372 07eb 0D        		.uleb128 0xd
 3373 07ec 0000 0000 		.long	.LASF110
 3374 07f0 37        		.byte	0x37
 3375 07f1 06        		.byte	0x6
 3376 07f2 0000 07D5 		.long	0x7d5
 3377 07f6 05        		.uleb128 0x5
 3378 07f7 03        		.byte	0x3
 3379 07f8 0000 0000 		.long	board
 3380 07fc 08        		.uleb128 0x8
 3381 07fd 0000 0483 		.long	0x483
 3382 0801 0000 080C 		.long	0x80c
 3383 0805 07        		.uleb128 0x7
 3384 0806 0000 0049 		.long	0x49
 3385 080a 08        		.byte	0x8
 3386 080b 00        		.byte	0
 3387 080c 0D        		.uleb128 0xd
 3388 080d 0000 0000 		.long	.LASF111
 3389 0811 3C        		.byte	0x3c
 3390 0812 06        		.byte	0x6
 3391 0813 0000 07FC 		.long	0x7fc
 3392 0817 05        		.uleb128 0x5
 3393 0818 03        		.byte	0x3
 3394 0819 0000 0000 		.long	valid_cells
68K GAS  /tmp/ccmq8Bnl.s 			page 80


 3395 081d 0D        		.uleb128 0xd
 3396 081e 0000 0000 		.long	.LASF112
 3397 0822 3D        		.byte	0x3d
 3398 0823 06        		.byte	0x6
 3399 0824 0000 07FC 		.long	0x7fc
 3400 0828 05        		.uleb128 0x5
 3401 0829 03        		.byte	0x3
 3402 082a 0000 0000 		.long	valid_cells_copy
 3403 082e 0D        		.uleb128 0xd
 3404 082f 0000 0000 		.long	.LASF113
 3405 0833 3E        		.byte	0x3e
 3406 0834 05        		.byte	0x5
 3407 0835 0000 0085 		.long	0x85
 3408 0839 05        		.uleb128 0x5
 3409 083a 03        		.byte	0x3
 3410 083b 0000 0000 		.long	valid_cells_length
 3411 083f 25        		.uleb128 0x25
 3412 0840 0000 0000 		.long	.LASF114
 3413 0844 3E        		.byte	0x3e
 3414 0845 0000 084B 		.long	0x84b
 3415 0849 14        		.uleb128 0x14
 3416 084a 00        		.byte	0
 3417 084b 39        		.uleb128 0x39
 3418 084c 0000 0000 		.long	.LASF133
 3419 0850 07        		.byte	0x7
 3420 0851 3C        		.byte	0x3c
 3421 0852 06        		.byte	0x6
 3422 0853 0000 085D 		.long	0x85d
 3423 0857 04        		.uleb128 0x4
 3424 0858 0000 0709 		.long	0x709
 3425 085c 00        		.byte	0
 3426 085d 25        		.uleb128 0x25
 3427 085e 0000 0000 		.long	.LASF115
 3428 0862 3B        		.byte	0x3b
 3429 0863 0000 0869 		.long	0x869
 3430 0867 14        		.uleb128 0x14
 3431 0868 00        		.byte	0
 3432 0869 26        		.uleb128 0x26
 3433 086a 5600      		.string	"V"
 3434 086c 5A        		.byte	0x5a
 3435 086d 0000 0085 		.long	0x85
 3436 0871 0000 087B 		.long	0x87b
 3437 0875 04        		.uleb128 0x4
 3438 0876 0000 0085 		.long	0x85
 3439 087a 00        		.byte	0
 3440 087b 27        		.uleb128 0x27
 3441 087c 0000 0000 		.long	.LASF116
 3442 0880 01        		.byte	0x1
 3443 0881 06        		.byte	0x6
 3444 0882 0D        		.byte	0xd
 3445 0883 0000 0483 		.long	0x483
 3446 0887 0000 0891 		.long	0x891
 3447 088b 04        		.uleb128 0x4
 3448 088c 0000 0085 		.long	0x85
 3449 0890 00        		.byte	0
 3450 0891 26        		.uleb128 0x26
 3451 0892 5000      		.string	"P"
68K GAS  /tmp/ccmq8Bnl.s 			page 81


 3452 0894 59        		.byte	0x59
 3453 0895 0000 0085 		.long	0x85
 3454 0899 0000 08A3 		.long	0x8a3
 3455 089d 04        		.uleb128 0x4
 3456 089e 0000 0085 		.long	0x85
 3457 08a2 00        		.byte	0
 3458 08a3 27        		.uleb128 0x27
 3459 08a4 0000 0000 		.long	.LASF117
 3460 08a8 06        		.byte	0x6
 3461 08a9 CA        		.byte	0xca
 3462 08aa 05        		.byte	0x5
 3463 08ab 0000 0085 		.long	0x85
 3464 08af 0000 08BF 		.long	0x8bf
 3465 08b3 04        		.uleb128 0x4
 3466 08b4 0000 076A 		.long	0x76a
 3467 08b8 04        		.uleb128 0x4
 3468 08b9 0000 04B7 		.long	0x4b7
 3469 08bd 14        		.uleb128 0x14
 3470 08be 00        		.byte	0
 3471 08bf 3A        		.uleb128 0x3a
 3472 08c0 0000 0000 		.long	.LASF118
 3473 08c4 06        		.byte	0x6
 3474 08c5 0159      		.word	0x159
 3475 08c7 08        		.byte	0x8
 3476 08c8 0000 0765 		.long	0x765
 3477 08cc 0000 08DB 		.long	0x8db
 3478 08d0 04        		.uleb128 0x4
 3479 08d1 0000 0085 		.long	0x85
 3480 08d5 04        		.uleb128 0x4
 3481 08d6 0000 04B2 		.long	0x4b2
 3482 08da 00        		.byte	0
 3483 08db 3B        		.uleb128 0x3b
 3484 08dc 0000 0000 		.long	.LASF130
 3485 08e0 01        		.byte	0x1
 3486 08e1 0163      		.word	0x163
 3487 08e3 05        		.byte	0x5
 3488 08e4 0000 0085 		.long	0x85
 3489 08e8 0000 0000 		.long	.LFB14
 3490 08ec 0000 003C 		.long	.LFE14-.LFB14
 3491 08f0 01        		.uleb128 0x1
 3492 08f1 9C        		.byte	0x9c
 3493 08f2 0000 092D 		.long	0x92d
 3494 08f6 01        		.uleb128 0x1
 3495 08f7 0000 0000 		.long	.LVL208
 3496 08fb 0000 085D 		.long	0x85d
 3497 08ff 01        		.uleb128 0x1
 3498 0900 0000 0000 		.long	.LVL209
 3499 0904 0000 1182 		.long	0x1182
 3500 0908 01        		.uleb128 0x1
 3501 0909 0000 0000 		.long	.LVL210
 3502 090d 0000 084B 		.long	0x84b
 3503 0911 01        		.uleb128 0x1
 3504 0912 0000 0000 		.long	.LVL211
 3505 0916 0000 084B 		.long	0x84b
 3506 091a 01        		.uleb128 0x1
 3507 091b 0000 0000 		.long	.LVL212
 3508 091f 0000 084B 		.long	0x84b
68K GAS  /tmp/ccmq8Bnl.s 			page 82


 3509 0923 01        		.uleb128 0x1
 3510 0924 0000 0000 		.long	.LVL213
 3511 0928 0000 083F 		.long	0x83f
 3512 092c 00        		.byte	0
 3513 092d 28        		.uleb128 0x28
 3514 092e 0000 0000 		.long	.LASF122
 3515 0932 0138      		.word	0x138
 3516 0934 0000 0000 		.long	.LFB13
 3517 0938 0000 01EC 		.long	.LFE13-.LFB13
 3518 093c 01        		.uleb128 0x1
 3519 093d 9C        		.byte	0x9c
 3520 093e 0000 0ACF 		.long	0xacf
 3521 0942 10        		.uleb128 0x10
 3522 0943 0000 0000 		.long	.LLRL47
 3523 0947 15        		.uleb128 0x15
 3524 0948 0000 0000 		.long	.LASF119
 3525 094c 013E      		.word	0x13e
 3526 094e 0000 0483 		.long	0x483
 3527 0952 0000 0000 		.long	.LLST48
 3528 0956 0000 0000 		.long	.LVUS48
 3529 095a 15        		.uleb128 0x15
 3530 095b 0000 0000 		.long	.LASF120
 3531 095f 013F      		.word	0x13f
 3532 0961 0000 0ACF 		.long	0xacf
 3533 0965 0000 0000 		.long	.LLST49
 3534 0969 0000 0000 		.long	.LVUS49
 3535 096d 3C        		.uleb128 0x3c
 3536 096e 0000 115A 		.long	0x115a
 3537 0972 0000 0000 		.long	.LBI56
 3538 0976 01        		.byte	.LVU486
 3539 0977 0000 0000 		.long	.LLRL50
 3540 097b 01        		.byte	0x1
 3541 097c 014A      		.word	0x14a
 3542 097e 08        		.byte	0x8
 3543 097f 0000 09A8 		.long	0x9a8
 3544 0983 0F        		.uleb128 0xf
 3545 0984 0000 116B 		.long	0x116b
 3546 0988 0000 0000 		.long	.LLST51
 3547 098c 0000 0000 		.long	.LVUS51
 3548 0990 1B        		.uleb128 0x1b
 3549 0991 0000 1176 		.long	0x1176
 3550 0995 0000 0000 		.long	.LLRL50
 3551 0999 0C        		.uleb128 0xc
 3552 099a 0000 1177 		.long	0x1177
 3553 099e 0000 0000 		.long	.LLST52
 3554 09a2 0000 0000 		.long	.LVUS52
 3555 09a6 00        		.byte	0
 3556 09a7 00        		.byte	0
 3557 09a8 3D        		.uleb128 0x3d
 3558 09a9 0000 105C 		.long	0x105c
 3559 09ad 0000 0000 		.long	.LBI60
 3560 09b1 00        		.byte	.LVU514
 3561 09b2 0000 0000 		.long	.LBB60
 3562 09b6 0000 0026 		.long	.LBE60-.LBB60
 3563 09ba 01        		.byte	0x1
 3564 09bb 014C      		.word	0x14c
 3565 09bd 05        		.byte	0x5
68K GAS  /tmp/ccmq8Bnl.s 			page 83


 3566 09be 0000 0A07 		.long	0xa07
 3567 09c2 0F        		.uleb128 0xf
 3568 09c3 0000 1074 		.long	0x1074
 3569 09c7 0000 0000 		.long	.LLST53
 3570 09cb 0000 0000 		.long	.LVUS53
 3571 09cf 0F        		.uleb128 0xf
 3572 09d0 0000 1069 		.long	0x1069
 3573 09d4 0000 0000 		.long	.LLST54
 3574 09d8 0000 0000 		.long	.LVUS54
 3575 09dc 0C        		.uleb128 0xc
 3576 09dd 0000 107F 		.long	0x107f
 3577 09e1 0000 0000 		.long	.LLST55
 3578 09e5 0000 0000 		.long	.LVUS55
 3579 09e9 0C        		.uleb128 0xc
 3580 09ea 0000 108A 		.long	0x108a
 3581 09ee 0000 0000 		.long	.LLST56
 3582 09f2 0000 0000 		.long	.LVUS56
 3583 09f6 16        		.uleb128 0x16
 3584 09f7 0000 0000 		.long	.LVL190
 3585 09fb 02        		.uleb128 0x2
 3586 09fc 74        		.byte	0x74
 3587 09fd 00        		.sleb128 0
 3588 09fe 16        		.uleb128 0x16
 3589 09ff 0000 0000 		.long	.LVL192
 3590 0a03 02        		.uleb128 0x2
 3591 0a04 73        		.byte	0x73
 3592 0a05 00        		.sleb128 0
 3593 0a06 00        		.byte	0
 3594 0a07 01        		.uleb128 0x1
 3595 0a08 0000 0000 		.long	.LVL172
 3596 0a0c 0000 0891 		.long	0x891
 3597 0a10 01        		.uleb128 0x1
 3598 0a11 0000 0000 		.long	.LVL173
 3599 0a15 0000 0F93 		.long	0xf93
 3600 0a19 01        		.uleb128 0x1
 3601 0a1a 0000 0000 		.long	.LVL174
 3602 0a1e 0000 1275 		.long	0x1275
 3603 0a22 01        		.uleb128 0x1
 3604 0a23 0000 0000 		.long	.LVL175
 3605 0a27 0000 1275 		.long	0x1275
 3606 0a2b 01        		.uleb128 0x1
 3607 0a2c 0000 0000 		.long	.LVL176
 3608 0a30 0000 087B 		.long	0x87b
 3609 0a34 01        		.uleb128 0x1
 3610 0a35 0000 0000 		.long	.LVL178
 3611 0a39 0000 1275 		.long	0x1275
 3612 0a3d 01        		.uleb128 0x1
 3613 0a3e 0000 0000 		.long	.LVL182
 3614 0a42 0000 1275 		.long	0x1275
 3615 0a46 01        		.uleb128 0x1
 3616 0a47 0000 0000 		.long	.LVL183
 3617 0a4b 0000 1275 		.long	0x1275
 3618 0a4f 01        		.uleb128 0x1
 3619 0a50 0000 0000 		.long	.LVL184
 3620 0a54 0000 1275 		.long	0x1275
 3621 0a58 01        		.uleb128 0x1
 3622 0a59 0000 0000 		.long	.LVL185
68K GAS  /tmp/ccmq8Bnl.s 			page 84


 3623 0a5d 0000 087B 		.long	0x87b
 3624 0a61 01        		.uleb128 0x1
 3625 0a62 0000 0000 		.long	.LVL186
 3626 0a66 0000 1275 		.long	0x1275
 3627 0a6a 01        		.uleb128 0x1
 3628 0a6b 0000 0000 		.long	.LVL194
 3629 0a6f 0000 10FC 		.long	0x10fc
 3630 0a73 01        		.uleb128 0x1
 3631 0a74 0000 0000 		.long	.LVL195
 3632 0a78 0000 0D9C 		.long	0xd9c
 3633 0a7c 01        		.uleb128 0x1
 3634 0a7d 0000 0000 		.long	.LVL196
 3635 0a81 0000 0F93 		.long	0xf93
 3636 0a85 01        		.uleb128 0x1
 3637 0a86 0000 0000 		.long	.LVL197
 3638 0a8a 0000 0869 		.long	0x869
 3639 0a8e 01        		.uleb128 0x1
 3640 0a8f 0000 0000 		.long	.LVL198
 3641 0a93 0000 0891 		.long	0x891
 3642 0a97 01        		.uleb128 0x1
 3643 0a98 0000 0000 		.long	.LVL199
 3644 0a9c 0000 0869 		.long	0x869
 3645 0aa0 01        		.uleb128 0x1
 3646 0aa1 0000 0000 		.long	.LVL201
 3647 0aa5 0000 0891 		.long	0x891
 3648 0aa9 01        		.uleb128 0x1
 3649 0aaa 0000 0000 		.long	.LVL202
 3650 0aae 0000 0F93 		.long	0xf93
 3651 0ab2 01        		.uleb128 0x1
 3652 0ab3 0000 0000 		.long	.LVL204
 3653 0ab7 0000 0869 		.long	0x869
 3654 0abb 01        		.uleb128 0x1
 3655 0abc 0000 0000 		.long	.LVL206
 3656 0ac0 0000 0891 		.long	0x891
 3657 0ac4 01        		.uleb128 0x1
 3658 0ac5 0000 0000 		.long	.LVL207
 3659 0ac9 0000 0F93 		.long	0xf93
 3660 0acd 00        		.byte	0
 3661 0ace 00        		.byte	0
 3662 0acf 09        		.uleb128 0x9
 3663 0ad0 01        		.byte	0x1
 3664 0ad1 02        		.byte	0x2
 3665 0ad2 0000 0000 		.long	.LASF121
 3666 0ad6 28        		.uleb128 0x28
 3667 0ad7 0000 0000 		.long	.LASF123
 3668 0adb 0107      		.word	0x107
 3669 0add 0000 0000 		.long	.LFB12
 3670 0ae1 0000 026C 		.long	.LFE12-.LFB12
 3671 0ae5 01        		.uleb128 0x1
 3672 0ae6 9C        		.byte	0x9c
 3673 0ae7 0000 0C0F 		.long	0xc0f
 3674 0aeb 0E        		.uleb128 0xe
 3675 0aec 0000 0000 		.long	.LLRL10
 3676 0af0 0000 0B6C 		.long	0xb6c
 3677 0af4 15        		.uleb128 0x15
 3678 0af5 0000 0000 		.long	.LASF124
 3679 0af9 0126      		.word	0x126
68K GAS  /tmp/ccmq8Bnl.s 			page 85


 3680 0afb 0000 0483 		.long	0x483
 3681 0aff 0000 0000 		.long	.LLST11
 3682 0b03 0000 0000 		.long	.LVUS11
 3683 0b07 15        		.uleb128 0x15
 3684 0b08 0000 0000 		.long	.LASF125
 3685 0b0c 0127      		.word	0x127
 3686 0b0e 0000 0483 		.long	0x483
 3687 0b12 0000 0000 		.long	.LLST12
 3688 0b16 0000 0000 		.long	.LVUS12
 3689 0b1a 01        		.uleb128 0x1
 3690 0b1b 0000 0000 		.long	.LVL48
 3691 0b1f 0000 087B 		.long	0x87b
 3692 0b23 01        		.uleb128 0x1
 3693 0b24 0000 0000 		.long	.LVL50
 3694 0b28 0000 087B 		.long	0x87b
 3695 0b2c 01        		.uleb128 0x1
 3696 0b2d 0000 0000 		.long	.LVL51
 3697 0b31 0000 1096 		.long	0x1096
 3698 0b35 01        		.uleb128 0x1
 3699 0b36 0000 0000 		.long	.LVL52
 3700 0b3a 0000 0869 		.long	0x869
 3701 0b3e 01        		.uleb128 0x1
 3702 0b3f 0000 0000 		.long	.LVL53
 3703 0b43 0000 0891 		.long	0x891
 3704 0b47 01        		.uleb128 0x1
 3705 0b48 0000 0000 		.long	.LVL54
 3706 0b4c 0000 087B 		.long	0x87b
 3707 0b50 01        		.uleb128 0x1
 3708 0b51 0000 0000 		.long	.LVL56
 3709 0b55 0000 087B 		.long	0x87b
 3710 0b59 01        		.uleb128 0x1
 3711 0b5a 0000 0000 		.long	.LVL57
 3712 0b5e 0000 127E 		.long	0x127e
 3713 0b62 01        		.uleb128 0x1
 3714 0b63 0000 0000 		.long	.LVL58
 3715 0b67 0000 127E 		.long	0x127e
 3716 0b6b 00        		.byte	0
 3717 0b6c 01        		.uleb128 0x1
 3718 0b6d 0000 0000 		.long	.LVL40
 3719 0b71 0000 0891 		.long	0x891
 3720 0b75 01        		.uleb128 0x1
 3721 0b76 0000 0000 		.long	.LVL41
 3722 0b7a 0000 0891 		.long	0x891
 3723 0b7e 01        		.uleb128 0x1
 3724 0b7f 0000 0000 		.long	.LVL42
 3725 0b83 0000 127E 		.long	0x127e
 3726 0b87 01        		.uleb128 0x1
 3727 0b88 0000 0000 		.long	.LVL43
 3728 0b8c 0000 127E 		.long	0x127e
 3729 0b90 01        		.uleb128 0x1
 3730 0b91 0000 0000 		.long	.LVL44
 3731 0b95 0000 1275 		.long	0x1275
 3732 0b99 01        		.uleb128 0x1
 3733 0b9a 0000 0000 		.long	.LVL45
 3734 0b9e 0000 1275 		.long	0x1275
 3735 0ba2 01        		.uleb128 0x1
 3736 0ba3 0000 0000 		.long	.LVL46
68K GAS  /tmp/ccmq8Bnl.s 			page 86


 3737 0ba7 0000 1275 		.long	0x1275
 3738 0bab 01        		.uleb128 0x1
 3739 0bac 0000 0000 		.long	.LVL47
 3740 0bb0 0000 1275 		.long	0x1275
 3741 0bb4 01        		.uleb128 0x1
 3742 0bb5 0000 0000 		.long	.LVL60
 3743 0bb9 0000 127E 		.long	0x127e
 3744 0bbd 01        		.uleb128 0x1
 3745 0bbe 0000 0000 		.long	.LVL61
 3746 0bc2 0000 127E 		.long	0x127e
 3747 0bc6 01        		.uleb128 0x1
 3748 0bc7 0000 0000 		.long	.LVL62
 3749 0bcb 0000 1275 		.long	0x1275
 3750 0bcf 01        		.uleb128 0x1
 3751 0bd0 0000 0000 		.long	.LVL63
 3752 0bd4 0000 1275 		.long	0x1275
 3753 0bd8 01        		.uleb128 0x1
 3754 0bd9 0000 0000 		.long	.LVL64
 3755 0bdd 0000 1275 		.long	0x1275
 3756 0be1 01        		.uleb128 0x1
 3757 0be2 0000 0000 		.long	.LVL65
 3758 0be6 0000 1275 		.long	0x1275
 3759 0bea 01        		.uleb128 0x1
 3760 0beb 0000 0000 		.long	.LVL66
 3761 0bef 0000 127E 		.long	0x127e
 3762 0bf3 01        		.uleb128 0x1
 3763 0bf4 0000 0000 		.long	.LVL67
 3764 0bf8 0000 127E 		.long	0x127e
 3765 0bfc 01        		.uleb128 0x1
 3766 0bfd 0000 0000 		.long	.LVL68
 3767 0c01 0000 1275 		.long	0x1275
 3768 0c05 01        		.uleb128 0x1
 3769 0c06 0000 0000 		.long	.LVL69
 3770 0c0a 0000 1275 		.long	0x1275
 3771 0c0e 00        		.byte	0
 3772 0c0f 17        		.uleb128 0x17
 3773 0c10 0000 0000 		.long	.LASF126
 3774 0c14 DE        		.byte	0xde
 3775 0c15 0000 0000 		.long	.LFB11
 3776 0c19 0000 01B4 		.long	.LFE11-.LFB11
 3777 0c1d 01        		.uleb128 0x1
 3778 0c1e 9C        		.byte	0x9c
 3779 0c1f 0000 0D9C 		.long	0xd9c
 3780 0c23 10        		.uleb128 0x10
 3781 0c24 0000 0000 		.long	.LLRL37
 3782 0c28 11        		.uleb128 0x11
 3783 0c29 0000 0000 		.long	.LASF119
 3784 0c2d E5        		.byte	0xe5
 3785 0c2e 08        		.byte	0x8
 3786 0c2f 0000 0483 		.long	0x483
 3787 0c33 0000 0000 		.long	.LLST38
 3788 0c37 0000 0000 		.long	.LVUS38
 3789 0c3b 11        		.uleb128 0x11
 3790 0c3c 0000 0000 		.long	.LASF120
 3791 0c40 E6        		.byte	0xe6
 3792 0c41 08        		.byte	0x8
 3793 0c42 0000 0ACF 		.long	0xacf
68K GAS  /tmp/ccmq8Bnl.s 			page 87


 3794 0c46 0000 0000 		.long	.LLST39
 3795 0c4a 0000 0000 		.long	.LVUS39
 3796 0c4e 3E        		.uleb128 0x3e
 3797 0c4f 0000 115A 		.long	0x115a
 3798 0c53 0000 0000 		.long	.LBI47
 3799 0c57 01        		.byte	.LVU398
 3800 0c58 0000 0000 		.long	.LLRL40
 3801 0c5c 01        		.byte	0x1
 3802 0c5d F0        		.byte	0xf0
 3803 0c5e 08        		.byte	0x8
 3804 0c5f 0000 0C88 		.long	0xc88
 3805 0c63 0F        		.uleb128 0xf
 3806 0c64 0000 116B 		.long	0x116b
 3807 0c68 0000 0000 		.long	.LLST41
 3808 0c6c 0000 0000 		.long	.LVUS41
 3809 0c70 1B        		.uleb128 0x1b
 3810 0c71 0000 1176 		.long	0x1176
 3811 0c75 0000 0000 		.long	.LLRL40
 3812 0c79 0C        		.uleb128 0xc
 3813 0c7a 0000 1177 		.long	0x1177
 3814 0c7e 0000 0000 		.long	.LLST42
 3815 0c82 0000 0000 		.long	.LVUS42
 3816 0c86 00        		.byte	0
 3817 0c87 00        		.byte	0
 3818 0c88 3F        		.uleb128 0x3f
 3819 0c89 0000 105C 		.long	0x105c
 3820 0c8d 0000 0000 		.long	.LBI51
 3821 0c91 00        		.byte	.LVU424
 3822 0c92 0000 0000 		.long	.LBB51
 3823 0c96 0000 0026 		.long	.LBE51-.LBB51
 3824 0c9a 01        		.byte	0x1
 3825 0c9b F2        		.byte	0xf2
 3826 0c9c 05        		.byte	0x5
 3827 0c9d 0000 0CE6 		.long	0xce6
 3828 0ca1 0F        		.uleb128 0xf
 3829 0ca2 0000 1074 		.long	0x1074
 3830 0ca6 0000 0000 		.long	.LLST43
 3831 0caa 0000 0000 		.long	.LVUS43
 3832 0cae 0F        		.uleb128 0xf
 3833 0caf 0000 1069 		.long	0x1069
 3834 0cb3 0000 0000 		.long	.LLST44
 3835 0cb7 0000 0000 		.long	.LVUS44
 3836 0cbb 0C        		.uleb128 0xc
 3837 0cbc 0000 107F 		.long	0x107f
 3838 0cc0 0000 0000 		.long	.LLST45
 3839 0cc4 0000 0000 		.long	.LVUS45
 3840 0cc8 0C        		.uleb128 0xc
 3841 0cc9 0000 108A 		.long	0x108a
 3842 0ccd 0000 0000 		.long	.LLST46
 3843 0cd1 0000 0000 		.long	.LVUS46
 3844 0cd5 16        		.uleb128 0x16
 3845 0cd6 0000 0000 		.long	.LVL155
 3846 0cda 02        		.uleb128 0x2
 3847 0cdb 74        		.byte	0x74
 3848 0cdc 00        		.sleb128 0
 3849 0cdd 16        		.uleb128 0x16
 3850 0cde 0000 0000 		.long	.LVL156
68K GAS  /tmp/ccmq8Bnl.s 			page 88


 3851 0ce2 02        		.uleb128 0x2
 3852 0ce3 73        		.byte	0x73
 3853 0ce4 00        		.sleb128 0
 3854 0ce5 00        		.byte	0
 3855 0ce6 01        		.uleb128 0x1
 3856 0ce7 0000 0000 		.long	.LVL140
 3857 0ceb 0000 0891 		.long	0x891
 3858 0cef 01        		.uleb128 0x1
 3859 0cf0 0000 0000 		.long	.LVL141
 3860 0cf4 0000 0F93 		.long	0xf93
 3861 0cf8 01        		.uleb128 0x1
 3862 0cf9 0000 0000 		.long	.LVL142
 3863 0cfd 0000 1275 		.long	0x1275
 3864 0d01 01        		.uleb128 0x1
 3865 0d02 0000 0000 		.long	.LVL143
 3866 0d06 0000 1275 		.long	0x1275
 3867 0d0a 01        		.uleb128 0x1
 3868 0d0b 0000 0000 		.long	.LVL144
 3869 0d0f 0000 087B 		.long	0x87b
 3870 0d13 01        		.uleb128 0x1
 3871 0d14 0000 0000 		.long	.LVL148
 3872 0d18 0000 1275 		.long	0x1275
 3873 0d1c 01        		.uleb128 0x1
 3874 0d1d 0000 0000 		.long	.LVL149
 3875 0d21 0000 1275 		.long	0x1275
 3876 0d25 01        		.uleb128 0x1
 3877 0d26 0000 0000 		.long	.LVL150
 3878 0d2a 0000 1275 		.long	0x1275
 3879 0d2e 01        		.uleb128 0x1
 3880 0d2f 0000 0000 		.long	.LVL151
 3881 0d33 0000 087B 		.long	0x87b
 3882 0d37 01        		.uleb128 0x1
 3883 0d38 0000 0000 		.long	.LVL158
 3884 0d3c 0000 10FC 		.long	0x10fc
 3885 0d40 01        		.uleb128 0x1
 3886 0d41 0000 0000 		.long	.LVL159
 3887 0d45 0000 0D9C 		.long	0xd9c
 3888 0d49 01        		.uleb128 0x1
 3889 0d4a 0000 0000 		.long	.LVL160
 3890 0d4e 0000 0F93 		.long	0xf93
 3891 0d52 01        		.uleb128 0x1
 3892 0d53 0000 0000 		.long	.LVL161
 3893 0d57 0000 0869 		.long	0x869
 3894 0d5b 01        		.uleb128 0x1
 3895 0d5c 0000 0000 		.long	.LVL162
 3896 0d60 0000 0891 		.long	0x891
 3897 0d64 01        		.uleb128 0x1
 3898 0d65 0000 0000 		.long	.LVL163
 3899 0d69 0000 0869 		.long	0x869
 3900 0d6d 01        		.uleb128 0x1
 3901 0d6e 0000 0000 		.long	.LVL165
 3902 0d72 0000 0891 		.long	0x891
 3903 0d76 01        		.uleb128 0x1
 3904 0d77 0000 0000 		.long	.LVL166
 3905 0d7b 0000 0F93 		.long	0xf93
 3906 0d7f 01        		.uleb128 0x1
 3907 0d80 0000 0000 		.long	.LVL168
68K GAS  /tmp/ccmq8Bnl.s 			page 89


 3908 0d84 0000 0869 		.long	0x869
 3909 0d88 01        		.uleb128 0x1
 3910 0d89 0000 0000 		.long	.LVL170
 3911 0d8d 0000 0891 		.long	0x891
 3912 0d91 01        		.uleb128 0x1
 3913 0d92 0000 0000 		.long	.LVL171
 3914 0d96 0000 0F93 		.long	0xf93
 3915 0d9a 00        		.byte	0
 3916 0d9b 00        		.byte	0
 3917 0d9c 40        		.uleb128 0x40
 3918 0d9d 0000 0000 		.long	.LASF153
 3919 0da1 01        		.byte	0x1
 3920 0da2 9C        		.byte	0x9c
 3921 0da3 05        		.byte	0x5
 3922 0da4 0000 0085 		.long	0x85
 3923 0da8 0000 0000 		.long	.LFB10
 3924 0dac 0000 01E6 		.long	.LFE10-.LFB10
 3925 0db0 01        		.uleb128 0x1
 3926 0db1 9C        		.byte	0x9c
 3927 0db2 0000 0F2A 		.long	0xf2a
 3928 0db6 18        		.uleb128 0x18
 3929 0db7 0000 0000 		.long	.LASF127
 3930 0dbb 9C        		.byte	0x9c
 3931 0dbc 15        		.byte	0x15
 3932 0dbd 0000 0765 		.long	0x765
 3933 0dc1 02        		.uleb128 0x2
 3934 0dc2 91        		.byte	0x91
 3935 0dc3 00        		.sleb128 0
 3936 0dc4 41        		.uleb128 0x41
 3937 0dc5 696E 00   		.string	"in"
 3938 0dc8 01        		.byte	0x1
 3939 0dc9 9C        		.byte	0x9c
 3940 0dca 20        		.byte	0x20
 3941 0dcb 0000 0085 		.long	0x85
 3942 0dcf 02        		.uleb128 0x2
 3943 0dd0 91        		.byte	0x91
 3944 0dd1 04        		.sleb128 4
 3945 0dd2 18        		.uleb128 0x18
 3946 0dd3 0000 0000 		.long	.LASF99
 3947 0dd7 9C        		.byte	0x9c
 3948 0dd8 28        		.byte	0x28
 3949 0dd9 0000 0483 		.long	0x483
 3950 0ddd 02        		.uleb128 0x2
 3951 0dde 91        		.byte	0x91
 3952 0ddf 0B        		.sleb128 11
 3953 0de0 05        		.uleb128 0x5
 3954 0de1 726F 7700 		.string	"row"
 3955 0de5 9D        		.byte	0x9d
 3956 0de6 06        		.byte	0x6
 3957 0de7 0000 0085 		.long	0x85
 3958 0deb 0000 0000 		.long	.LLST21
 3959 0def 0000 0000 		.long	.LVUS21
 3960 0df3 05        		.uleb128 0x5
 3961 0df4 636F 6C00 		.string	"col"
 3962 0df8 9E        		.byte	0x9e
 3963 0df9 06        		.byte	0x6
 3964 0dfa 0000 0085 		.long	0x85
68K GAS  /tmp/ccmq8Bnl.s 			page 90


 3965 0dfe 0000 0000 		.long	.LLST22
 3966 0e02 0000 0000 		.long	.LVUS22
 3967 0e06 05        		.uleb128 0x5
 3968 0e07 7769 6E00 		.string	"win"
 3969 0e0b 9F        		.byte	0x9f
 3970 0e0c 06        		.byte	0x6
 3971 0e0d 0000 0F2A 		.long	0xf2a
 3972 0e11 0000 0000 		.long	.LLST23
 3973 0e15 0000 0000 		.long	.LVUS23
 3974 0e19 0E        		.uleb128 0xe
 3975 0e1a 0000 0000 		.long	.LLRL24
 3976 0e1e 0000 0E54 		.long	0xe54
 3977 0e22 05        		.uleb128 0x5
 3978 0e23 6900      		.string	"i"
 3979 0e25 A3        		.byte	0xa3
 3980 0e26 0B        		.byte	0xb
 3981 0e27 0000 0085 		.long	0x85
 3982 0e2b 0000 0000 		.long	.LLST25
 3983 0e2f 0000 0000 		.long	.LVUS25
 3984 0e33 10        		.uleb128 0x10
 3985 0e34 0000 0000 		.long	.LLRL26
 3986 0e38 05        		.uleb128 0x5
 3987 0e39 6A00      		.string	"j"
 3988 0e3b A4        		.byte	0xa4
 3989 0e3c 0C        		.byte	0xc
 3990 0e3d 0000 0085 		.long	0x85
 3991 0e41 0000 0000 		.long	.LLST27
 3992 0e45 0000 0000 		.long	.LVUS27
 3993 0e49 01        		.uleb128 0x1
 3994 0e4a 0000 0000 		.long	.LVL106
 3995 0e4e 0000 127E 		.long	0x127e
 3996 0e52 00        		.byte	0
 3997 0e53 00        		.byte	0
 3998 0e54 0E        		.uleb128 0xe
 3999 0e55 0000 0000 		.long	.LLRL28
 4000 0e59 0000 0E6F 		.long	0xe6f
 4001 0e5d 05        		.uleb128 0x5
 4002 0e5e 6900      		.string	"i"
 4003 0e60 A8        		.byte	0xa8
 4004 0e61 0B        		.byte	0xb
 4005 0e62 0000 0085 		.long	0x85
 4006 0e66 0000 0000 		.long	.LLST29
 4007 0e6a 0000 0000 		.long	.LVUS29
 4008 0e6e 00        		.byte	0
 4009 0e6f 0E        		.uleb128 0xe
 4010 0e70 0000 0000 		.long	.LLRL30
 4011 0e74 0000 0E8A 		.long	0xe8a
 4012 0e78 05        		.uleb128 0x5
 4013 0e79 6900      		.string	"i"
 4014 0e7b BA        		.byte	0xba
 4015 0e7c 0B        		.byte	0xb
 4016 0e7d 0000 0085 		.long	0x85
 4017 0e81 0000 0000 		.long	.LLST31
 4018 0e85 0000 0000 		.long	.LVUS31
 4019 0e89 00        		.byte	0
 4020 0e8a 1C        		.uleb128 0x1c
 4021 0e8b 0000 0000 		.long	.LBB43
68K GAS  /tmp/ccmq8Bnl.s 			page 91


 4022 0e8f 0000 0048 		.long	.LBE43-.LBB43
 4023 0e93 0000 0EC7 		.long	0xec7
 4024 0e97 11        		.uleb128 0x11
 4025 0e98 0000 0000 		.long	.LASF128
 4026 0e9c C4        		.byte	0xc4
 4027 0e9d 07        		.byte	0x7
 4028 0e9e 0000 0085 		.long	0x85
 4029 0ea2 0000 0000 		.long	.LLST35
 4030 0ea6 0000 0000 		.long	.LVUS35
 4031 0eaa 11        		.uleb128 0x11
 4032 0eab 0000 0000 		.long	.LASF129
 4033 0eaf C5        		.byte	0xc5
 4034 0eb0 07        		.byte	0x7
 4035 0eb1 0000 0085 		.long	0x85
 4036 0eb5 0000 0000 		.long	.LLST36
 4037 0eb9 0000 0000 		.long	.LVUS36
 4038 0ebd 01        		.uleb128 0x1
 4039 0ebe 0000 0000 		.long	.LVL132
 4040 0ec2 0000 1275 		.long	0x1275
 4041 0ec6 00        		.byte	0
 4042 0ec7 0E        		.uleb128 0xe
 4043 0ec8 0000 0000 		.long	.LLRL32
 4044 0ecc 0000 0EED 		.long	0xeed
 4045 0ed0 05        		.uleb128 0x5
 4046 0ed1 7769 6E00 		.string	"win"
 4047 0ed5 CB        		.byte	0xcb
 4048 0ed6 07        		.byte	0x7
 4049 0ed7 0000 0085 		.long	0x85
 4050 0edb 0000 0000 		.long	.LLST33
 4051 0edf 0000 0000 		.long	.LVUS33
 4052 0ee3 01        		.uleb128 0x1
 4053 0ee4 0000 0000 		.long	.LVL138
 4054 0ee8 0000 1275 		.long	0x1275
 4055 0eec 00        		.byte	0
 4056 0eed 1C        		.uleb128 0x1c
 4057 0eee 0000 0000 		.long	.LBB42
 4058 0ef2 0000 0016 		.long	.LBE42-.LBB42
 4059 0ef6 0000 0F0E 		.long	0xf0e
 4060 0efa 05        		.uleb128 0x5
 4061 0efb 7769 6E00 		.string	"win"
 4062 0eff D2        		.byte	0xd2
 4063 0f00 07        		.byte	0x7
 4064 0f01 0000 0085 		.long	0x85
 4065 0f05 0000 0000 		.long	.LLST34
 4066 0f09 0000 0000 		.long	.LVUS34
 4067 0f0d 00        		.byte	0
 4068 0f0e 01        		.uleb128 0x1
 4069 0f0f 0000 0000 		.long	.LVL98
 4070 0f13 0000 1287 		.long	0x1287
 4071 0f17 01        		.uleb128 0x1
 4072 0f18 0000 0000 		.long	.LVL100
 4073 0f1c 0000 1290 		.long	0x1290
 4074 0f20 01        		.uleb128 0x1
 4075 0f21 0000 0000 		.long	.LVL103
 4076 0f25 0000 0F3A 		.long	0xf3a
 4077 0f29 00        		.byte	0
 4078 0f2a 08        		.uleb128 0x8
68K GAS  /tmp/ccmq8Bnl.s 			page 92


 4079 0f2b 0000 0085 		.long	0x85
 4080 0f2f 0000 0F3A 		.long	0xf3a
 4081 0f33 07        		.uleb128 0x7
 4082 0f34 0000 0049 		.long	0x49
 4083 0f38 01        		.byte	0x1
 4084 0f39 00        		.byte	0
 4085 0f3a 29        		.uleb128 0x29
 4086 0f3b 0000 0000 		.long	.LASF131
 4087 0f3f 8F        		.byte	0x8f
 4088 0f40 0000 0000 		.long	.LFB9
 4089 0f44 0000 004C 		.long	.LFE9-.LFB9
 4090 0f48 01        		.uleb128 0x1
 4091 0f49 9C        		.byte	0x9c
 4092 0f4a 0000 0F93 		.long	0xf93
 4093 0f4e 18        		.uleb128 0x18
 4094 0f4f 0000 0000 		.long	.LASF99
 4095 0f53 8F        		.byte	0x8f
 4096 0f54 18        		.byte	0x18
 4097 0f55 0000 0483 		.long	0x483
 4098 0f59 02        		.uleb128 0x2
 4099 0f5a 91        		.byte	0x91
 4100 0f5b 03        		.sleb128 3
 4101 0f5c 19        		.uleb128 0x19
 4102 0f5d 0000 0000 		.long	.LBB31
 4103 0f61 0000 0046 		.long	.LBE31-.LBB31
 4104 0f65 05        		.uleb128 0x5
 4105 0f66 6900      		.string	"i"
 4106 0f68 90        		.byte	0x90
 4107 0f69 0B        		.byte	0xb
 4108 0f6a 0000 0085 		.long	0x85
 4109 0f6e 0000 0000 		.long	.LLST19
 4110 0f72 0000 0000 		.long	.LVUS19
 4111 0f76 19        		.uleb128 0x19
 4112 0f77 0000 0000 		.long	.LBB32
 4113 0f7b 0000 002C 		.long	.LBE32-.LBB32
 4114 0f7f 05        		.uleb128 0x5
 4115 0f80 6A00      		.string	"j"
 4116 0f82 91        		.byte	0x91
 4117 0f83 0C        		.byte	0xc
 4118 0f84 0000 0085 		.long	0x85
 4119 0f88 0000 0000 		.long	.LLST20
 4120 0f8c 0000 0000 		.long	.LVUS20
 4121 0f90 00        		.byte	0
 4122 0f91 00        		.byte	0
 4123 0f92 00        		.byte	0
 4124 0f93 17        		.uleb128 0x17
 4125 0f94 0000 0000 		.long	.LASF132
 4126 0f98 6E        		.byte	0x6e
 4127 0f99 0000 0000 		.long	.LFB8
 4128 0f9d 0000 0168 		.long	.LFE8-.LFB8
 4129 0fa1 01        		.uleb128 0x1
 4130 0fa2 9C        		.byte	0x9c
 4131 0fa3 0000 105C 		.long	0x105c
 4132 0fa7 0E        		.uleb128 0xe
 4133 0fa8 0000 0000 		.long	.LLRL15
 4134 0fac 0000 1037 		.long	0x1037
 4135 0fb0 05        		.uleb128 0x5
68K GAS  /tmp/ccmq8Bnl.s 			page 93


 4136 0fb1 6900      		.string	"i"
 4137 0fb3 79        		.byte	0x79
 4138 0fb4 0F        		.byte	0xf
 4139 0fb5 0000 0085 		.long	0x85
 4140 0fb9 0000 0000 		.long	.LLST16
 4141 0fbd 0000 0000 		.long	.LVUS16
 4142 0fc1 0E        		.uleb128 0xe
 4143 0fc2 0000 0000 		.long	.LLRL17
 4144 0fc6 0000 1012 		.long	0x1012
 4145 0fca 05        		.uleb128 0x5
 4146 0fcb 6A00      		.string	"j"
 4147 0fcd 7A        		.byte	0x7a
 4148 0fce 13        		.byte	0x13
 4149 0fcf 0000 0085 		.long	0x85
 4150 0fd3 0000 0000 		.long	.LLST18
 4151 0fd7 0000 0000 		.long	.LVUS18
 4152 0fdb 01        		.uleb128 0x1
 4153 0fdc 0000 0000 		.long	.LVL80
 4154 0fe0 0000 127E 		.long	0x127e
 4155 0fe4 01        		.uleb128 0x1
 4156 0fe5 0000 0000 		.long	.LVL81
 4157 0fe9 0000 127E 		.long	0x127e
 4158 0fed 01        		.uleb128 0x1
 4159 0fee 0000 0000 		.long	.LVL83
 4160 0ff2 0000 1299 		.long	0x1299
 4161 0ff6 01        		.uleb128 0x1
 4162 0ff7 0000 0000 		.long	.LVL84
 4163 0ffb 0000 1299 		.long	0x1299
 4164 0fff 01        		.uleb128 0x1
 4165 1000 0000 0000 		.long	.LVL85
 4166 1004 0000 127E 		.long	0x127e
 4167 1008 01        		.uleb128 0x1
 4168 1009 0000 0000 		.long	.LVL86
 4169 100d 0000 127E 		.long	0x127e
 4170 1011 00        		.byte	0
 4171 1012 01        		.uleb128 0x1
 4172 1013 0000 0000 		.long	.LVL87
 4173 1017 0000 1299 		.long	0x1299
 4174 101b 01        		.uleb128 0x1
 4175 101c 0000 0000 		.long	.LVL88
 4176 1020 0000 1299 		.long	0x1299
 4177 1024 01        		.uleb128 0x1
 4178 1025 0000 0000 		.long	.LVL89
 4179 1029 0000 1275 		.long	0x1275
 4180 102d 01        		.uleb128 0x1
 4181 102e 0000 0000 		.long	.LVL90
 4182 1032 0000 1275 		.long	0x1275
 4183 1036 00        		.byte	0
 4184 1037 01        		.uleb128 0x1
 4185 1038 0000 0000 		.long	.LVL75
 4186 103c 0000 1275 		.long	0x1275
 4187 1040 01        		.uleb128 0x1
 4188 1041 0000 0000 		.long	.LVL76
 4189 1045 0000 1275 		.long	0x1275
 4190 1049 01        		.uleb128 0x1
 4191 104a 0000 0000 		.long	.LVL77
 4192 104e 0000 127E 		.long	0x127e
68K GAS  /tmp/ccmq8Bnl.s 			page 94


 4193 1052 01        		.uleb128 0x1
 4194 1053 0000 0000 		.long	.LVL78
 4195 1057 0000 127E 		.long	0x127e
 4196 105b 00        		.byte	0
 4197 105c 42        		.uleb128 0x42
 4198 105d 0000 0000 		.long	.LASF134
 4199 1061 01        		.byte	0x1
 4200 1062 68        		.byte	0x68
 4201 1063 06        		.byte	0x6
 4202 1064 01        		.byte	0x1
 4203 1065 0000 1096 		.long	0x1096
 4204 1069 1D        		.uleb128 0x1d
 4205 106a 0000 0000 		.long	.LASF119
 4206 106e 68        		.byte	0x68
 4207 106f 17        		.byte	0x17
 4208 1070 0000 0085 		.long	0x85
 4209 1074 1D        		.uleb128 0x1d
 4210 1075 0000 0000 		.long	.LASF99
 4211 1079 68        		.byte	0x68
 4212 107a 22        		.byte	0x22
 4213 107b 0000 0483 		.long	0x483
 4214 107f 1E        		.uleb128 0x1e
 4215 1080 726F 7700 		.string	"row"
 4216 1084 69        		.byte	0x69
 4217 1085 09        		.byte	0x9
 4218 1086 0000 0085 		.long	0x85
 4219 108a 1E        		.uleb128 0x1e
 4220 108b 636F 6C00 		.string	"col"
 4221 108f 6A        		.byte	0x6a
 4222 1090 09        		.byte	0x9
 4223 1091 0000 0085 		.long	0x85
 4224 1095 00        		.byte	0
 4225 1096 17        		.uleb128 0x17
 4226 1097 0000 0000 		.long	.LASF135
 4227 109b 56        		.byte	0x56
 4228 109c 0000 0000 		.long	.LFB6
 4229 10a0 0000 00E8 		.long	.LFE6-.LFB6
 4230 10a4 01        		.uleb128 0x1
 4231 10a5 9C        		.byte	0x9c
 4232 10a6 0000 10FC 		.long	0x10fc
 4233 10aa 1C        		.uleb128 0x1c
 4234 10ab 0000 0000 		.long	.LBB19
 4235 10af 0000 005A 		.long	.LBE19-.LBB19
 4236 10b3 0000 10C9 		.long	0x10c9
 4237 10b7 05        		.uleb128 0x5
 4238 10b8 6900      		.string	"i"
 4239 10ba 5C        		.byte	0x5c
 4240 10bb 0B        		.byte	0xb
 4241 10bc 0000 0085 		.long	0x85
 4242 10c0 0000 0000 		.long	.LLST6
 4243 10c4 0000 0000 		.long	.LVUS6
 4244 10c8 00        		.byte	0
 4245 10c9 19        		.uleb128 0x19
 4246 10ca 0000 0000 		.long	.LBB20
 4247 10ce 0000 007E 		.long	.LBE20-.LBB20
 4248 10d2 05        		.uleb128 0x5
 4249 10d3 6900      		.string	"i"
68K GAS  /tmp/ccmq8Bnl.s 			page 95


 4250 10d5 5F        		.byte	0x5f
 4251 10d6 0B        		.byte	0xb
 4252 10d7 0000 0085 		.long	0x85
 4253 10db 0000 0000 		.long	.LLST7
 4254 10df 0000 0000 		.long	.LVUS7
 4255 10e3 10        		.uleb128 0x10
 4256 10e4 0000 0000 		.long	.LLRL8
 4257 10e8 05        		.uleb128 0x5
 4258 10e9 6A00      		.string	"j"
 4259 10eb 60        		.byte	0x60
 4260 10ec 13        		.byte	0x13
 4261 10ed 0000 0085 		.long	0x85
 4262 10f1 0000 0000 		.long	.LLST9
 4263 10f5 0000 0000 		.long	.LVUS9
 4264 10f9 00        		.byte	0
 4265 10fa 00        		.byte	0
 4266 10fb 00        		.byte	0
 4267 10fc 29        		.uleb128 0x29
 4268 10fd 0000 0000 		.long	.LASF136
 4269 1101 48        		.byte	0x48
 4270 1102 0000 0000 		.long	.LFB5
 4271 1106 0000 005A 		.long	.LFE5-.LFB5
 4272 110a 01        		.uleb128 0x1
 4273 110b 9C        		.byte	0x9c
 4274 110c 0000 115A 		.long	0x115a
 4275 1110 18        		.uleb128 0x18
 4276 1111 0000 0000 		.long	.LASF119
 4277 1115 48        		.byte	0x48
 4278 1116 17        		.byte	0x17
 4279 1117 0000 0483 		.long	0x483
 4280 111b 02        		.uleb128 0x2
 4281 111c 91        		.byte	0x91
 4282 111d 03        		.sleb128 3
 4283 111e 10        		.uleb128 0x10
 4284 111f 0000 0000 		.long	.LLRL3
 4285 1123 05        		.uleb128 0x5
 4286 1124 6900      		.string	"i"
 4287 1126 49        		.byte	0x49
 4288 1127 0E        		.byte	0xe
 4289 1128 0000 0085 		.long	0x85
 4290 112c 0000 0000 		.long	.LLST4
 4291 1130 0000 0000 		.long	.LVUS4
 4292 1134 19        		.uleb128 0x19
 4293 1135 0000 0000 		.long	.LBB17
 4294 1139 0000 002A 		.long	.LBE17-.LBB17
 4295 113d 05        		.uleb128 0x5
 4296 113e 6A00      		.string	"j"
 4297 1140 4C        		.byte	0x4c
 4298 1141 16        		.byte	0x16
 4299 1142 0000 0085 		.long	0x85
 4300 1146 0000 0000 		.long	.LLST5
 4301 114a 0000 0000 		.long	.LVUS5
 4302 114e 01        		.uleb128 0x1
 4303 114f 0000 0000 		.long	.LVL27
 4304 1153 0000 12A2 		.long	0x12a2
 4305 1157 00        		.byte	0
 4306 1158 00        		.byte	0
68K GAS  /tmp/ccmq8Bnl.s 			page 96


 4307 1159 00        		.byte	0
 4308 115a 43        		.uleb128 0x43
 4309 115b 0000 0000 		.long	.LASF137
 4310 115f 01        		.byte	0x1
 4311 1160 41        		.byte	0x41
 4312 1161 06        		.byte	0x6
 4313 1162 0000 0ACF 		.long	0xacf
 4314 1166 01        		.byte	0x1
 4315 1167 0000 1182 		.long	0x1182
 4316 116b 1D        		.uleb128 0x1d
 4317 116c 0000 0000 		.long	.LASF119
 4318 1170 41        		.byte	0x41
 4319 1171 19        		.byte	0x19
 4320 1172 0000 0483 		.long	0x483
 4321 1176 44        		.uleb128 0x44
 4322 1177 1E        		.uleb128 0x1e
 4323 1178 6900      		.string	"i"
 4324 117a 42        		.byte	0x42
 4325 117b 0E        		.byte	0xe
 4326 117c 0000 0085 		.long	0x85
 4327 1180 00        		.byte	0
 4328 1181 00        		.byte	0
 4329 1182 17        		.uleb128 0x17
 4330 1183 0000 0000 		.long	.LASF138
 4331 1187 22        		.byte	0x22
 4332 1188 0000 0000 		.long	.LFB3
 4333 118c 0000 00E2 		.long	.LFE3-.LFB3
 4334 1190 01        		.uleb128 0x1
 4335 1191 9C        		.byte	0x9c
 4336 1192 0000 11F2 		.long	0x11f2
 4337 1196 11        		.uleb128 0x11
 4338 1197 0000 0000 		.long	.LASF139
 4339 119b 23        		.byte	0x23
 4340 119c 06        		.byte	0x6
 4341 119d 0000 0085 		.long	0x85
 4342 11a1 0000 0000 		.long	.LLST0
 4343 11a5 0000 0000 		.long	.LVUS0
 4344 11a9 01        		.uleb128 0x1
 4345 11aa 0000 0000 		.long	.LVL2
 4346 11ae 0000 08BF 		.long	0x8bf
 4347 11b2 01        		.uleb128 0x1
 4348 11b3 0000 0000 		.long	.LVL4
 4349 11b7 0000 08BF 		.long	0x8bf
 4350 11bb 01        		.uleb128 0x1
 4351 11bc 0000 0000 		.long	.LVL6
 4352 11c0 0000 08BF 		.long	0x8bf
 4353 11c4 01        		.uleb128 0x1
 4354 11c5 0000 0000 		.long	.LVL8
 4355 11c9 0000 08BF 		.long	0x8bf
 4356 11cd 01        		.uleb128 0x1
 4357 11ce 0000 0000 		.long	.LVL10
 4358 11d2 0000 127E 		.long	0x127e
 4359 11d6 01        		.uleb128 0x1
 4360 11d7 0000 0000 		.long	.LVL11
 4361 11db 0000 127E 		.long	0x127e
 4362 11df 01        		.uleb128 0x1
 4363 11e0 0000 0000 		.long	.LVL12
68K GAS  /tmp/ccmq8Bnl.s 			page 97


 4364 11e4 0000 1275 		.long	0x1275
 4365 11e8 01        		.uleb128 0x1
 4366 11e9 0000 0000 		.long	.LVL13
 4367 11ed 0000 1275 		.long	0x1275
 4368 11f1 00        		.byte	0
 4369 11f2 2A        		.uleb128 0x2a
 4370 11f3 0000 115A 		.long	0x115a
 4371 11f7 0000 0000 		.long	.LFB4
 4372 11fb 0000 001E 		.long	.LFE4-.LFB4
 4373 11ff 01        		.uleb128 0x1
 4374 1200 9C        		.byte	0x9c
 4375 1201 0000 1225 		.long	0x1225
 4376 1205 1F        		.uleb128 0x1f
 4377 1206 0000 116B 		.long	0x116b
 4378 120a 02        		.uleb128 0x2
 4379 120b 91        		.byte	0x91
 4380 120c 03        		.sleb128 3
 4381 120d 1B        		.uleb128 0x1b
 4382 120e 0000 1176 		.long	0x1176
 4383 1212 0000 0000 		.long	.LLRL1
 4384 1216 0C        		.uleb128 0xc
 4385 1217 0000 1177 		.long	0x1177
 4386 121b 0000 0000 		.long	.LLST2
 4387 121f 0000 0000 		.long	.LVUS2
 4388 1223 00        		.byte	0
 4389 1224 00        		.byte	0
 4390 1225 2A        		.uleb128 0x2a
 4391 1226 0000 105C 		.long	0x105c
 4392 122a 0000 0000 		.long	.LFB7
 4393 122e 0000 003E 		.long	.LFE7-.LFB7
 4394 1232 01        		.uleb128 0x1
 4395 1233 9C        		.byte	0x9c
 4396 1234 0000 1275 		.long	0x1275
 4397 1238 1F        		.uleb128 0x1f
 4398 1239 0000 1069 		.long	0x1069
 4399 123d 02        		.uleb128 0x2
 4400 123e 91        		.byte	0x91
 4401 123f 00        		.sleb128 0
 4402 1240 1F        		.uleb128 0x1f
 4403 1241 0000 1074 		.long	0x1074
 4404 1245 02        		.uleb128 0x2
 4405 1246 91        		.byte	0x91
 4406 1247 07        		.sleb128 7
 4407 1248 0C        		.uleb128 0xc
 4408 1249 0000 107F 		.long	0x107f
 4409 124d 0000 0000 		.long	.LLST13
 4410 1251 0000 0000 		.long	.LVUS13
 4411 1255 0C        		.uleb128 0xc
 4412 1256 0000 108A 		.long	0x108a
 4413 125a 0000 0000 		.long	.LLST14
 4414 125e 0000 0000 		.long	.LVUS14
 4415 1262 01        		.uleb128 0x1
 4416 1263 0000 0000 		.long	.LVL72
 4417 1267 0000 1287 		.long	0x1287
 4418 126b 01        		.uleb128 0x1
 4419 126c 0000 0000 		.long	.LVL73
 4420 1270 0000 1290 		.long	0x1290
68K GAS  /tmp/ccmq8Bnl.s 			page 98


 4421 1274 00        		.byte	0
 4422 1275 1A        		.uleb128 0x1a
 4423 1276 0000 0000 		.long	.LASF140
 4424 127a 0000 0000 		.long	.LASF141
 4425 127e 1A        		.uleb128 0x1a
 4426 127f 0000 0000 		.long	.LASF117
 4427 1283 0000 0000 		.long	.LASF142
 4428 1287 2B        		.uleb128 0x2b
 4429 1288 0000 0000 		.long	.LASF143
 4430 128c 0000 0000 		.long	.LASF143
 4431 1290 2B        		.uleb128 0x2b
 4432 1291 0000 0000 		.long	.LASF144
 4433 1295 0000 0000 		.long	.LASF144
 4434 1299 1A        		.uleb128 0x1a
 4435 129a 0000 0000 		.long	.LASF145
 4436 129e 0000 0000 		.long	.LASF146
 4437 12a2 1A        		.uleb128 0x1a
 4438 12a3 0000 0000 		.long	.LASF147
 4439 12a7 0000 0000 		.long	.LASF148
 4440 12ab 00        		.byte	0
 4441               		.section	.debug_abbrev,"",@progbits
 4442               	.Ldebug_abbrev0:
 4443 0000 01        		.uleb128 0x1
 4444 0001 48        		.uleb128 0x48
 4445 0002 00        		.byte	0
 4446 0003 7D        		.uleb128 0x7d
 4447 0004 01        		.uleb128 0x1
 4448 0005 7F        		.uleb128 0x7f
 4449 0006 13        		.uleb128 0x13
 4450 0007 00        		.byte	0
 4451 0008 00        		.byte	0
 4452 0009 02        		.uleb128 0x2
 4453 000a 0D        		.uleb128 0xd
 4454 000b 00        		.byte	0
 4455 000c 03        		.uleb128 0x3
 4456 000d 0E        		.uleb128 0xe
 4457 000e 3A        		.uleb128 0x3a
 4458 000f 0B        		.uleb128 0xb
 4459 0010 3B        		.uleb128 0x3b
 4460 0011 0B        		.uleb128 0xb
 4461 0012 39        		.uleb128 0x39
 4462 0013 0B        		.uleb128 0xb
 4463 0014 49        		.uleb128 0x49
 4464 0015 13        		.uleb128 0x13
 4465 0016 38        		.uleb128 0x38
 4466 0017 0B        		.uleb128 0xb
 4467 0018 00        		.byte	0
 4468 0019 00        		.byte	0
 4469 001a 03        		.uleb128 0x3
 4470 001b 0D        		.uleb128 0xd
 4471 001c 00        		.byte	0
 4472 001d 03        		.uleb128 0x3
 4473 001e 0E        		.uleb128 0xe
 4474 001f 3A        		.uleb128 0x3a
 4475 0020 21        		.uleb128 0x21
 4476 0021 04        		.sleb128 4
 4477 0022 3B        		.uleb128 0x3b
68K GAS  /tmp/ccmq8Bnl.s 			page 99


 4478 0023 05        		.uleb128 0x5
 4479 0024 39        		.uleb128 0x39
 4480 0025 0B        		.uleb128 0xb
 4481 0026 49        		.uleb128 0x49
 4482 0027 13        		.uleb128 0x13
 4483 0028 38        		.uleb128 0x38
 4484 0029 0B        		.uleb128 0xb
 4485 002a 00        		.byte	0
 4486 002b 00        		.byte	0
 4487 002c 04        		.uleb128 0x4
 4488 002d 05        		.uleb128 0x5
 4489 002e 00        		.byte	0
 4490 002f 49        		.uleb128 0x49
 4491 0030 13        		.uleb128 0x13
 4492 0031 00        		.byte	0
 4493 0032 00        		.byte	0
 4494 0033 05        		.uleb128 0x5
 4495 0034 34        		.uleb128 0x34
 4496 0035 00        		.byte	0
 4497 0036 03        		.uleb128 0x3
 4498 0037 08        		.uleb128 0x8
 4499 0038 3A        		.uleb128 0x3a
 4500 0039 21        		.uleb128 0x21
 4501 003a 01        		.sleb128 1
 4502 003b 3B        		.uleb128 0x3b
 4503 003c 0B        		.uleb128 0xb
 4504 003d 39        		.uleb128 0x39
 4505 003e 0B        		.uleb128 0xb
 4506 003f 49        		.uleb128 0x49
 4507 0040 13        		.uleb128 0x13
 4508 0041 02        		.uleb128 0x2
 4509 0042 17        		.uleb128 0x17
 4510 0043 B742      		.uleb128 0x2137
 4511 0045 17        		.uleb128 0x17
 4512 0046 00        		.byte	0
 4513 0047 00        		.byte	0
 4514 0048 06        		.uleb128 0x6
 4515 0049 0F        		.uleb128 0xf
 4516 004a 00        		.byte	0
 4517 004b 0B        		.uleb128 0xb
 4518 004c 21        		.uleb128 0x21
 4519 004d 04        		.sleb128 4
 4520 004e 49        		.uleb128 0x49
 4521 004f 13        		.uleb128 0x13
 4522 0050 00        		.byte	0
 4523 0051 00        		.byte	0
 4524 0052 07        		.uleb128 0x7
 4525 0053 21        		.uleb128 0x21
 4526 0054 00        		.byte	0
 4527 0055 49        		.uleb128 0x49
 4528 0056 13        		.uleb128 0x13
 4529 0057 2F        		.uleb128 0x2f
 4530 0058 0B        		.uleb128 0xb
 4531 0059 00        		.byte	0
 4532 005a 00        		.byte	0
 4533 005b 08        		.uleb128 0x8
 4534 005c 01        		.uleb128 0x1
68K GAS  /tmp/ccmq8Bnl.s 			page 100


 4535 005d 01        		.byte	0x1
 4536 005e 49        		.uleb128 0x49
 4537 005f 13        		.uleb128 0x13
 4538 0060 01        		.uleb128 0x1
 4539 0061 13        		.uleb128 0x13
 4540 0062 00        		.byte	0
 4541 0063 00        		.byte	0
 4542 0064 09        		.uleb128 0x9
 4543 0065 24        		.uleb128 0x24
 4544 0066 00        		.byte	0
 4545 0067 0B        		.uleb128 0xb
 4546 0068 0B        		.uleb128 0xb
 4547 0069 3E        		.uleb128 0x3e
 4548 006a 0B        		.uleb128 0xb
 4549 006b 03        		.uleb128 0x3
 4550 006c 0E        		.uleb128 0xe
 4551 006d 00        		.byte	0
 4552 006e 00        		.byte	0
 4553 006f 0A        		.uleb128 0xa
 4554 0070 0D        		.uleb128 0xd
 4555 0071 00        		.byte	0
 4556 0072 03        		.uleb128 0x3
 4557 0073 08        		.uleb128 0x8
 4558 0074 3A        		.uleb128 0x3a
 4559 0075 21        		.uleb128 0x21
 4560 0076 04        		.sleb128 4
 4561 0077 3B        		.uleb128 0x3b
 4562 0078 0B        		.uleb128 0xb
 4563 0079 39        		.uleb128 0x39
 4564 007a 0B        		.uleb128 0xb
 4565 007b 49        		.uleb128 0x49
 4566 007c 13        		.uleb128 0x13
 4567 007d 38        		.uleb128 0x38
 4568 007e 0B        		.uleb128 0xb
 4569 007f 00        		.byte	0
 4570 0080 00        		.byte	0
 4571 0081 0B        		.uleb128 0xb
 4572 0082 16        		.uleb128 0x16
 4573 0083 00        		.byte	0
 4574 0084 03        		.uleb128 0x3
 4575 0085 0E        		.uleb128 0xe
 4576 0086 3A        		.uleb128 0x3a
 4577 0087 0B        		.uleb128 0xb
 4578 0088 3B        		.uleb128 0x3b
 4579 0089 0B        		.uleb128 0xb
 4580 008a 39        		.uleb128 0x39
 4581 008b 0B        		.uleb128 0xb
 4582 008c 49        		.uleb128 0x49
 4583 008d 13        		.uleb128 0x13
 4584 008e 00        		.byte	0
 4585 008f 00        		.byte	0
 4586 0090 0C        		.uleb128 0xc
 4587 0091 34        		.uleb128 0x34
 4588 0092 00        		.byte	0
 4589 0093 31        		.uleb128 0x31
 4590 0094 13        		.uleb128 0x13
 4591 0095 02        		.uleb128 0x2
68K GAS  /tmp/ccmq8Bnl.s 			page 101


 4592 0096 17        		.uleb128 0x17
 4593 0097 B742      		.uleb128 0x2137
 4594 0099 17        		.uleb128 0x17
 4595 009a 00        		.byte	0
 4596 009b 00        		.byte	0
 4597 009c 0D        		.uleb128 0xd
 4598 009d 34        		.uleb128 0x34
 4599 009e 00        		.byte	0
 4600 009f 03        		.uleb128 0x3
 4601 00a0 0E        		.uleb128 0xe
 4602 00a1 3A        		.uleb128 0x3a
 4603 00a2 21        		.uleb128 0x21
 4604 00a3 01        		.sleb128 1
 4605 00a4 3B        		.uleb128 0x3b
 4606 00a5 0B        		.uleb128 0xb
 4607 00a6 39        		.uleb128 0x39
 4608 00a7 0B        		.uleb128 0xb
 4609 00a8 49        		.uleb128 0x49
 4610 00a9 13        		.uleb128 0x13
 4611 00aa 3F        		.uleb128 0x3f
 4612 00ab 19        		.uleb128 0x19
 4613 00ac 02        		.uleb128 0x2
 4614 00ad 18        		.uleb128 0x18
 4615 00ae 00        		.byte	0
 4616 00af 00        		.byte	0
 4617 00b0 0E        		.uleb128 0xe
 4618 00b1 0B        		.uleb128 0xb
 4619 00b2 01        		.byte	0x1
 4620 00b3 55        		.uleb128 0x55
 4621 00b4 17        		.uleb128 0x17
 4622 00b5 01        		.uleb128 0x1
 4623 00b6 13        		.uleb128 0x13
 4624 00b7 00        		.byte	0
 4625 00b8 00        		.byte	0
 4626 00b9 0F        		.uleb128 0xf
 4627 00ba 05        		.uleb128 0x5
 4628 00bb 00        		.byte	0
 4629 00bc 31        		.uleb128 0x31
 4630 00bd 13        		.uleb128 0x13
 4631 00be 02        		.uleb128 0x2
 4632 00bf 17        		.uleb128 0x17
 4633 00c0 B742      		.uleb128 0x2137
 4634 00c2 17        		.uleb128 0x17
 4635 00c3 00        		.byte	0
 4636 00c4 00        		.byte	0
 4637 00c5 10        		.uleb128 0x10
 4638 00c6 0B        		.uleb128 0xb
 4639 00c7 01        		.byte	0x1
 4640 00c8 55        		.uleb128 0x55
 4641 00c9 17        		.uleb128 0x17
 4642 00ca 00        		.byte	0
 4643 00cb 00        		.byte	0
 4644 00cc 11        		.uleb128 0x11
 4645 00cd 34        		.uleb128 0x34
 4646 00ce 00        		.byte	0
 4647 00cf 03        		.uleb128 0x3
 4648 00d0 0E        		.uleb128 0xe
68K GAS  /tmp/ccmq8Bnl.s 			page 102


 4649 00d1 3A        		.uleb128 0x3a
 4650 00d2 21        		.uleb128 0x21
 4651 00d3 01        		.sleb128 1
 4652 00d4 3B        		.uleb128 0x3b
 4653 00d5 0B        		.uleb128 0xb
 4654 00d6 39        		.uleb128 0x39
 4655 00d7 0B        		.uleb128 0xb
 4656 00d8 49        		.uleb128 0x49
 4657 00d9 13        		.uleb128 0x13
 4658 00da 02        		.uleb128 0x2
 4659 00db 17        		.uleb128 0x17
 4660 00dc B742      		.uleb128 0x2137
 4661 00de 17        		.uleb128 0x17
 4662 00df 00        		.byte	0
 4663 00e0 00        		.byte	0
 4664 00e1 12        		.uleb128 0x12
 4665 00e2 13        		.uleb128 0x13
 4666 00e3 01        		.byte	0x1
 4667 00e4 03        		.uleb128 0x3
 4668 00e5 0E        		.uleb128 0xe
 4669 00e6 0B        		.uleb128 0xb
 4670 00e7 0B        		.uleb128 0xb
 4671 00e8 3A        		.uleb128 0x3a
 4672 00e9 21        		.uleb128 0x21
 4673 00ea 04        		.sleb128 4
 4674 00eb 3B        		.uleb128 0x3b
 4675 00ec 0B        		.uleb128 0xb
 4676 00ed 39        		.uleb128 0x39
 4677 00ee 21        		.uleb128 0x21
 4678 00ef 08        		.sleb128 8
 4679 00f0 01        		.uleb128 0x1
 4680 00f1 13        		.uleb128 0x13
 4681 00f2 00        		.byte	0
 4682 00f3 00        		.byte	0
 4683 00f4 13        		.uleb128 0x13
 4684 00f5 15        		.uleb128 0x15
 4685 00f6 01        		.byte	0x1
 4686 00f7 27        		.uleb128 0x27
 4687 00f8 19        		.uleb128 0x19
 4688 00f9 49        		.uleb128 0x49
 4689 00fa 13        		.uleb128 0x13
 4690 00fb 01        		.uleb128 0x1
 4691 00fc 13        		.uleb128 0x13
 4692 00fd 00        		.byte	0
 4693 00fe 00        		.byte	0
 4694 00ff 14        		.uleb128 0x14
 4695 0100 18        		.uleb128 0x18
 4696 0101 00        		.byte	0
 4697 0102 00        		.byte	0
 4698 0103 00        		.byte	0
 4699 0104 15        		.uleb128 0x15
 4700 0105 34        		.uleb128 0x34
 4701 0106 00        		.byte	0
 4702 0107 03        		.uleb128 0x3
 4703 0108 0E        		.uleb128 0xe
 4704 0109 3A        		.uleb128 0x3a
 4705 010a 21        		.uleb128 0x21
68K GAS  /tmp/ccmq8Bnl.s 			page 103


 4706 010b 01        		.sleb128 1
 4707 010c 3B        		.uleb128 0x3b
 4708 010d 05        		.uleb128 0x5
 4709 010e 39        		.uleb128 0x39
 4710 010f 21        		.uleb128 0x21
 4711 0110 08        		.sleb128 8
 4712 0111 49        		.uleb128 0x49
 4713 0112 13        		.uleb128 0x13
 4714 0113 02        		.uleb128 0x2
 4715 0114 17        		.uleb128 0x17
 4716 0115 B742      		.uleb128 0x2137
 4717 0117 17        		.uleb128 0x17
 4718 0118 00        		.byte	0
 4719 0119 00        		.byte	0
 4720 011a 16        		.uleb128 0x16
 4721 011b 48        		.uleb128 0x48
 4722 011c 00        		.byte	0
 4723 011d 7D        		.uleb128 0x7d
 4724 011e 01        		.uleb128 0x1
 4725 011f 8301      		.uleb128 0x83
 4726 0121 18        		.uleb128 0x18
 4727 0122 00        		.byte	0
 4728 0123 00        		.byte	0
 4729 0124 17        		.uleb128 0x17
 4730 0125 2E        		.uleb128 0x2e
 4731 0126 01        		.byte	0x1
 4732 0127 3F        		.uleb128 0x3f
 4733 0128 19        		.uleb128 0x19
 4734 0129 03        		.uleb128 0x3
 4735 012a 0E        		.uleb128 0xe
 4736 012b 3A        		.uleb128 0x3a
 4737 012c 21        		.uleb128 0x21
 4738 012d 01        		.sleb128 1
 4739 012e 3B        		.uleb128 0x3b
 4740 012f 0B        		.uleb128 0xb
 4741 0130 39        		.uleb128 0x39
 4742 0131 21        		.uleb128 0x21
 4743 0132 06        		.sleb128 6
 4744 0133 11        		.uleb128 0x11
 4745 0134 01        		.uleb128 0x1
 4746 0135 12        		.uleb128 0x12
 4747 0136 06        		.uleb128 0x6
 4748 0137 40        		.uleb128 0x40
 4749 0138 18        		.uleb128 0x18
 4750 0139 7A        		.uleb128 0x7a
 4751 013a 19        		.uleb128 0x19
 4752 013b 01        		.uleb128 0x1
 4753 013c 13        		.uleb128 0x13
 4754 013d 00        		.byte	0
 4755 013e 00        		.byte	0
 4756 013f 18        		.uleb128 0x18
 4757 0140 05        		.uleb128 0x5
 4758 0141 00        		.byte	0
 4759 0142 03        		.uleb128 0x3
 4760 0143 0E        		.uleb128 0xe
 4761 0144 3A        		.uleb128 0x3a
 4762 0145 21        		.uleb128 0x21
68K GAS  /tmp/ccmq8Bnl.s 			page 104


 4763 0146 01        		.sleb128 1
 4764 0147 3B        		.uleb128 0x3b
 4765 0148 0B        		.uleb128 0xb
 4766 0149 39        		.uleb128 0x39
 4767 014a 0B        		.uleb128 0xb
 4768 014b 49        		.uleb128 0x49
 4769 014c 13        		.uleb128 0x13
 4770 014d 02        		.uleb128 0x2
 4771 014e 18        		.uleb128 0x18
 4772 014f 00        		.byte	0
 4773 0150 00        		.byte	0
 4774 0151 19        		.uleb128 0x19
 4775 0152 0B        		.uleb128 0xb
 4776 0153 01        		.byte	0x1
 4777 0154 11        		.uleb128 0x11
 4778 0155 01        		.uleb128 0x1
 4779 0156 12        		.uleb128 0x12
 4780 0157 06        		.uleb128 0x6
 4781 0158 00        		.byte	0
 4782 0159 00        		.byte	0
 4783 015a 1A        		.uleb128 0x1a
 4784 015b 2E        		.uleb128 0x2e
 4785 015c 00        		.byte	0
 4786 015d 3F        		.uleb128 0x3f
 4787 015e 19        		.uleb128 0x19
 4788 015f 3C        		.uleb128 0x3c
 4789 0160 19        		.uleb128 0x19
 4790 0161 6E        		.uleb128 0x6e
 4791 0162 0E        		.uleb128 0xe
 4792 0163 03        		.uleb128 0x3
 4793 0164 0E        		.uleb128 0xe
 4794 0165 3A        		.uleb128 0x3a
 4795 0166 21        		.uleb128 0x21
 4796 0167 08        		.sleb128 8
 4797 0168 3B        		.uleb128 0x3b
 4798 0169 21        		.uleb128 0x21
 4799 016a 00        		.sleb128 0
 4800 016b 00        		.byte	0
 4801 016c 00        		.byte	0
 4802 016d 1B        		.uleb128 0x1b
 4803 016e 0B        		.uleb128 0xb
 4804 016f 01        		.byte	0x1
 4805 0170 31        		.uleb128 0x31
 4806 0171 13        		.uleb128 0x13
 4807 0172 55        		.uleb128 0x55
 4808 0173 17        		.uleb128 0x17
 4809 0174 00        		.byte	0
 4810 0175 00        		.byte	0
 4811 0176 1C        		.uleb128 0x1c
 4812 0177 0B        		.uleb128 0xb
 4813 0178 01        		.byte	0x1
 4814 0179 11        		.uleb128 0x11
 4815 017a 01        		.uleb128 0x1
 4816 017b 12        		.uleb128 0x12
 4817 017c 06        		.uleb128 0x6
 4818 017d 01        		.uleb128 0x1
 4819 017e 13        		.uleb128 0x13
68K GAS  /tmp/ccmq8Bnl.s 			page 105


 4820 017f 00        		.byte	0
 4821 0180 00        		.byte	0
 4822 0181 1D        		.uleb128 0x1d
 4823 0182 05        		.uleb128 0x5
 4824 0183 00        		.byte	0
 4825 0184 03        		.uleb128 0x3
 4826 0185 0E        		.uleb128 0xe
 4827 0186 3A        		.uleb128 0x3a
 4828 0187 21        		.uleb128 0x21
 4829 0188 01        		.sleb128 1
 4830 0189 3B        		.uleb128 0x3b
 4831 018a 0B        		.uleb128 0xb
 4832 018b 39        		.uleb128 0x39
 4833 018c 0B        		.uleb128 0xb
 4834 018d 49        		.uleb128 0x49
 4835 018e 13        		.uleb128 0x13
 4836 018f 00        		.byte	0
 4837 0190 00        		.byte	0
 4838 0191 1E        		.uleb128 0x1e
 4839 0192 34        		.uleb128 0x34
 4840 0193 00        		.byte	0
 4841 0194 03        		.uleb128 0x3
 4842 0195 08        		.uleb128 0x8
 4843 0196 3A        		.uleb128 0x3a
 4844 0197 21        		.uleb128 0x21
 4845 0198 01        		.sleb128 1
 4846 0199 3B        		.uleb128 0x3b
 4847 019a 0B        		.uleb128 0xb
 4848 019b 39        		.uleb128 0x39
 4849 019c 0B        		.uleb128 0xb
 4850 019d 49        		.uleb128 0x49
 4851 019e 13        		.uleb128 0x13
 4852 019f 00        		.byte	0
 4853 01a0 00        		.byte	0
 4854 01a1 1F        		.uleb128 0x1f
 4855 01a2 05        		.uleb128 0x5
 4856 01a3 00        		.byte	0
 4857 01a4 31        		.uleb128 0x31
 4858 01a5 13        		.uleb128 0x13
 4859 01a6 02        		.uleb128 0x2
 4860 01a7 18        		.uleb128 0x18
 4861 01a8 00        		.byte	0
 4862 01a9 00        		.byte	0
 4863 01aa 20        		.uleb128 0x20
 4864 01ab 16        		.uleb128 0x16
 4865 01ac 00        		.byte	0
 4866 01ad 03        		.uleb128 0x3
 4867 01ae 0E        		.uleb128 0xe
 4868 01af 3A        		.uleb128 0x3a
 4869 01b0 0B        		.uleb128 0xb
 4870 01b1 3B        		.uleb128 0x3b
 4871 01b2 05        		.uleb128 0x5
 4872 01b3 39        		.uleb128 0x39
 4873 01b4 0B        		.uleb128 0xb
 4874 01b5 49        		.uleb128 0x49
 4875 01b6 13        		.uleb128 0x13
 4876 01b7 00        		.byte	0
68K GAS  /tmp/ccmq8Bnl.s 			page 106


 4877 01b8 00        		.byte	0
 4878 01b9 21        		.uleb128 0x21
 4879 01ba 0D        		.uleb128 0xd
 4880 01bb 00        		.byte	0
 4881 01bc 03        		.uleb128 0x3
 4882 01bd 0E        		.uleb128 0xe
 4883 01be 3A        		.uleb128 0x3a
 4884 01bf 21        		.uleb128 0x21
 4885 01c0 03        		.sleb128 3
 4886 01c1 3B        		.uleb128 0x3b
 4887 01c2 0B        		.uleb128 0xb
 4888 01c3 39        		.uleb128 0x39
 4889 01c4 0B        		.uleb128 0xb
 4890 01c5 49        		.uleb128 0x49
 4891 01c6 13        		.uleb128 0x13
 4892 01c7 00        		.byte	0
 4893 01c8 00        		.byte	0
 4894 01c9 22        		.uleb128 0x22
 4895 01ca 13        		.uleb128 0x13
 4896 01cb 01        		.byte	0x1
 4897 01cc 0B        		.uleb128 0xb
 4898 01cd 0B        		.uleb128 0xb
 4899 01ce 3A        		.uleb128 0x3a
 4900 01cf 0B        		.uleb128 0xb
 4901 01d0 3B        		.uleb128 0x3b
 4902 01d1 0B        		.uleb128 0xb
 4903 01d2 39        		.uleb128 0x39
 4904 01d3 21        		.uleb128 0x21
 4905 01d4 09        		.sleb128 9
 4906 01d5 01        		.uleb128 0x1
 4907 01d6 13        		.uleb128 0x13
 4908 01d7 00        		.byte	0
 4909 01d8 00        		.byte	0
 4910 01d9 23        		.uleb128 0x23
 4911 01da 37        		.uleb128 0x37
 4912 01db 00        		.byte	0
 4913 01dc 49        		.uleb128 0x49
 4914 01dd 13        		.uleb128 0x13
 4915 01de 00        		.byte	0
 4916 01df 00        		.byte	0
 4917 01e0 24        		.uleb128 0x24
 4918 01e1 15        		.uleb128 0x15
 4919 01e2 01        		.byte	0x1
 4920 01e3 27        		.uleb128 0x27
 4921 01e4 19        		.uleb128 0x19
 4922 01e5 01        		.uleb128 0x1
 4923 01e6 13        		.uleb128 0x13
 4924 01e7 00        		.byte	0
 4925 01e8 00        		.byte	0
 4926 01e9 25        		.uleb128 0x25
 4927 01ea 2E        		.uleb128 0x2e
 4928 01eb 01        		.byte	0x1
 4929 01ec 3F        		.uleb128 0x3f
 4930 01ed 19        		.uleb128 0x19
 4931 01ee 03        		.uleb128 0x3
 4932 01ef 0E        		.uleb128 0xe
 4933 01f0 3A        		.uleb128 0x3a
68K GAS  /tmp/ccmq8Bnl.s 			page 107


 4934 01f1 21        		.uleb128 0x21
 4935 01f2 07        		.sleb128 7
 4936 01f3 3B        		.uleb128 0x3b
 4937 01f4 0B        		.uleb128 0xb
 4938 01f5 39        		.uleb128 0x39
 4939 01f6 21        		.uleb128 0x21
 4940 01f7 06        		.sleb128 6
 4941 01f8 3C        		.uleb128 0x3c
 4942 01f9 19        		.uleb128 0x19
 4943 01fa 01        		.uleb128 0x1
 4944 01fb 13        		.uleb128 0x13
 4945 01fc 00        		.byte	0
 4946 01fd 00        		.byte	0
 4947 01fe 26        		.uleb128 0x26
 4948 01ff 2E        		.uleb128 0x2e
 4949 0200 01        		.byte	0x1
 4950 0201 3F        		.uleb128 0x3f
 4951 0202 19        		.uleb128 0x19
 4952 0203 03        		.uleb128 0x3
 4953 0204 08        		.uleb128 0x8
 4954 0205 3A        		.uleb128 0x3a
 4955 0206 21        		.uleb128 0x21
 4956 0207 07        		.sleb128 7
 4957 0208 3B        		.uleb128 0x3b
 4958 0209 0B        		.uleb128 0xb
 4959 020a 39        		.uleb128 0x39
 4960 020b 21        		.uleb128 0x21
 4961 020c 0C        		.sleb128 12
 4962 020d 27        		.uleb128 0x27
 4963 020e 19        		.uleb128 0x19
 4964 020f 49        		.uleb128 0x49
 4965 0210 13        		.uleb128 0x13
 4966 0211 3C        		.uleb128 0x3c
 4967 0212 19        		.uleb128 0x19
 4968 0213 01        		.uleb128 0x1
 4969 0214 13        		.uleb128 0x13
 4970 0215 00        		.byte	0
 4971 0216 00        		.byte	0
 4972 0217 27        		.uleb128 0x27
 4973 0218 2E        		.uleb128 0x2e
 4974 0219 01        		.byte	0x1
 4975 021a 3F        		.uleb128 0x3f
 4976 021b 19        		.uleb128 0x19
 4977 021c 03        		.uleb128 0x3
 4978 021d 0E        		.uleb128 0xe
 4979 021e 3A        		.uleb128 0x3a
 4980 021f 0B        		.uleb128 0xb
 4981 0220 3B        		.uleb128 0x3b
 4982 0221 0B        		.uleb128 0xb
 4983 0222 39        		.uleb128 0x39
 4984 0223 0B        		.uleb128 0xb
 4985 0224 27        		.uleb128 0x27
 4986 0225 19        		.uleb128 0x19
 4987 0226 49        		.uleb128 0x49
 4988 0227 13        		.uleb128 0x13
 4989 0228 3C        		.uleb128 0x3c
 4990 0229 19        		.uleb128 0x19
68K GAS  /tmp/ccmq8Bnl.s 			page 108


 4991 022a 01        		.uleb128 0x1
 4992 022b 13        		.uleb128 0x13
 4993 022c 00        		.byte	0
 4994 022d 00        		.byte	0
 4995 022e 28        		.uleb128 0x28
 4996 022f 2E        		.uleb128 0x2e
 4997 0230 01        		.byte	0x1
 4998 0231 3F        		.uleb128 0x3f
 4999 0232 19        		.uleb128 0x19
 5000 0233 03        		.uleb128 0x3
 5001 0234 0E        		.uleb128 0xe
 5002 0235 3A        		.uleb128 0x3a
 5003 0236 21        		.uleb128 0x21
 5004 0237 01        		.sleb128 1
 5005 0238 3B        		.uleb128 0x3b
 5006 0239 05        		.uleb128 0x5
 5007 023a 39        		.uleb128 0x39
 5008 023b 21        		.uleb128 0x21
 5009 023c 06        		.sleb128 6
 5010 023d 11        		.uleb128 0x11
 5011 023e 01        		.uleb128 0x1
 5012 023f 12        		.uleb128 0x12
 5013 0240 06        		.uleb128 0x6
 5014 0241 40        		.uleb128 0x40
 5015 0242 18        		.uleb128 0x18
 5016 0243 7A        		.uleb128 0x7a
 5017 0244 19        		.uleb128 0x19
 5018 0245 01        		.uleb128 0x1
 5019 0246 13        		.uleb128 0x13
 5020 0247 00        		.byte	0
 5021 0248 00        		.byte	0
 5022 0249 29        		.uleb128 0x29
 5023 024a 2E        		.uleb128 0x2e
 5024 024b 01        		.byte	0x1
 5025 024c 3F        		.uleb128 0x3f
 5026 024d 19        		.uleb128 0x19
 5027 024e 03        		.uleb128 0x3
 5028 024f 0E        		.uleb128 0xe
 5029 0250 3A        		.uleb128 0x3a
 5030 0251 21        		.uleb128 0x21
 5031 0252 01        		.sleb128 1
 5032 0253 3B        		.uleb128 0x3b
 5033 0254 0B        		.uleb128 0xb
 5034 0255 39        		.uleb128 0x39
 5035 0256 21        		.uleb128 0x21
 5036 0257 06        		.sleb128 6
 5037 0258 27        		.uleb128 0x27
 5038 0259 19        		.uleb128 0x19
 5039 025a 11        		.uleb128 0x11
 5040 025b 01        		.uleb128 0x1
 5041 025c 12        		.uleb128 0x12
 5042 025d 06        		.uleb128 0x6
 5043 025e 40        		.uleb128 0x40
 5044 025f 18        		.uleb128 0x18
 5045 0260 7A        		.uleb128 0x7a
 5046 0261 19        		.uleb128 0x19
 5047 0262 01        		.uleb128 0x1
68K GAS  /tmp/ccmq8Bnl.s 			page 109


 5048 0263 13        		.uleb128 0x13
 5049 0264 00        		.byte	0
 5050 0265 00        		.byte	0
 5051 0266 2A        		.uleb128 0x2a
 5052 0267 2E        		.uleb128 0x2e
 5053 0268 01        		.byte	0x1
 5054 0269 31        		.uleb128 0x31
 5055 026a 13        		.uleb128 0x13
 5056 026b 11        		.uleb128 0x11
 5057 026c 01        		.uleb128 0x1
 5058 026d 12        		.uleb128 0x12
 5059 026e 06        		.uleb128 0x6
 5060 026f 40        		.uleb128 0x40
 5061 0270 18        		.uleb128 0x18
 5062 0271 7A        		.uleb128 0x7a
 5063 0272 19        		.uleb128 0x19
 5064 0273 01        		.uleb128 0x1
 5065 0274 13        		.uleb128 0x13
 5066 0275 00        		.byte	0
 5067 0276 00        		.byte	0
 5068 0277 2B        		.uleb128 0x2b
 5069 0278 2E        		.uleb128 0x2e
 5070 0279 00        		.byte	0
 5071 027a 3F        		.uleb128 0x3f
 5072 027b 19        		.uleb128 0x19
 5073 027c 3C        		.uleb128 0x3c
 5074 027d 19        		.uleb128 0x19
 5075 027e 6E        		.uleb128 0x6e
 5076 027f 0E        		.uleb128 0xe
 5077 0280 03        		.uleb128 0x3
 5078 0281 0E        		.uleb128 0xe
 5079 0282 00        		.byte	0
 5080 0283 00        		.byte	0
 5081 0284 2C        		.uleb128 0x2c
 5082 0285 11        		.uleb128 0x11
 5083 0286 01        		.byte	0x1
 5084 0287 25        		.uleb128 0x25
 5085 0288 0E        		.uleb128 0xe
 5086 0289 13        		.uleb128 0x13
 5087 028a 0B        		.uleb128 0xb
 5088 028b 03        		.uleb128 0x3
 5089 028c 0E        		.uleb128 0xe
 5090 028d 1B        		.uleb128 0x1b
 5091 028e 0E        		.uleb128 0xe
 5092 028f 55        		.uleb128 0x55
 5093 0290 17        		.uleb128 0x17
 5094 0291 11        		.uleb128 0x11
 5095 0292 01        		.uleb128 0x1
 5096 0293 10        		.uleb128 0x10
 5097 0294 17        		.uleb128 0x17
 5098 0295 00        		.byte	0
 5099 0296 00        		.byte	0
 5100 0297 2D        		.uleb128 0x2d
 5101 0298 24        		.uleb128 0x24
 5102 0299 00        		.byte	0
 5103 029a 0B        		.uleb128 0xb
 5104 029b 0B        		.uleb128 0xb
68K GAS  /tmp/ccmq8Bnl.s 			page 110


 5105 029c 3E        		.uleb128 0x3e
 5106 029d 0B        		.uleb128 0xb
 5107 029e 03        		.uleb128 0x3
 5108 029f 08        		.uleb128 0x8
 5109 02a0 00        		.byte	0
 5110 02a1 00        		.byte	0
 5111 02a2 2E        		.uleb128 0x2e
 5112 02a3 17        		.uleb128 0x17
 5113 02a4 01        		.byte	0x1
 5114 02a5 0B        		.uleb128 0xb
 5115 02a6 0B        		.uleb128 0xb
 5116 02a7 3A        		.uleb128 0x3a
 5117 02a8 0B        		.uleb128 0xb
 5118 02a9 3B        		.uleb128 0x3b
 5119 02aa 0B        		.uleb128 0xb
 5120 02ab 39        		.uleb128 0x39
 5121 02ac 0B        		.uleb128 0xb
 5122 02ad 01        		.uleb128 0x1
 5123 02ae 13        		.uleb128 0x13
 5124 02af 00        		.byte	0
 5125 02b0 00        		.byte	0
 5126 02b1 2F        		.uleb128 0x2f
 5127 02b2 0F        		.uleb128 0xf
 5128 02b3 00        		.byte	0
 5129 02b4 0B        		.uleb128 0xb
 5130 02b5 0B        		.uleb128 0xb
 5131 02b6 00        		.byte	0
 5132 02b7 00        		.byte	0
 5133 02b8 30        		.uleb128 0x30
 5134 02b9 13        		.uleb128 0x13
 5135 02ba 01        		.byte	0x1
 5136 02bb 03        		.uleb128 0x3
 5137 02bc 0E        		.uleb128 0xe
 5138 02bd 0B        		.uleb128 0xb
 5139 02be 05        		.uleb128 0x5
 5140 02bf 3A        		.uleb128 0x3a
 5141 02c0 0B        		.uleb128 0xb
 5142 02c1 3B        		.uleb128 0x3b
 5143 02c2 05        		.uleb128 0x5
 5144 02c3 39        		.uleb128 0x39
 5145 02c4 0B        		.uleb128 0xb
 5146 02c5 01        		.uleb128 0x1
 5147 02c6 13        		.uleb128 0x13
 5148 02c7 00        		.byte	0
 5149 02c8 00        		.byte	0
 5150 02c9 31        		.uleb128 0x31
 5151 02ca 0D        		.uleb128 0xd
 5152 02cb 00        		.byte	0
 5153 02cc 03        		.uleb128 0x3
 5154 02cd 0E        		.uleb128 0xe
 5155 02ce 3A        		.uleb128 0x3a
 5156 02cf 0B        		.uleb128 0xb
 5157 02d0 3B        		.uleb128 0x3b
 5158 02d1 05        		.uleb128 0x5
 5159 02d2 39        		.uleb128 0x39
 5160 02d3 0B        		.uleb128 0xb
 5161 02d4 49        		.uleb128 0x49
68K GAS  /tmp/ccmq8Bnl.s 			page 111


 5162 02d5 13        		.uleb128 0x13
 5163 02d6 38        		.uleb128 0x38
 5164 02d7 05        		.uleb128 0x5
 5165 02d8 00        		.byte	0
 5166 02d9 00        		.byte	0
 5167 02da 32        		.uleb128 0x32
 5168 02db 26        		.uleb128 0x26
 5169 02dc 00        		.byte	0
 5170 02dd 49        		.uleb128 0x49
 5171 02de 13        		.uleb128 0x13
 5172 02df 00        		.byte	0
 5173 02e0 00        		.byte	0
 5174 02e1 33        		.uleb128 0x33
 5175 02e2 13        		.uleb128 0x13
 5176 02e3 01        		.byte	0x1
 5177 02e4 03        		.uleb128 0x3
 5178 02e5 0E        		.uleb128 0xe
 5179 02e6 0B        		.uleb128 0xb
 5180 02e7 0B        		.uleb128 0xb
 5181 02e8 3A        		.uleb128 0x3a
 5182 02e9 0B        		.uleb128 0xb
 5183 02ea 3B        		.uleb128 0x3b
 5184 02eb 05        		.uleb128 0x5
 5185 02ec 39        		.uleb128 0x39
 5186 02ed 0B        		.uleb128 0xb
 5187 02ee 01        		.uleb128 0x1
 5188 02ef 13        		.uleb128 0x13
 5189 02f0 00        		.byte	0
 5190 02f1 00        		.byte	0
 5191 02f2 34        		.uleb128 0x34
 5192 02f3 13        		.uleb128 0x13
 5193 02f4 01        		.byte	0x1
 5194 02f5 0B        		.uleb128 0xb
 5195 02f6 0B        		.uleb128 0xb
 5196 02f7 3A        		.uleb128 0x3a
 5197 02f8 0B        		.uleb128 0xb
 5198 02f9 3B        		.uleb128 0x3b
 5199 02fa 05        		.uleb128 0x5
 5200 02fb 39        		.uleb128 0x39
 5201 02fc 0B        		.uleb128 0xb
 5202 02fd 01        		.uleb128 0x1
 5203 02fe 13        		.uleb128 0x13
 5204 02ff 00        		.byte	0
 5205 0300 00        		.byte	0
 5206 0301 35        		.uleb128 0x35
 5207 0302 17        		.uleb128 0x17
 5208 0303 01        		.byte	0x1
 5209 0304 0B        		.uleb128 0xb
 5210 0305 0B        		.uleb128 0xb
 5211 0306 3A        		.uleb128 0x3a
 5212 0307 0B        		.uleb128 0xb
 5213 0308 3B        		.uleb128 0x3b
 5214 0309 05        		.uleb128 0x5
 5215 030a 39        		.uleb128 0x39
 5216 030b 0B        		.uleb128 0xb
 5217 030c 01        		.uleb128 0x1
 5218 030d 13        		.uleb128 0x13
68K GAS  /tmp/ccmq8Bnl.s 			page 112


 5219 030e 00        		.byte	0
 5220 030f 00        		.byte	0
 5221 0310 36        		.uleb128 0x36
 5222 0311 0D        		.uleb128 0xd
 5223 0312 00        		.byte	0
 5224 0313 03        		.uleb128 0x3
 5225 0314 0E        		.uleb128 0xe
 5226 0315 3A        		.uleb128 0x3a
 5227 0316 0B        		.uleb128 0xb
 5228 0317 3B        		.uleb128 0x3b
 5229 0318 05        		.uleb128 0x5
 5230 0319 39        		.uleb128 0x39
 5231 031a 0B        		.uleb128 0xb
 5232 031b 49        		.uleb128 0x49
 5233 031c 13        		.uleb128 0x13
 5234 031d 00        		.byte	0
 5235 031e 00        		.byte	0
 5236 031f 37        		.uleb128 0x37
 5237 0320 13        		.uleb128 0x13
 5238 0321 00        		.byte	0
 5239 0322 03        		.uleb128 0x3
 5240 0323 0E        		.uleb128 0xe
 5241 0324 3C        		.uleb128 0x3c
 5242 0325 19        		.uleb128 0x19
 5243 0326 00        		.byte	0
 5244 0327 00        		.byte	0
 5245 0328 38        		.uleb128 0x38
 5246 0329 15        		.uleb128 0x15
 5247 032a 01        		.byte	0x1
 5248 032b 01        		.uleb128 0x1
 5249 032c 13        		.uleb128 0x13
 5250 032d 00        		.byte	0
 5251 032e 00        		.byte	0
 5252 032f 39        		.uleb128 0x39
 5253 0330 2E        		.uleb128 0x2e
 5254 0331 01        		.byte	0x1
 5255 0332 3F        		.uleb128 0x3f
 5256 0333 19        		.uleb128 0x19
 5257 0334 03        		.uleb128 0x3
 5258 0335 0E        		.uleb128 0xe
 5259 0336 3A        		.uleb128 0x3a
 5260 0337 0B        		.uleb128 0xb
 5261 0338 3B        		.uleb128 0x3b
 5262 0339 0B        		.uleb128 0xb
 5263 033a 39        		.uleb128 0x39
 5264 033b 0B        		.uleb128 0xb
 5265 033c 27        		.uleb128 0x27
 5266 033d 19        		.uleb128 0x19
 5267 033e 3C        		.uleb128 0x3c
 5268 033f 19        		.uleb128 0x19
 5269 0340 01        		.uleb128 0x1
 5270 0341 13        		.uleb128 0x13
 5271 0342 00        		.byte	0
 5272 0343 00        		.byte	0
 5273 0344 3A        		.uleb128 0x3a
 5274 0345 2E        		.uleb128 0x2e
 5275 0346 01        		.byte	0x1
68K GAS  /tmp/ccmq8Bnl.s 			page 113


 5276 0347 3F        		.uleb128 0x3f
 5277 0348 19        		.uleb128 0x19
 5278 0349 03        		.uleb128 0x3
 5279 034a 0E        		.uleb128 0xe
 5280 034b 3A        		.uleb128 0x3a
 5281 034c 0B        		.uleb128 0xb
 5282 034d 3B        		.uleb128 0x3b
 5283 034e 05        		.uleb128 0x5
 5284 034f 39        		.uleb128 0x39
 5285 0350 0B        		.uleb128 0xb
 5286 0351 27        		.uleb128 0x27
 5287 0352 19        		.uleb128 0x19
 5288 0353 49        		.uleb128 0x49
 5289 0354 13        		.uleb128 0x13
 5290 0355 3C        		.uleb128 0x3c
 5291 0356 19        		.uleb128 0x19
 5292 0357 01        		.uleb128 0x1
 5293 0358 13        		.uleb128 0x13
 5294 0359 00        		.byte	0
 5295 035a 00        		.byte	0
 5296 035b 3B        		.uleb128 0x3b
 5297 035c 2E        		.uleb128 0x2e
 5298 035d 01        		.byte	0x1
 5299 035e 3F        		.uleb128 0x3f
 5300 035f 19        		.uleb128 0x19
 5301 0360 03        		.uleb128 0x3
 5302 0361 0E        		.uleb128 0xe
 5303 0362 3A        		.uleb128 0x3a
 5304 0363 0B        		.uleb128 0xb
 5305 0364 3B        		.uleb128 0x3b
 5306 0365 05        		.uleb128 0x5
 5307 0366 39        		.uleb128 0x39
 5308 0367 0B        		.uleb128 0xb
 5309 0368 49        		.uleb128 0x49
 5310 0369 13        		.uleb128 0x13
 5311 036a 11        		.uleb128 0x11
 5312 036b 01        		.uleb128 0x1
 5313 036c 12        		.uleb128 0x12
 5314 036d 06        		.uleb128 0x6
 5315 036e 40        		.uleb128 0x40
 5316 036f 18        		.uleb128 0x18
 5317 0370 7A        		.uleb128 0x7a
 5318 0371 19        		.uleb128 0x19
 5319 0372 01        		.uleb128 0x1
 5320 0373 13        		.uleb128 0x13
 5321 0374 00        		.byte	0
 5322 0375 00        		.byte	0
 5323 0376 3C        		.uleb128 0x3c
 5324 0377 1D        		.uleb128 0x1d
 5325 0378 01        		.byte	0x1
 5326 0379 31        		.uleb128 0x31
 5327 037a 13        		.uleb128 0x13
 5328 037b 52        		.uleb128 0x52
 5329 037c 01        		.uleb128 0x1
 5330 037d B842      		.uleb128 0x2138
 5331 037f 0B        		.uleb128 0xb
 5332 0380 55        		.uleb128 0x55
68K GAS  /tmp/ccmq8Bnl.s 			page 114


 5333 0381 17        		.uleb128 0x17
 5334 0382 58        		.uleb128 0x58
 5335 0383 0B        		.uleb128 0xb
 5336 0384 59        		.uleb128 0x59
 5337 0385 05        		.uleb128 0x5
 5338 0386 57        		.uleb128 0x57
 5339 0387 0B        		.uleb128 0xb
 5340 0388 01        		.uleb128 0x1
 5341 0389 13        		.uleb128 0x13
 5342 038a 00        		.byte	0
 5343 038b 00        		.byte	0
 5344 038c 3D        		.uleb128 0x3d
 5345 038d 1D        		.uleb128 0x1d
 5346 038e 01        		.byte	0x1
 5347 038f 31        		.uleb128 0x31
 5348 0390 13        		.uleb128 0x13
 5349 0391 52        		.uleb128 0x52
 5350 0392 01        		.uleb128 0x1
 5351 0393 B842      		.uleb128 0x2138
 5352 0395 0B        		.uleb128 0xb
 5353 0396 11        		.uleb128 0x11
 5354 0397 01        		.uleb128 0x1
 5355 0398 12        		.uleb128 0x12
 5356 0399 06        		.uleb128 0x6
 5357 039a 58        		.uleb128 0x58
 5358 039b 0B        		.uleb128 0xb
 5359 039c 59        		.uleb128 0x59
 5360 039d 05        		.uleb128 0x5
 5361 039e 57        		.uleb128 0x57
 5362 039f 0B        		.uleb128 0xb
 5363 03a0 01        		.uleb128 0x1
 5364 03a1 13        		.uleb128 0x13
 5365 03a2 00        		.byte	0
 5366 03a3 00        		.byte	0
 5367 03a4 3E        		.uleb128 0x3e
 5368 03a5 1D        		.uleb128 0x1d
 5369 03a6 01        		.byte	0x1
 5370 03a7 31        		.uleb128 0x31
 5371 03a8 13        		.uleb128 0x13
 5372 03a9 52        		.uleb128 0x52
 5373 03aa 01        		.uleb128 0x1
 5374 03ab B842      		.uleb128 0x2138
 5375 03ad 0B        		.uleb128 0xb
 5376 03ae 55        		.uleb128 0x55
 5377 03af 17        		.uleb128 0x17
 5378 03b0 58        		.uleb128 0x58
 5379 03b1 0B        		.uleb128 0xb
 5380 03b2 59        		.uleb128 0x59
 5381 03b3 0B        		.uleb128 0xb
 5382 03b4 57        		.uleb128 0x57
 5383 03b5 0B        		.uleb128 0xb
 5384 03b6 01        		.uleb128 0x1
 5385 03b7 13        		.uleb128 0x13
 5386 03b8 00        		.byte	0
 5387 03b9 00        		.byte	0
 5388 03ba 3F        		.uleb128 0x3f
 5389 03bb 1D        		.uleb128 0x1d
68K GAS  /tmp/ccmq8Bnl.s 			page 115


 5390 03bc 01        		.byte	0x1
 5391 03bd 31        		.uleb128 0x31
 5392 03be 13        		.uleb128 0x13
 5393 03bf 52        		.uleb128 0x52
 5394 03c0 01        		.uleb128 0x1
 5395 03c1 B842      		.uleb128 0x2138
 5396 03c3 0B        		.uleb128 0xb
 5397 03c4 11        		.uleb128 0x11
 5398 03c5 01        		.uleb128 0x1
 5399 03c6 12        		.uleb128 0x12
 5400 03c7 06        		.uleb128 0x6
 5401 03c8 58        		.uleb128 0x58
 5402 03c9 0B        		.uleb128 0xb
 5403 03ca 59        		.uleb128 0x59
 5404 03cb 0B        		.uleb128 0xb
 5405 03cc 57        		.uleb128 0x57
 5406 03cd 0B        		.uleb128 0xb
 5407 03ce 01        		.uleb128 0x1
 5408 03cf 13        		.uleb128 0x13
 5409 03d0 00        		.byte	0
 5410 03d1 00        		.byte	0
 5411 03d2 40        		.uleb128 0x40
 5412 03d3 2E        		.uleb128 0x2e
 5413 03d4 01        		.byte	0x1
 5414 03d5 3F        		.uleb128 0x3f
 5415 03d6 19        		.uleb128 0x19
 5416 03d7 03        		.uleb128 0x3
 5417 03d8 0E        		.uleb128 0xe
 5418 03d9 3A        		.uleb128 0x3a
 5419 03da 0B        		.uleb128 0xb
 5420 03db 3B        		.uleb128 0x3b
 5421 03dc 0B        		.uleb128 0xb
 5422 03dd 39        		.uleb128 0x39
 5423 03de 0B        		.uleb128 0xb
 5424 03df 27        		.uleb128 0x27
 5425 03e0 19        		.uleb128 0x19
 5426 03e1 49        		.uleb128 0x49
 5427 03e2 13        		.uleb128 0x13
 5428 03e3 11        		.uleb128 0x11
 5429 03e4 01        		.uleb128 0x1
 5430 03e5 12        		.uleb128 0x12
 5431 03e6 06        		.uleb128 0x6
 5432 03e7 40        		.uleb128 0x40
 5433 03e8 18        		.uleb128 0x18
 5434 03e9 7A        		.uleb128 0x7a
 5435 03ea 19        		.uleb128 0x19
 5436 03eb 01        		.uleb128 0x1
 5437 03ec 13        		.uleb128 0x13
 5438 03ed 00        		.byte	0
 5439 03ee 00        		.byte	0
 5440 03ef 41        		.uleb128 0x41
 5441 03f0 05        		.uleb128 0x5
 5442 03f1 00        		.byte	0
 5443 03f2 03        		.uleb128 0x3
 5444 03f3 08        		.uleb128 0x8
 5445 03f4 3A        		.uleb128 0x3a
 5446 03f5 0B        		.uleb128 0xb
68K GAS  /tmp/ccmq8Bnl.s 			page 116


 5447 03f6 3B        		.uleb128 0x3b
 5448 03f7 0B        		.uleb128 0xb
 5449 03f8 39        		.uleb128 0x39
 5450 03f9 0B        		.uleb128 0xb
 5451 03fa 49        		.uleb128 0x49
 5452 03fb 13        		.uleb128 0x13
 5453 03fc 02        		.uleb128 0x2
 5454 03fd 18        		.uleb128 0x18
 5455 03fe 00        		.byte	0
 5456 03ff 00        		.byte	0
 5457 0400 42        		.uleb128 0x42
 5458 0401 2E        		.uleb128 0x2e
 5459 0402 01        		.byte	0x1
 5460 0403 3F        		.uleb128 0x3f
 5461 0404 19        		.uleb128 0x19
 5462 0405 03        		.uleb128 0x3
 5463 0406 0E        		.uleb128 0xe
 5464 0407 3A        		.uleb128 0x3a
 5465 0408 0B        		.uleb128 0xb
 5466 0409 3B        		.uleb128 0x3b
 5467 040a 0B        		.uleb128 0xb
 5468 040b 39        		.uleb128 0x39
 5469 040c 0B        		.uleb128 0xb
 5470 040d 27        		.uleb128 0x27
 5471 040e 19        		.uleb128 0x19
 5472 040f 20        		.uleb128 0x20
 5473 0410 0B        		.uleb128 0xb
 5474 0411 01        		.uleb128 0x1
 5475 0412 13        		.uleb128 0x13
 5476 0413 00        		.byte	0
 5477 0414 00        		.byte	0
 5478 0415 43        		.uleb128 0x43
 5479 0416 2E        		.uleb128 0x2e
 5480 0417 01        		.byte	0x1
 5481 0418 3F        		.uleb128 0x3f
 5482 0419 19        		.uleb128 0x19
 5483 041a 03        		.uleb128 0x3
 5484 041b 0E        		.uleb128 0xe
 5485 041c 3A        		.uleb128 0x3a
 5486 041d 0B        		.uleb128 0xb
 5487 041e 3B        		.uleb128 0x3b
 5488 041f 0B        		.uleb128 0xb
 5489 0420 39        		.uleb128 0x39
 5490 0421 0B        		.uleb128 0xb
 5491 0422 27        		.uleb128 0x27
 5492 0423 19        		.uleb128 0x19
 5493 0424 49        		.uleb128 0x49
 5494 0425 13        		.uleb128 0x13
 5495 0426 20        		.uleb128 0x20
 5496 0427 0B        		.uleb128 0xb
 5497 0428 01        		.uleb128 0x1
 5498 0429 13        		.uleb128 0x13
 5499 042a 00        		.byte	0
 5500 042b 00        		.byte	0
 5501 042c 44        		.uleb128 0x44
 5502 042d 0B        		.uleb128 0xb
 5503 042e 01        		.byte	0x1
68K GAS  /tmp/ccmq8Bnl.s 			page 117


 5504 042f 00        		.byte	0
 5505 0430 00        		.byte	0
 5506 0431 00        		.byte	0
 5507               		.section	.debug_loclists,"",@progbits
 5508 0000 0000 068C 		.long	.Ldebug_loc3-.Ldebug_loc2
 5509               	.Ldebug_loc2:
 5510 0004 0005      		.word	0x5
 5511 0006 04        		.byte	0x4
 5512 0007 00        		.byte	0
 5513 0008 0000 0000 		.long	0
 5514               	.Ldebug_loc0:
 5515               	.LVUS48:
 5516 000c 00        		.uleb128 .LVU484
 5517 000d 00        		.uleb128 .LVU485
 5518 000e 00        		.uleb128 .LVU485
 5519 000f 00        		.uleb128 .LVU502
 5520 0010 00        		.uleb128 .LVU502
 5521 0011 00        		.uleb128 .LVU504
 5522 0012 00        		.uleb128 .LVU504
 5523 0013 00        		.uleb128 .LVU520
 5524 0014 00        		.uleb128 .LVU520
 5525 0015 00        		.uleb128 .LVU533
 5526 0016 00        		.uleb128 .LVU545
 5527 0017 00        		.uleb128 .LVU546
 5528               	.LLST48:
 5529 0018 06        		.byte	0x6
 5530 0019 0000 0000 		.long	.LVL177
 5531 001d 04        		.byte	0x4
 5532 001e 00        		.uleb128 .LVL177-.LVL177
 5533 001f 15        		.uleb128 .LVL178-1-.LVL177
 5534 0020 01        		.uleb128 0x1
 5535 0021 50        		.byte	0x50
 5536 0022 04        		.byte	0x4
 5537 0023 15        		.uleb128 .LVL178-1-.LVL177
 5538 0024 8001      		.uleb128 .LVL185-.LVL177
 5539 0026 01        		.uleb128 0x1
 5540 0027 56        		.byte	0x56
 5541 0028 04        		.byte	0x4
 5542 0029 8001      		.uleb128 .LVL185-.LVL177
 5543 002b 9701      		.uleb128 .LVL186-1-.LVL177
 5544 002d 01        		.uleb128 0x1
 5545 002e 50        		.byte	0x50
 5546 002f 04        		.byte	0x4
 5547 0030 9701      		.uleb128 .LVL186-1-.LVL177
 5548 0032 BC01      		.uleb128 .LVL191-.LVL177
 5549 0034 01        		.uleb128 0x1
 5550 0035 56        		.byte	0x56
 5551 0036 04        		.byte	0x4
 5552 0037 BC01      		.uleb128 .LVL191-.LVL177
 5553 0039 9E02      		.uleb128 .LVL200-.LVL177
 5554 003b 01        		.uleb128 0x1
 5555 003c 5B        		.byte	0x5b
 5556 003d 04        		.byte	0x4
 5557 003e BC02      		.uleb128 .LVL203-.LVL177
 5558 0040 C602      		.uleb128 .LVL205-.LVL177
 5559 0042 01        		.uleb128 0x1
 5560 0043 5B        		.byte	0x5b
68K GAS  /tmp/ccmq8Bnl.s 			page 118


 5561 0044 00        		.byte	0
 5562               	.LVUS49:
 5563 0045 02        		.uleb128 .LVU473
 5564 0046 01        		.uleb128 .LVU513
 5565 0047 01        		.uleb128 .LVU513
 5566 0048 02        		.uleb128 .LVU538
 5567 0049 02        		.uleb128 .LVU538
 5568 004a 00        		.uleb128 .LVU545
 5569 004b 00        		.uleb128 .LVU545
 5570 004c 02        		.uleb128 .LVU551
 5571 004d 02        		.uleb128 .LVU551
 5572 004e 00        		.uleb128 0
 5573               	.LLST49:
 5574 004f 06        		.byte	0x6
 5575 0050 0000 0000 		.long	.LVL172
 5576 0054 04        		.byte	0x4
 5577 0055 00        		.uleb128 .LVL172-.LVL172
 5578 0056 F801      		.uleb128 .LVL188-.LVL172
 5579 0058 02        		.uleb128 0x2
 5580 0059 30        		.byte	0x30
 5581 005a 9F        		.byte	0x9f
 5582 005b 04        		.byte	0x4
 5583 005c F801      		.uleb128 .LVL188-.LVL172
 5584 005e F202      		.uleb128 .LVL201-.LVL172
 5585 0060 02        		.uleb128 0x2
 5586 0061 31        		.byte	0x31
 5587 0062 9F        		.byte	0x9f
 5588 0063 04        		.byte	0x4
 5589 0064 F202      		.uleb128 .LVL201-.LVL172
 5590 0066 8A03      		.uleb128 .LVL203-.LVL172
 5591 0068 02        		.uleb128 0x2
 5592 0069 30        		.byte	0x30
 5593 006a 9F        		.byte	0x9f
 5594 006b 04        		.byte	0x4
 5595 006c 8A03      		.uleb128 .LVL203-.LVL172
 5596 006e 9A03      		.uleb128 .LVL206-.LVL172
 5597 0070 02        		.uleb128 0x2
 5598 0071 31        		.byte	0x31
 5599 0072 9F        		.byte	0x9f
 5600 0073 04        		.byte	0x4
 5601 0074 9A03      		.uleb128 .LVL206-.LVL172
 5602 0076 B203      		.uleb128 .LFE13-.LVL172
 5603 0078 02        		.uleb128 0x2
 5604 0079 30        		.byte	0x30
 5605 007a 9F        		.byte	0x9f
 5606 007b 00        		.byte	0
 5607               	.LVUS51:
 5608 007c 01        		.uleb128 .LVU486
 5609 007d 00        		.uleb128 .LVU494
 5610 007e 01        		.uleb128 .LVU505
 5611 007f 00        		.uleb128 .LVU512
 5612               	.LLST51:
 5613 0080 06        		.byte	0x6
 5614 0081 0000 0000 		.long	.LVL178
 5615 0085 04        		.byte	0x4
 5616 0086 00        		.uleb128 .LVL178-.LVL178
 5617 0087 18        		.uleb128 .LVL181-.LVL178
68K GAS  /tmp/ccmq8Bnl.s 			page 119


 5618 0088 01        		.uleb128 0x1
 5619 0089 56        		.byte	0x56
 5620 008a 04        		.byte	0x4
 5621 008b 8201      		.uleb128 .LVL186-.LVL178
 5622 008d 9401      		.uleb128 .LVL188-.LVL178
 5623 008f 01        		.uleb128 0x1
 5624 0090 56        		.byte	0x56
 5625 0091 00        		.byte	0
 5626               	.LVUS52:
 5627 0092 04        		.uleb128 .LVU489
 5628 0093 00        		.uleb128 .LVU490
 5629 0094 00        		.uleb128 .LVU490
 5630 0095 00        		.uleb128 .LVU492
 5631 0096 00        		.uleb128 .LVU492
 5632 0097 01        		.uleb128 .LVU493
 5633 0098 01        		.uleb128 .LVU493
 5634 0099 00        		.uleb128 .LVU494
 5635 009a 04        		.uleb128 .LVU508
 5636 009b 00        		.uleb128 .LVU509
 5637 009c 00        		.uleb128 .LVU509
 5638 009d 00        		.uleb128 .LVU512
 5639               	.LLST52:
 5640 009e 06        		.byte	0x6
 5641 009f 0000 0000 		.long	.LVL178
 5642 00a3 04        		.byte	0x4
 5643 00a4 00        		.uleb128 .LVL178-.LVL178
 5644 00a5 0A        		.uleb128 .LVL179-.LVL178
 5645 00a6 02        		.uleb128 0x2
 5646 00a7 30        		.byte	0x30
 5647 00a8 9F        		.byte	0x9f
 5648 00a9 04        		.byte	0x4
 5649 00aa 0A        		.uleb128 .LVL179-.LVL178
 5650 00ab 10        		.uleb128 .LVL180-.LVL178
 5651 00ac 09        		.uleb128 0x9
 5652 00ad 78        		.byte	0x78
 5653 00ae 00        		.sleb128 0
 5654 00af 03        		.byte	0x3
 5655 00b0 0000 0000 		.long	valid_cells
 5656 00b4 1C        		.byte	0x1c
 5657 00b5 9F        		.byte	0x9f
 5658 00b6 04        		.byte	0x4
 5659 00b7 10        		.uleb128 .LVL180-.LVL178
 5660 00b8 10        		.uleb128 .LVL180-.LVL178
 5661 00b9 09        		.uleb128 0x9
 5662 00ba 78        		.byte	0x78
 5663 00bb 00        		.sleb128 0
 5664 00bc 03        		.byte	0x3
 5665 00bd 0000 0000 		.long	valid_cells+1
 5666 00c1 1C        		.byte	0x1c
 5667 00c2 9F        		.byte	0x9f
 5668 00c3 04        		.byte	0x4
 5669 00c4 10        		.uleb128 .LVL180-.LVL178
 5670 00c5 18        		.uleb128 .LVL181-.LVL178
 5671 00c6 09        		.uleb128 0x9
 5672 00c7 78        		.byte	0x78
 5673 00c8 00        		.sleb128 0
 5674 00c9 03        		.byte	0x3
68K GAS  /tmp/ccmq8Bnl.s 			page 120


 5675 00ca 0000 0000 		.long	valid_cells
 5676 00ce 1C        		.byte	0x1c
 5677 00cf 9F        		.byte	0x9f
 5678 00d0 04        		.byte	0x4
 5679 00d1 8201      		.uleb128 .LVL186-.LVL178
 5680 00d3 9001      		.uleb128 .LVL187-.LVL178
 5681 00d5 02        		.uleb128 0x2
 5682 00d6 30        		.byte	0x30
 5683 00d7 9F        		.byte	0x9f
 5684 00d8 04        		.byte	0x4
 5685 00d9 9001      		.uleb128 .LVL187-.LVL178
 5686 00db 9401      		.uleb128 .LVL188-.LVL178
 5687 00dd 09        		.uleb128 0x9
 5688 00de 78        		.byte	0x78
 5689 00df 00        		.sleb128 0
 5690 00e0 03        		.byte	0x3
 5691 00e1 0000 0000 		.long	valid_cells+1
 5692 00e5 1C        		.byte	0x1c
 5693 00e6 9F        		.byte	0x9f
 5694 00e7 00        		.byte	0
 5695               	.LVUS53:
 5696 00e8 00        		.uleb128 .LVU514
 5697 00e9 00        		.uleb128 .LVU519
 5698               	.LLST53:
 5699 00ea 08        		.byte	0x8
 5700 00eb 0000 0000 		.long	.LVL189
 5701 00ef 09        		.uleb128 .LVL190-1-.LVL189
 5702 00f0 05        		.uleb128 0x5
 5703 00f1 03        		.byte	0x3
 5704 00f2 0000 0000 		.long	player_x
 5705 00f6 00        		.byte	0
 5706               	.LVUS54:
 5707 00f7 00        		.uleb128 .LVU514
 5708 00f8 00        		.uleb128 .LVU522
 5709               	.LLST54:
 5710 00f9 08        		.byte	0x8
 5711 00fa 0000 0000 		.long	.LVL189
 5712 00fe 26        		.uleb128 .LVL193-.LVL189
 5713 00ff 01        		.uleb128 0x1
 5714 0100 5E        		.byte	0x5e
 5715 0101 00        		.byte	0
 5716               	.LVUS55:
 5717 0102 02        		.uleb128 .LVU516
 5718 0103 00        		.uleb128 .LVU522
 5719               	.LLST55:
 5720 0104 08        		.byte	0x8
 5721 0105 0000 0000 		.long	.LVL189
 5722 0109 26        		.uleb128 .LVL193-.LVL189
 5723 010a 05        		.uleb128 0x5
 5724 010b 7E        		.byte	0x7e
 5725 010c 00        		.sleb128 0
 5726 010d 33        		.byte	0x33
 5727 010e 1B        		.byte	0x1b
 5728 010f 9F        		.byte	0x9f
 5729 0110 00        		.byte	0
 5730               	.LVUS56:
 5731 0111 03        		.uleb128 .LVU517
68K GAS  /tmp/ccmq8Bnl.s 			page 121


 5732 0112 00        		.uleb128 .LVU522
 5733               	.LLST56:
 5734 0113 08        		.byte	0x8
 5735 0114 0000 0000 		.long	.LVL189
 5736 0118 26        		.uleb128 .LVL193-.LVL189
 5737 0119 09        		.uleb128 0x9
 5738 011a 7E        		.byte	0x7e
 5739 011b 00        		.sleb128 0
 5740 011c 33        		.byte	0x33
 5741 011d 14        		.byte	0x14
 5742 011e 14        		.byte	0x14
 5743 011f 1B        		.byte	0x1b
 5744 0120 1E        		.byte	0x1e
 5745 0121 1C        		.byte	0x1c
 5746 0122 9F        		.byte	0x9f
 5747 0123 00        		.byte	0
 5748               	.LVUS11:
 5749 0124 00        		.uleb128 .LVU165
 5750 0125 00        		.uleb128 .LVU167
 5751 0126 00        		.uleb128 .LVU167
 5752 0127 00        		.uleb128 .LVU178
 5753 0128 00        		.uleb128 .LVU178
 5754 0129 00        		.uleb128 .LVU180
 5755 012a 00        		.uleb128 .LVU180
 5756 012b 00        		.uleb128 .LVU190
 5757               	.LLST11:
 5758 012c 06        		.byte	0x6
 5759 012d 0000 0000 		.long	.LVL49
 5760 0131 04        		.byte	0x4
 5761 0132 00        		.uleb128 .LVL49-.LVL49
 5762 0133 07        		.uleb128 .LVL50-1-.LVL49
 5763 0134 01        		.uleb128 0x1
 5764 0135 50        		.byte	0x50
 5765 0136 04        		.byte	0x4
 5766 0137 07        		.uleb128 .LVL50-1-.LVL49
 5767 0138 2E        		.uleb128 .LVL55-.LVL49
 5768 0139 01        		.uleb128 0x1
 5769 013a 52        		.byte	0x52
 5770 013b 04        		.byte	0x4
 5771 013c 2E        		.uleb128 .LVL55-.LVL49
 5772 013d 35        		.uleb128 .LVL56-1-.LVL49
 5773 013e 01        		.uleb128 0x1
 5774 013f 50        		.byte	0x50
 5775 0140 04        		.byte	0x4
 5776 0141 35        		.uleb128 .LVL56-1-.LVL49
 5777 0142 6C        		.uleb128 .LVL59-.LVL49
 5778 0143 01        		.uleb128 0x1
 5779 0144 52        		.byte	0x52
 5780 0145 00        		.byte	0
 5781               	.LVUS12:
 5782 0146 00        		.uleb128 .LVU167
 5783 0147 00        		.uleb128 .LVU171
 5784 0148 00        		.uleb128 .LVU180
 5785 0149 00        		.uleb128 .LVU183
 5786               	.LLST12:
 5787 014a 06        		.byte	0x6
 5788 014b 0000 0000 		.long	.LVL50
68K GAS  /tmp/ccmq8Bnl.s 			page 122


 5789 014f 04        		.byte	0x4
 5790 0150 00        		.uleb128 .LVL50-.LVL50
 5791 0151 0F        		.uleb128 .LVL51-1-.LVL50
 5792 0152 01        		.uleb128 0x1
 5793 0153 50        		.byte	0x50
 5794 0154 04        		.byte	0x4
 5795 0155 2E        		.uleb128 .LVL56-.LVL50
 5796 0156 49        		.uleb128 .LVL57-1-.LVL50
 5797 0157 01        		.uleb128 0x1
 5798 0158 50        		.byte	0x50
 5799 0159 00        		.byte	0
 5800               	.LVUS38:
 5801 015a 00        		.uleb128 .LVU397
 5802 015b 00        		.uleb128 .LVU408
 5803 015c 00        		.uleb128 .LVU414
 5804 015d 00        		.uleb128 .LVU429
 5805 015e 00        		.uleb128 .LVU429
 5806 015f 00        		.uleb128 .LVU443
 5807 0160 00        		.uleb128 .LVU455
 5808 0161 00        		.uleb128 .LVU456
 5809               	.LLST38:
 5810 0162 06        		.byte	0x6
 5811 0163 0000 0000 		.long	.LVL144
 5812 0167 04        		.byte	0x4
 5813 0168 00        		.uleb128 .LVL144-.LVL144
 5814 0169 29        		.uleb128 .LVL148-1-.LVL144
 5815 016a 01        		.uleb128 0x1
 5816 016b 50        		.byte	0x50
 5817 016c 04        		.byte	0x4
 5818 016d 66        		.uleb128 .LVL151-.LVL144
 5819 016e 8101      		.uleb128 .LVL155-1-.LVL144
 5820 0170 01        		.uleb128 0x1
 5821 0171 50        		.byte	0x50
 5822 0172 04        		.byte	0x4
 5823 0173 8101      		.uleb128 .LVL155-1-.LVL144
 5824 0175 E801      		.uleb128 .LVL164-.LVL144
 5825 0177 01        		.uleb128 0x1
 5826 0178 5B        		.byte	0x5b
 5827 0179 04        		.byte	0x4
 5828 017a 8602      		.uleb128 .LVL167-.LVL144
 5829 017c 9002      		.uleb128 .LVL169-.LVL144
 5830 017e 01        		.uleb128 0x1
 5831 017f 5B        		.byte	0x5b
 5832 0180 00        		.byte	0
 5833               	.LVUS39:
 5834 0181 02        		.uleb128 .LVU386
 5835 0182 01        		.uleb128 .LVU423
 5836 0183 01        		.uleb128 .LVU423
 5837 0184 02        		.uleb128 .LVU448
 5838 0185 02        		.uleb128 .LVU448
 5839 0186 00        		.uleb128 .LVU455
 5840 0187 00        		.uleb128 .LVU455
 5841 0188 02        		.uleb128 .LVU461
 5842 0189 02        		.uleb128 .LVU461
 5843 018a 00        		.uleb128 0
 5844               	.LLST39:
 5845 018b 06        		.byte	0x6
68K GAS  /tmp/ccmq8Bnl.s 			page 123


 5846 018c 0000 0000 		.long	.LVL140
 5847 0190 04        		.byte	0x4
 5848 0191 00        		.uleb128 .LVL140-.LVL140
 5849 0192 C001      		.uleb128 .LVL153-.LVL140
 5850 0194 02        		.uleb128 0x2
 5851 0195 30        		.byte	0x30
 5852 0196 9F        		.byte	0x9f
 5853 0197 04        		.byte	0x4
 5854 0198 C001      		.uleb128 .LVL153-.LVL140
 5855 019a BA02      		.uleb128 .LVL165-.LVL140
 5856 019c 02        		.uleb128 0x2
 5857 019d 31        		.byte	0x31
 5858 019e 9F        		.byte	0x9f
 5859 019f 04        		.byte	0x4
 5860 01a0 BA02      		.uleb128 .LVL165-.LVL140
 5861 01a2 D202      		.uleb128 .LVL167-.LVL140
 5862 01a4 02        		.uleb128 0x2
 5863 01a5 30        		.byte	0x30
 5864 01a6 9F        		.byte	0x9f
 5865 01a7 04        		.byte	0x4
 5866 01a8 D202      		.uleb128 .LVL167-.LVL140
 5867 01aa E202      		.uleb128 .LVL170-.LVL140
 5868 01ac 02        		.uleb128 0x2
 5869 01ad 31        		.byte	0x31
 5870 01ae 9F        		.byte	0x9f
 5871 01af 04        		.byte	0x4
 5872 01b0 E202      		.uleb128 .LVL170-.LVL140
 5873 01b2 FA02      		.uleb128 .LFE11-.LVL140
 5874 01b4 02        		.uleb128 0x2
 5875 01b5 30        		.byte	0x30
 5876 01b6 9F        		.byte	0x9f
 5877 01b7 00        		.byte	0
 5878               	.LVUS41:
 5879 01b8 01        		.uleb128 .LVU398
 5880 01b9 00        		.uleb128 .LVU406
 5881 01ba 01        		.uleb128 .LVU415
 5882 01bb 00        		.uleb128 .LVU422
 5883               	.LLST41:
 5884 01bc 06        		.byte	0x6
 5885 01bd 0000 0000 		.long	.LVL144
 5886 01c1 04        		.byte	0x4
 5887 01c2 00        		.uleb128 .LVL144-.LVL144
 5888 01c3 14        		.uleb128 .LVL147-.LVL144
 5889 01c4 01        		.uleb128 0x1
 5890 01c5 50        		.byte	0x50
 5891 01c6 04        		.byte	0x4
 5892 01c7 66        		.uleb128 .LVL151-.LVL144
 5893 01c8 74        		.uleb128 .LVL153-.LVL144
 5894 01c9 01        		.uleb128 0x1
 5895 01ca 50        		.byte	0x50
 5896 01cb 00        		.byte	0
 5897               	.LVUS42:
 5898 01cc 04        		.uleb128 .LVU401
 5899 01cd 00        		.uleb128 .LVU402
 5900 01ce 00        		.uleb128 .LVU402
 5901 01cf 00        		.uleb128 .LVU404
 5902 01d0 00        		.uleb128 .LVU404
68K GAS  /tmp/ccmq8Bnl.s 			page 124


 5903 01d1 01        		.uleb128 .LVU405
 5904 01d2 01        		.uleb128 .LVU405
 5905 01d3 00        		.uleb128 .LVU406
 5906 01d4 04        		.uleb128 .LVU418
 5907 01d5 00        		.uleb128 .LVU419
 5908 01d6 00        		.uleb128 .LVU419
 5909 01d7 00        		.uleb128 .LVU422
 5910               	.LLST42:
 5911 01d8 06        		.byte	0x6
 5912 01d9 0000 0000 		.long	.LVL144
 5913 01dd 04        		.byte	0x4
 5914 01de 00        		.uleb128 .LVL144-.LVL144
 5915 01df 08        		.uleb128 .LVL145-.LVL144
 5916 01e0 02        		.uleb128 0x2
 5917 01e1 30        		.byte	0x30
 5918 01e2 9F        		.byte	0x9f
 5919 01e3 04        		.byte	0x4
 5920 01e4 08        		.uleb128 .LVL145-.LVL144
 5921 01e5 0C        		.uleb128 .LVL146-.LVL144
 5922 01e6 09        		.uleb128 0x9
 5923 01e7 78        		.byte	0x78
 5924 01e8 00        		.sleb128 0
 5925 01e9 03        		.byte	0x3
 5926 01ea 0000 0000 		.long	valid_cells
 5927 01ee 1C        		.byte	0x1c
 5928 01ef 9F        		.byte	0x9f
 5929 01f0 04        		.byte	0x4
 5930 01f1 0C        		.uleb128 .LVL146-.LVL144
 5931 01f2 0C        		.uleb128 .LVL146-.LVL144
 5932 01f3 09        		.uleb128 0x9
 5933 01f4 78        		.byte	0x78
 5934 01f5 00        		.sleb128 0
 5935 01f6 03        		.byte	0x3
 5936 01f7 0000 0000 		.long	valid_cells+1
 5937 01fb 1C        		.byte	0x1c
 5938 01fc 9F        		.byte	0x9f
 5939 01fd 04        		.byte	0x4
 5940 01fe 0C        		.uleb128 .LVL146-.LVL144
 5941 01ff 14        		.uleb128 .LVL147-.LVL144
 5942 0200 09        		.uleb128 0x9
 5943 0201 78        		.byte	0x78
 5944 0202 00        		.sleb128 0
 5945 0203 03        		.byte	0x3
 5946 0204 0000 0000 		.long	valid_cells
 5947 0208 1C        		.byte	0x1c
 5948 0209 9F        		.byte	0x9f
 5949 020a 04        		.byte	0x4
 5950 020b 66        		.uleb128 .LVL151-.LVL144
 5951 020c 70        		.uleb128 .LVL152-.LVL144
 5952 020d 02        		.uleb128 0x2
 5953 020e 30        		.byte	0x30
 5954 020f 9F        		.byte	0x9f
 5955 0210 04        		.byte	0x4
 5956 0211 70        		.uleb128 .LVL152-.LVL144
 5957 0212 74        		.uleb128 .LVL153-.LVL144
 5958 0213 09        		.uleb128 0x9
 5959 0214 78        		.byte	0x78
68K GAS  /tmp/ccmq8Bnl.s 			page 125


 5960 0215 00        		.sleb128 0
 5961 0216 03        		.byte	0x3
 5962 0217 0000 0000 		.long	valid_cells+1
 5963 021b 1C        		.byte	0x1c
 5964 021c 9F        		.byte	0x9f
 5965 021d 00        		.byte	0
 5966               	.LVUS43:
 5967 021e 00        		.uleb128 .LVU424
 5968 021f 00        		.uleb128 .LVU429
 5969               	.LLST43:
 5970 0220 08        		.byte	0x8
 5971 0221 0000 0000 		.long	.LVL154
 5972 0225 09        		.uleb128 .LVL155-1-.LVL154
 5973 0226 05        		.uleb128 0x5
 5974 0227 03        		.byte	0x3
 5975 0228 0000 0000 		.long	player_O
 5976 022c 00        		.byte	0
 5977               	.LVUS44:
 5978 022d 00        		.uleb128 .LVU424
 5979 022e 00        		.uleb128 .LVU432
 5980               	.LLST44:
 5981 022f 08        		.byte	0x8
 5982 0230 0000 0000 		.long	.LVL154
 5983 0234 26        		.uleb128 .LVL157-.LVL154
 5984 0235 01        		.uleb128 0x1
 5985 0236 5E        		.byte	0x5e
 5986 0237 00        		.byte	0
 5987               	.LVUS45:
 5988 0238 02        		.uleb128 .LVU426
 5989 0239 00        		.uleb128 .LVU432
 5990               	.LLST45:
 5991 023a 08        		.byte	0x8
 5992 023b 0000 0000 		.long	.LVL154
 5993 023f 26        		.uleb128 .LVL157-.LVL154
 5994 0240 05        		.uleb128 0x5
 5995 0241 7E        		.byte	0x7e
 5996 0242 00        		.sleb128 0
 5997 0243 33        		.byte	0x33
 5998 0244 1B        		.byte	0x1b
 5999 0245 9F        		.byte	0x9f
 6000 0246 00        		.byte	0
 6001               	.LVUS46:
 6002 0247 03        		.uleb128 .LVU427
 6003 0248 00        		.uleb128 .LVU432
 6004               	.LLST46:
 6005 0249 08        		.byte	0x8
 6006 024a 0000 0000 		.long	.LVL154
 6007 024e 26        		.uleb128 .LVL157-.LVL154
 6008 024f 09        		.uleb128 0x9
 6009 0250 7E        		.byte	0x7e
 6010 0251 00        		.sleb128 0
 6011 0252 33        		.byte	0x33
 6012 0253 14        		.byte	0x14
 6013 0254 14        		.byte	0x14
 6014 0255 1B        		.byte	0x1b
 6015 0256 1E        		.byte	0x1e
 6016 0257 1C        		.byte	0x1c
68K GAS  /tmp/ccmq8Bnl.s 			page 126


 6017 0258 9F        		.byte	0x9f
 6018 0259 00        		.byte	0
 6019               	.LVUS21:
 6020 025a 00        		.uleb128 .LVU272
 6021 025b 00        		.uleb128 .LVU274
 6022 025c 00        		.uleb128 .LVU274
 6023 025d 00        		.uleb128 .LVU334
 6024 025e 00        		.uleb128 .LVU335
 6025 025f 00        		.uleb128 .LVU349
 6026 0260 00        		.uleb128 .LVU350
 6027 0261 00        		.uleb128 .LVU366
 6028 0262 00        		.uleb128 .LVU367
 6029 0263 00        		.uleb128 .LVU373
 6030 0264 00        		.uleb128 .LVU374
 6031 0265 00        		.uleb128 .LVU380
 6032               	.LLST21:
 6033 0266 06        		.byte	0x6
 6034 0267 0000 0000 		.long	.LVL99
 6035 026b 04        		.byte	0x4
 6036 026c 00        		.uleb128 .LVL99-.LVL99
 6037 026d 0B        		.uleb128 .LVL100-1-.LVL99
 6038 026e 01        		.uleb128 0x1
 6039 026f 50        		.byte	0x50
 6040 0270 04        		.byte	0x4
 6041 0271 0B        		.uleb128 .LVL100-1-.LVL99
 6042 0272 9402      		.uleb128 .LVL121-.LVL99
 6043 0274 01        		.uleb128 0x1
 6044 0275 54        		.byte	0x54
 6045 0276 04        		.byte	0x4
 6046 0277 9602      		.uleb128 .LVL122-.LVL99
 6047 0279 C002      		.uleb128 .LVL127-.LVL99
 6048 027b 01        		.uleb128 0x1
 6049 027c 54        		.byte	0x54
 6050 027d 04        		.byte	0x4
 6051 027e C202      		.uleb128 .LVL128-.LVL99
 6052 0280 8E03      		.uleb128 .LVL133-.LVL99
 6053 0282 01        		.uleb128 0x1
 6054 0283 54        		.byte	0x54
 6055 0284 04        		.byte	0x4
 6056 0285 9003      		.uleb128 .LVL134-.LVL99
 6057 0287 9E03      		.uleb128 .LVL136-.LVL99
 6058 0289 01        		.uleb128 0x1
 6059 028a 54        		.byte	0x54
 6060 028b 04        		.byte	0x4
 6061 028c A003      		.uleb128 .LVL137-.LVL99
 6062 028e C803      		.uleb128 .LVL139-.LVL99
 6063 0290 01        		.uleb128 0x1
 6064 0291 54        		.byte	0x54
 6065 0292 00        		.byte	0
 6066               	.LVUS22:
 6067 0293 00        		.uleb128 .LVU275
 6068 0294 00        		.uleb128 .LVU277
 6069 0295 00        		.uleb128 .LVU277
 6070 0296 00        		.uleb128 .LVU334
 6071 0297 00        		.uleb128 .LVU335
 6072 0298 00        		.uleb128 .LVU349
 6073 0299 00        		.uleb128 .LVU350
68K GAS  /tmp/ccmq8Bnl.s 			page 127


 6074 029a 00        		.uleb128 .LVU366
 6075 029b 00        		.uleb128 .LVU367
 6076 029c 00        		.uleb128 .LVU373
 6077 029d 00        		.uleb128 .LVU374
 6078 029e 00        		.uleb128 .LVU380
 6079               	.LLST22:
 6080 029f 06        		.byte	0x6
 6081 02a0 0000 0000 		.long	.LVL101
 6082 02a4 04        		.byte	0x4
 6083 02a5 00        		.uleb128 .LVL101-.LVL101
 6084 02a6 04        		.uleb128 .LVL102-.LVL101
 6085 02a7 01        		.uleb128 0x1
 6086 02a8 50        		.byte	0x50
 6087 02a9 04        		.byte	0x4
 6088 02aa 04        		.uleb128 .LVL102-.LVL101
 6089 02ab 8402      		.uleb128 .LVL121-.LVL101
 6090 02ad 01        		.uleb128 0x1
 6091 02ae 5C        		.byte	0x5c
 6092 02af 04        		.byte	0x4
 6093 02b0 8602      		.uleb128 .LVL122-.LVL101
 6094 02b2 B002      		.uleb128 .LVL127-.LVL101
 6095 02b4 01        		.uleb128 0x1
 6096 02b5 5C        		.byte	0x5c
 6097 02b6 04        		.byte	0x4
 6098 02b7 B202      		.uleb128 .LVL128-.LVL101
 6099 02b9 FE02      		.uleb128 .LVL133-.LVL101
 6100 02bb 01        		.uleb128 0x1
 6101 02bc 5C        		.byte	0x5c
 6102 02bd 04        		.byte	0x4
 6103 02be 8003      		.uleb128 .LVL134-.LVL101
 6104 02c0 8E03      		.uleb128 .LVL136-.LVL101
 6105 02c2 01        		.uleb128 0x1
 6106 02c3 5C        		.byte	0x5c
 6107 02c4 04        		.byte	0x4
 6108 02c5 9003      		.uleb128 .LVL137-.LVL101
 6109 02c7 B803      		.uleb128 .LVL139-.LVL101
 6110 02c9 01        		.uleb128 0x1
 6111 02ca 5C        		.byte	0x5c
 6112 02cb 00        		.byte	0
 6113               	.LVUS23:
 6114 02cc 01        		.uleb128 .LVU276
 6115 02cd 00        		.uleb128 .LVU292
 6116 02ce 00        		.uleb128 .LVU292
 6117 02cf 00        		.uleb128 .LVU296
 6118 02d0 00        		.uleb128 .LVU296
 6119 02d1 00        		.uleb128 .LVU300
 6120 02d2 00        		.uleb128 .LVU300
 6121 02d3 00        		.uleb128 .LVU304
 6122 02d4 00        		.uleb128 .LVU304
 6123 02d5 00        		.uleb128 .LVU308
 6124 02d6 00        		.uleb128 .LVU308
 6125 02d7 00        		.uleb128 .LVU324
 6126 02d8 00        		.uleb128 .LVU324
 6127 02d9 00        		.uleb128 .LVU334
 6128 02da 00        		.uleb128 .LVU335
 6129 02db 00        		.uleb128 .LVU337
 6130 02dc 00        		.uleb128 .LVU337
68K GAS  /tmp/ccmq8Bnl.s 			page 128


 6131 02dd 00        		.uleb128 .LVU349
 6132 02de 00        		.uleb128 .LVU350
 6133 02df 00        		.uleb128 .LVU366
 6134 02e0 00        		.uleb128 .LVU367
 6135 02e1 00        		.uleb128 .LVU369
 6136 02e2 00        		.uleb128 .LVU374
 6137 02e3 00        		.uleb128 .LVU380
 6138               	.LLST23:
 6139 02e4 06        		.byte	0x6
 6140 02e5 0000 0000 		.long	.LVL101
 6141 02e9 04        		.byte	0x4
 6142 02ea 00        		.uleb128 .LVL101-.LVL101
 6143 02eb 9201      		.uleb128 .LVL109-.LVL101
 6144 02ed 08        		.uleb128 0x8
 6145 02ee 31        		.byte	0x31
 6146 02ef 9F        		.byte	0x9f
 6147 02f0 93        		.byte	0x93
 6148 02f1 04        		.uleb128 0x4
 6149 02f2 31        		.byte	0x31
 6150 02f3 9F        		.byte	0x9f
 6151 02f4 93        		.byte	0x93
 6152 02f5 04        		.uleb128 0x4
 6153 02f6 04        		.byte	0x4
 6154 02f7 9201      		.uleb128 .LVL109-.LVL101
 6155 02f9 A001      		.uleb128 .LVL110-.LVL101
 6156 02fb 06        		.uleb128 0x6
 6157 02fc 51        		.byte	0x51
 6158 02fd 93        		.byte	0x93
 6159 02fe 04        		.uleb128 0x4
 6160 02ff 52        		.byte	0x52
 6161 0300 93        		.byte	0x93
 6162 0301 04        		.uleb128 0x4
 6163 0302 04        		.byte	0x4
 6164 0303 A001      		.uleb128 .LVL110-.LVL101
 6165 0305 AC01      		.uleb128 .LVL111-.LVL101
 6166 0307 06        		.uleb128 0x6
 6167 0308 51        		.byte	0x51
 6168 0309 93        		.byte	0x93
 6169 030a 04        		.uleb128 0x4
 6170 030b 52        		.byte	0x52
 6171 030c 93        		.byte	0x93
 6172 030d 04        		.uleb128 0x4
 6173 030e 04        		.byte	0x4
 6174 030f AC01      		.uleb128 .LVL111-.LVL101
 6175 0311 B801      		.uleb128 .LVL112-.LVL101
 6176 0313 06        		.uleb128 0x6
 6177 0314 51        		.byte	0x51
 6178 0315 93        		.byte	0x93
 6179 0316 04        		.uleb128 0x4
 6180 0317 52        		.byte	0x52
 6181 0318 93        		.byte	0x93
 6182 0319 04        		.uleb128 0x4
 6183 031a 04        		.byte	0x4
 6184 031b B801      		.uleb128 .LVL112-.LVL101
 6185 031d C401      		.uleb128 .LVL113-.LVL101
 6186 031f 06        		.uleb128 0x6
 6187 0320 51        		.byte	0x51
68K GAS  /tmp/ccmq8Bnl.s 			page 129


 6188 0321 93        		.byte	0x93
 6189 0322 04        		.uleb128 0x4
 6190 0323 52        		.byte	0x52
 6191 0324 93        		.byte	0x93
 6192 0325 04        		.uleb128 0x4
 6193 0326 04        		.byte	0x4
 6194 0327 C401      		.uleb128 .LVL113-.LVL101
 6195 0329 E401      		.uleb128 .LVL119-.LVL101
 6196 032b 06        		.uleb128 0x6
 6197 032c 51        		.byte	0x51
 6198 032d 93        		.byte	0x93
 6199 032e 04        		.uleb128 0x4
 6200 032f 52        		.byte	0x52
 6201 0330 93        		.byte	0x93
 6202 0331 04        		.uleb128 0x4
 6203 0332 04        		.byte	0x4
 6204 0333 E401      		.uleb128 .LVL119-.LVL101
 6205 0335 8402      		.uleb128 .LVL121-.LVL101
 6206 0337 05        		.uleb128 0x5
 6207 0338 93        		.byte	0x93
 6208 0339 04        		.uleb128 0x4
 6209 033a 52        		.byte	0x52
 6210 033b 93        		.byte	0x93
 6211 033c 04        		.uleb128 0x4
 6212 033d 04        		.byte	0x4
 6213 033e 8602      		.uleb128 .LVL122-.LVL101
 6214 0340 8A02      		.uleb128 .LVL124-.LVL101
 6215 0342 06        		.uleb128 0x6
 6216 0343 51        		.byte	0x51
 6217 0344 93        		.byte	0x93
 6218 0345 04        		.uleb128 0x4
 6219 0346 52        		.byte	0x52
 6220 0347 93        		.byte	0x93
 6221 0348 04        		.uleb128 0x4
 6222 0349 04        		.byte	0x4
 6223 034a 8A02      		.uleb128 .LVL124-.LVL101
 6224 034c B002      		.uleb128 .LVL127-.LVL101
 6225 034e 05        		.uleb128 0x5
 6226 034f 93        		.byte	0x93
 6227 0350 04        		.uleb128 0x4
 6228 0351 52        		.byte	0x52
 6229 0352 93        		.byte	0x93
 6230 0353 04        		.uleb128 0x4
 6231 0354 04        		.byte	0x4
 6232 0355 B202      		.uleb128 .LVL128-.LVL101
 6233 0357 FE02      		.uleb128 .LVL133-.LVL101
 6234 0359 05        		.uleb128 0x5
 6235 035a 93        		.byte	0x93
 6236 035b 04        		.uleb128 0x4
 6237 035c 52        		.byte	0x52
 6238 035d 93        		.byte	0x93
 6239 035e 04        		.uleb128 0x4
 6240 035f 04        		.byte	0x4
 6241 0360 8003      		.uleb128 .LVL134-.LVL101
 6242 0362 8203      		.uleb128 .LVL135-.LVL101
 6243 0364 05        		.uleb128 0x5
 6244 0365 93        		.byte	0x93
68K GAS  /tmp/ccmq8Bnl.s 			page 130


 6245 0366 04        		.uleb128 0x4
 6246 0367 52        		.byte	0x52
 6247 0368 93        		.byte	0x93
 6248 0369 04        		.uleb128 0x4
 6249 036a 04        		.byte	0x4
 6250 036b 9003      		.uleb128 .LVL137-.LVL101
 6251 036d B803      		.uleb128 .LVL139-.LVL101
 6252 036f 05        		.uleb128 0x5
 6253 0370 93        		.byte	0x93
 6254 0371 04        		.uleb128 0x4
 6255 0372 52        		.byte	0x52
 6256 0373 93        		.byte	0x93
 6257 0374 04        		.uleb128 0x4
 6258 0375 00        		.byte	0
 6259               	.LVUS25:
 6260 0376 02        		.uleb128 .LVU280
 6261 0377 00        		.uleb128 .LVU281
 6262               	.LLST25:
 6263 0378 08        		.byte	0x8
 6264 0379 0000 0000 		.long	.LVL103
 6265 037d 10        		.uleb128 .LVL104-.LVL103
 6266 037e 02        		.uleb128 0x2
 6267 037f 30        		.byte	0x30
 6268 0380 9F        		.byte	0x9f
 6269 0381 00        		.byte	0
 6270               	.LVUS27:
 6271 0382 00        		.uleb128 .LVU281
 6272 0383 00        		.uleb128 .LVU283
 6273 0384 00        		.uleb128 .LVU283
 6274 0385 01        		.uleb128 .LVU285
 6275 0386 01        		.uleb128 .LVU285
 6276 0387 00        		.uleb128 .LVU286
 6277 0388 00        		.uleb128 .LVU286
 6278 0389 00        		.uleb128 .LVU290
 6279               	.LLST27:
 6280 038a 06        		.byte	0x6
 6281 038b 0000 0000 		.long	.LVL104
 6282 038f 04        		.byte	0x4
 6283 0390 00        		.uleb128 .LVL104-.LVL104
 6284 0391 04        		.uleb128 .LVL105-.LVL104
 6285 0392 02        		.uleb128 0x2
 6286 0393 30        		.byte	0x30
 6287 0394 9F        		.byte	0x9f
 6288 0395 04        		.byte	0x4
 6289 0396 04        		.uleb128 .LVL105-.LVL104
 6290 0397 10        		.uleb128 .LVL106-.LVL104
 6291 0398 05        		.uleb128 0x5
 6292 0399 33        		.byte	0x33
 6293 039a 72        		.byte	0x72
 6294 039b 00        		.sleb128 0
 6295 039c 1C        		.byte	0x1c
 6296 039d 9F        		.byte	0x9f
 6297 039e 04        		.byte	0x4
 6298 039f 10        		.uleb128 .LVL106-.LVL104
 6299 03a0 12        		.uleb128 .LVL107-.LVL104
 6300 03a1 05        		.uleb128 0x5
 6301 03a2 34        		.byte	0x34
68K GAS  /tmp/ccmq8Bnl.s 			page 131


 6302 03a3 72        		.byte	0x72
 6303 03a4 00        		.sleb128 0
 6304 03a5 1C        		.byte	0x1c
 6305 03a6 9F        		.byte	0x9f
 6306 03a7 04        		.byte	0x4
 6307 03a8 12        		.uleb128 .LVL107-.LVL104
 6308 03a9 70        		.uleb128 .LVL108-.LVL104
 6309 03aa 05        		.uleb128 0x5
 6310 03ab 33        		.byte	0x33
 6311 03ac 72        		.byte	0x72
 6312 03ad 00        		.sleb128 0
 6313 03ae 1C        		.byte	0x1c
 6314 03af 9F        		.byte	0x9f
 6315 03b0 00        		.byte	0
 6316               	.LVUS29:
 6317 03b1 00        		.uleb128 .LVU292
 6318 03b2 01        		.uleb128 .LVU309
 6319 03b3 01        		.uleb128 .LVU309
 6320 03b4 00        		.uleb128 .LVU310
 6321 03b5 00        		.uleb128 .LVU310
 6322 03b6 00        		.uleb128 .LVU315
 6323 03b7 00        		.uleb128 .LVU335
 6324 03b8 00        		.uleb128 .LVU336
 6325               	.LLST29:
 6326 03b9 06        		.byte	0x6
 6327 03ba 0000 0000 		.long	.LVL109
 6328 03be 04        		.byte	0x4
 6329 03bf 00        		.uleb128 .LVL109-.LVL109
 6330 03c0 32        		.uleb128 .LVL113-.LVL109
 6331 03c1 01        		.uleb128 0x1
 6332 03c2 50        		.byte	0x50
 6333 03c3 04        		.byte	0x4
 6334 03c4 32        		.uleb128 .LVL113-.LVL109
 6335 03c5 40        		.uleb128 .LVL114-.LVL109
 6336 03c6 03        		.uleb128 0x3
 6337 03c7 70        		.byte	0x70
 6338 03c8 01        		.sleb128 1
 6339 03c9 9F        		.byte	0x9f
 6340 03ca 04        		.byte	0x4
 6341 03cb 40        		.uleb128 .LVL114-.LVL109
 6342 03cc 44        		.uleb128 .LVL116-.LVL109
 6343 03cd 03        		.uleb128 0x3
 6344 03ce 70        		.byte	0x70
 6345 03cf 03        		.sleb128 3
 6346 03d0 9F        		.byte	0x9f
 6347 03d1 04        		.byte	0x4
 6348 03d2 74        		.uleb128 .LVL122-.LVL109
 6349 03d3 76        		.uleb128 .LVL123-.LVL109
 6350 03d4 03        		.uleb128 0x3
 6351 03d5 70        		.byte	0x70
 6352 03d6 03        		.sleb128 3
 6353 03d7 9F        		.byte	0x9f
 6354 03d8 00        		.byte	0
 6355               	.LVUS31:
 6356 03d9 00        		.uleb128 .LVU311
 6357 03da 01        		.uleb128 .LVU317
 6358 03db 01        		.uleb128 .LVU317
68K GAS  /tmp/ccmq8Bnl.s 			page 132


 6359 03dc 01        		.uleb128 .LVU321
 6360 03dd 01        		.uleb128 .LVU321
 6361 03de 00        		.uleb128 .LVU335
 6362 03df 00        		.uleb128 .LVU337
 6363 03e0 00        		.uleb128 .LVU367
 6364 03e1 00        		.uleb128 .LVU374
 6365 03e2 00        		.uleb128 0
 6366               	.LLST31:
 6367 03e3 06        		.byte	0x6
 6368 03e4 0000 0000 		.long	.LVL115
 6369 03e8 04        		.byte	0x4
 6370 03e9 00        		.uleb128 .LVL115-.LVL115
 6371 03ea 08        		.uleb128 .LVL117-.LVL115
 6372 03eb 02        		.uleb128 0x2
 6373 03ec 30        		.byte	0x30
 6374 03ed 9F        		.byte	0x9f
 6375 03ee 04        		.byte	0x4
 6376 03ef 08        		.uleb128 .LVL117-.LVL115
 6377 03f0 0E        		.uleb128 .LVL118-.LVL115
 6378 03f1 02        		.uleb128 0x2
 6379 03f2 31        		.byte	0x31
 6380 03f3 9F        		.byte	0x9f
 6381 03f4 04        		.byte	0x4
 6382 03f5 0E        		.uleb128 .LVL118-.LVL115
 6383 03f6 32        		.uleb128 .LVL122-.LVL115
 6384 03f7 02        		.uleb128 0x2
 6385 03f8 32        		.byte	0x32
 6386 03f9 9F        		.byte	0x9f
 6387 03fa 04        		.byte	0x4
 6388 03fb 36        		.uleb128 .LVL124-.LVL115
 6389 03fc AC01      		.uleb128 .LVL134-.LVL115
 6390 03fe 02        		.uleb128 0x2
 6391 03ff 32        		.byte	0x32
 6392 0400 9F        		.byte	0x9f
 6393 0401 04        		.byte	0x4
 6394 0402 BC01      		.uleb128 .LVL137-.LVL115
 6395 0404 E601      		.uleb128 .LFE10-.LVL115
 6396 0406 02        		.uleb128 0x2
 6397 0407 32        		.byte	0x32
 6398 0408 9F        		.byte	0x9f
 6399 0409 00        		.byte	0
 6400               	.LVUS35:
 6401 040a 00        		.uleb128 .LVU352
 6402 040b 00        		.uleb128 .LVU357
 6403 040c 00        		.uleb128 .LVU357
 6404 040d 00        		.uleb128 .LVU361
 6405               	.LLST35:
 6406 040e 06        		.byte	0x6
 6407 040f 0000 0000 		.long	.LVL129
 6408 0413 04        		.byte	0x4
 6409 0414 00        		.uleb128 .LVL129-.LVL129
 6410 0415 10        		.uleb128 .LVL131-.LVL129
 6411 0416 11        		.uleb128 0x11
 6412 0417 03        		.byte	0x3
 6413 0418 0000 0000 		.long	b_board
 6414 041c 06        		.byte	0x6
 6415 041d 70        		.byte	0x70
68K GAS  /tmp/ccmq8Bnl.s 			page 133


 6416 041e 00        		.sleb128 0
 6417 041f 22        		.byte	0x22
 6418 0420 03        		.byte	0x3
 6419 0421 0000 0000 		.long	b_board+32
 6420 0425 06        		.byte	0x6
 6421 0426 22        		.byte	0x22
 6422 0427 9F        		.byte	0x9f
 6423 0428 04        		.byte	0x4
 6424 0429 10        		.uleb128 .LVL131-.LVL129
 6425 042a 35        		.uleb128 .LVL132-1-.LVL129
 6426 042b 15        		.uleb128 0x15
 6427 042c 03        		.byte	0x3
 6428 042d 0000 0000 		.long	b_board
 6429 0431 06        		.byte	0x6
 6430 0432 03        		.byte	0x3
 6431 0433 0000 0000 		.long	b_board+16
 6432 0437 06        		.byte	0x6
 6433 0438 22        		.byte	0x22
 6434 0439 03        		.byte	0x3
 6435 043a 0000 0000 		.long	b_board+32
 6436 043e 06        		.byte	0x6
 6437 043f 22        		.byte	0x22
 6438 0440 9F        		.byte	0x9f
 6439 0441 00        		.byte	0
 6440               	.LVUS36:
 6441 0442 00        		.uleb128 .LVU355
 6442 0443 00        		.uleb128 .LVU361
 6443               	.LLST36:
 6444 0444 08        		.byte	0x8
 6445 0445 0000 0000 		.long	.LVL130
 6446 0449 27        		.uleb128 .LVL132-1-.LVL130
 6447 044a 01        		.uleb128 0x1
 6448 044b 51        		.byte	0x51
 6449 044c 00        		.byte	0
 6450               	.LVUS33:
 6451 044d 01        		.uleb128 .LVU329
 6452 044e 00        		.uleb128 .LVU334
 6453 044f 00        		.uleb128 .LVU334
 6454 0450 00        		.uleb128 .LVU335
 6455 0451 00        		.uleb128 .LVU374
 6456 0452 00        		.uleb128 .LVU375
 6457               	.LLST33:
 6458 0453 06        		.byte	0x6
 6459 0454 0000 0000 		.long	.LVL120
 6460 0458 04        		.byte	0x4
 6461 0459 00        		.uleb128 .LVL120-.LVL120
 6462 045a 16        		.uleb128 .LVL121-.LVL120
 6463 045b 15        		.uleb128 0x15
 6464 045c 03        		.byte	0x3
 6465 045d 0000 0000 		.long	b_board
 6466 0461 06        		.byte	0x6
 6467 0462 03        		.byte	0x3
 6468 0463 0000 0000 		.long	b_board+16
 6469 0467 06        		.byte	0x6
 6470 0468 22        		.byte	0x22
 6471 0469 03        		.byte	0x3
 6472 046a 0000 0000 		.long	b_board+32
68K GAS  /tmp/ccmq8Bnl.s 			page 134


 6473 046e 06        		.byte	0x6
 6474 046f 22        		.byte	0x22
 6475 0470 9F        		.byte	0x9f
 6476 0471 04        		.byte	0x4
 6477 0472 16        		.uleb128 .LVL121-.LVL120
 6478 0473 18        		.uleb128 .LVL122-.LVL120
 6479 0474 15        		.uleb128 0x15
 6480 0475 03        		.byte	0x3
 6481 0476 0000 0000 		.long	b_board
 6482 047a 06        		.byte	0x6
 6483 047b 03        		.byte	0x3
 6484 047c 0000 0000 		.long	b_board+16
 6485 0480 06        		.byte	0x6
 6486 0481 22        		.byte	0x22
 6487 0482 03        		.byte	0x3
 6488 0483 0000 0000 		.long	b_board+32
 6489 0487 06        		.byte	0x6
 6490 0488 22        		.byte	0x22
 6491 0489 9F        		.byte	0x9f
 6492 048a 04        		.byte	0x4
 6493 048b A201      		.uleb128 .LVL137-.LVL120
 6494 048d B701      		.uleb128 .LVL138-1-.LVL120
 6495 048f 15        		.uleb128 0x15
 6496 0490 03        		.byte	0x3
 6497 0491 0000 0000 		.long	b_board
 6498 0495 06        		.byte	0x6
 6499 0496 03        		.byte	0x3
 6500 0497 0000 0000 		.long	b_board+16
 6501 049b 06        		.byte	0x6
 6502 049c 22        		.byte	0x22
 6503 049d 03        		.byte	0x3
 6504 049e 0000 0000 		.long	b_board+32
 6505 04a2 06        		.byte	0x6
 6506 04a3 22        		.byte	0x22
 6507 04a4 9F        		.byte	0x9f
 6508 04a5 00        		.byte	0
 6509               	.LVUS34:
 6510 04a6 01        		.uleb128 .LVU342
 6511 04a7 00        		.uleb128 .LVU346
 6512               	.LLST34:
 6513 04a8 08        		.byte	0x8
 6514 04a9 0000 0000 		.long	.LVL125
 6515 04ad 16        		.uleb128 .LVL126-.LVL125
 6516 04ae 15        		.uleb128 0x15
 6517 04af 03        		.byte	0x3
 6518 04b0 0000 0000 		.long	b_board+8
 6519 04b4 06        		.byte	0x6
 6520 04b5 03        		.byte	0x3
 6521 04b6 0000 0000 		.long	b_board+16
 6522 04ba 06        		.byte	0x6
 6523 04bb 22        		.byte	0x22
 6524 04bc 03        		.byte	0x3
 6525 04bd 0000 0000 		.long	b_board+24
 6526 04c1 06        		.byte	0x6
 6527 04c2 22        		.byte	0x22
 6528 04c3 9F        		.byte	0x9f
 6529 04c4 00        		.byte	0
68K GAS  /tmp/ccmq8Bnl.s 			page 135


 6530               	.LVUS19:
 6531 04c5 02        		.uleb128 .LVU248
 6532 04c6 00        		.uleb128 .LVU249
 6533               	.LLST19:
 6534 04c7 08        		.byte	0x8
 6535 04c8 0000 0000 		.long	.LVL92
 6536 04cc 0C        		.uleb128 .LVL93-.LVL92
 6537 04cd 02        		.uleb128 0x2
 6538 04ce 30        		.byte	0x30
 6539 04cf 9F        		.byte	0x9f
 6540 04d0 00        		.byte	0
 6541               	.LVUS20:
 6542 04d1 00        		.uleb128 .LVU249
 6543 04d2 01        		.uleb128 .LVU254
 6544 04d3 01        		.uleb128 .LVU254
 6545 04d4 01        		.uleb128 .LVU259
 6546 04d5 01        		.uleb128 .LVU259
 6547 04d6 01        		.uleb128 .LVU264
 6548 04d7 01        		.uleb128 .LVU264
 6549 04d8 00        		.uleb128 0
 6550               	.LLST20:
 6551 04d9 06        		.byte	0x6
 6552 04da 0000 0000 		.long	.LVL93
 6553 04de 04        		.byte	0x4
 6554 04df 00        		.uleb128 .LVL93-.LVL93
 6555 04e0 0C        		.uleb128 .LVL94-.LVL93
 6556 04e1 02        		.uleb128 0x2
 6557 04e2 30        		.byte	0x30
 6558 04e3 9F        		.byte	0x9f
 6559 04e4 04        		.byte	0x4
 6560 04e5 0C        		.uleb128 .LVL94-.LVL93
 6561 04e6 1C        		.uleb128 .LVL95-.LVL93
 6562 04e7 02        		.uleb128 0x2
 6563 04e8 31        		.byte	0x31
 6564 04e9 9F        		.byte	0x9f
 6565 04ea 04        		.byte	0x4
 6566 04eb 1C        		.uleb128 .LVL95-.LVL93
 6567 04ec 2C        		.uleb128 .LVL96-.LVL93
 6568 04ed 02        		.uleb128 0x2
 6569 04ee 32        		.byte	0x32
 6570 04ef 9F        		.byte	0x9f
 6571 04f0 04        		.byte	0x4
 6572 04f1 2C        		.uleb128 .LVL96-.LVL93
 6573 04f2 3C        		.uleb128 .LFE9-.LVL93
 6574 04f3 02        		.uleb128 0x2
 6575 04f4 33        		.byte	0x33
 6576 04f5 9F        		.byte	0x9f
 6577 04f6 00        		.byte	0
 6578               	.LVUS16:
 6579 04f7 02        		.uleb128 .LVU220
 6580 04f8 00        		.uleb128 .LVU221
 6581               	.LLST16:
 6582 04f9 08        		.byte	0x8
 6583 04fa 0000 0000 		.long	.LVL78
 6584 04fe 10        		.uleb128 .LVL79-.LVL78
 6585 04ff 02        		.uleb128 0x2
 6586 0500 30        		.byte	0x30
68K GAS  /tmp/ccmq8Bnl.s 			page 136


 6587 0501 9F        		.byte	0x9f
 6588 0502 00        		.byte	0
 6589               	.LVUS18:
 6590 0503 00        		.uleb128 .LVU221
 6591 0504 00        		.uleb128 .LVU226
 6592               	.LLST18:
 6593 0505 08        		.byte	0x8
 6594 0506 0000 0000 		.long	.LVL79
 6595 050a 34        		.uleb128 .LVL82-.LVL79
 6596 050b 02        		.uleb128 0x2
 6597 050c 30        		.byte	0x30
 6598 050d 9F        		.byte	0x9f
 6599 050e 00        		.byte	0
 6600               	.LVUS6:
 6601 050f 02        		.uleb128 .LVU83
 6602 0510 00        		.uleb128 .LVU85
 6603               	.LLST6:
 6604 0511 08        		.byte	0x8
 6605 0512 0000 0000 		.long	.LVL28
 6606 0516 5A        		.uleb128 .LVL29-.LVL28
 6607 0517 02        		.uleb128 0x2
 6608 0518 30        		.byte	0x30
 6609 0519 9F        		.byte	0x9f
 6610 051a 00        		.byte	0
 6611               	.LVUS7:
 6612 051b 00        		.uleb128 .LVU85
 6613 051c 04        		.uleb128 .LVU103
 6614 051d 04        		.uleb128 .LVU103
 6615 051e 04        		.uleb128 .LVU121
 6616 051f 04        		.uleb128 .LVU121
 6617 0520 04        		.uleb128 .LVU139
 6618 0521 04        		.uleb128 .LVU139
 6619 0522 00        		.uleb128 .LVU141
 6620               	.LLST7:
 6621 0523 06        		.byte	0x6
 6622 0524 0000 0000 		.long	.LVL29
 6623 0528 04        		.byte	0x4
 6624 0529 00        		.uleb128 .LVL29-.LVL29
 6625 052a 18        		.uleb128 .LVL32-.LVL29
 6626 052b 02        		.uleb128 0x2
 6627 052c 30        		.byte	0x30
 6628 052d 9F        		.byte	0x9f
 6629 052e 04        		.byte	0x4
 6630 052f 18        		.uleb128 .LVL32-.LVL29
 6631 0530 30        		.uleb128 .LVL35-.LVL29
 6632 0531 02        		.uleb128 0x2
 6633 0532 31        		.byte	0x31
 6634 0533 9F        		.byte	0x9f
 6635 0534 04        		.byte	0x4
 6636 0535 30        		.uleb128 .LVL35-.LVL29
 6637 0536 48        		.uleb128 .LVL38-.LVL29
 6638 0537 02        		.uleb128 0x2
 6639 0538 32        		.byte	0x32
 6640 0539 9F        		.byte	0x9f
 6641 053a 04        		.byte	0x4
 6642 053b 48        		.uleb128 .LVL38-.LVL29
 6643 053c 7E        		.uleb128 .LVL39-.LVL29
68K GAS  /tmp/ccmq8Bnl.s 			page 137


 6644 053d 02        		.uleb128 0x2
 6645 053e 33        		.byte	0x33
 6646 053f 9F        		.byte	0x9f
 6647 0540 00        		.byte	0
 6648               	.LVUS9:
 6649 0541 00        		.uleb128 .LVU85
 6650 0542 02        		.uleb128 .LVU91
 6651 0543 02        		.uleb128 .LVU91
 6652 0544 02        		.uleb128 .LVU96
 6653 0545 02        		.uleb128 .LVU96
 6654 0546 02        		.uleb128 .LVU101
 6655 0547 02        		.uleb128 .LVU101
 6656 0548 05        		.uleb128 .LVU104
 6657 0549 05        		.uleb128 .LVU104
 6658 054a 02        		.uleb128 .LVU109
 6659 054b 02        		.uleb128 .LVU109
 6660 054c 02        		.uleb128 .LVU114
 6661 054d 02        		.uleb128 .LVU114
 6662 054e 02        		.uleb128 .LVU119
 6663 054f 02        		.uleb128 .LVU119
 6664 0550 05        		.uleb128 .LVU122
 6665 0551 05        		.uleb128 .LVU122
 6666 0552 02        		.uleb128 .LVU127
 6667 0553 02        		.uleb128 .LVU127
 6668 0554 02        		.uleb128 .LVU132
 6669 0555 02        		.uleb128 .LVU132
 6670 0556 02        		.uleb128 .LVU137
 6671 0557 02        		.uleb128 .LVU137
 6672 0558 00        		.uleb128 .LVU141
 6673               	.LLST9:
 6674 0559 06        		.byte	0x6
 6675 055a 0000 0000 		.long	.LVL29
 6676 055e 04        		.byte	0x4
 6677 055f 00        		.uleb128 .LVL29-.LVL29
 6678 0560 08        		.uleb128 .LVL30-.LVL29
 6679 0561 02        		.uleb128 0x2
 6680 0562 30        		.byte	0x30
 6681 0563 9F        		.byte	0x9f
 6682 0564 04        		.byte	0x4
 6683 0565 08        		.uleb128 .LVL30-.LVL29
 6684 0566 10        		.uleb128 .LVL31-.LVL29
 6685 0567 02        		.uleb128 0x2
 6686 0568 31        		.byte	0x31
 6687 0569 9F        		.byte	0x9f
 6688 056a 04        		.byte	0x4
 6689 056b 10        		.uleb128 .LVL31-.LVL29
 6690 056c 18        		.uleb128 .LVL32-.LVL29
 6691 056d 02        		.uleb128 0x2
 6692 056e 32        		.byte	0x32
 6693 056f 9F        		.byte	0x9f
 6694 0570 04        		.byte	0x4
 6695 0571 18        		.uleb128 .LVL32-.LVL29
 6696 0572 18        		.uleb128 .LVL32-.LVL29
 6697 0573 02        		.uleb128 0x2
 6698 0574 33        		.byte	0x33
 6699 0575 9F        		.byte	0x9f
 6700 0576 04        		.byte	0x4
68K GAS  /tmp/ccmq8Bnl.s 			page 138


 6701 0577 18        		.uleb128 .LVL32-.LVL29
 6702 0578 20        		.uleb128 .LVL33-.LVL29
 6703 0579 02        		.uleb128 0x2
 6704 057a 30        		.byte	0x30
 6705 057b 9F        		.byte	0x9f
 6706 057c 04        		.byte	0x4
 6707 057d 20        		.uleb128 .LVL33-.LVL29
 6708 057e 28        		.uleb128 .LVL34-.LVL29
 6709 057f 02        		.uleb128 0x2
 6710 0580 31        		.byte	0x31
 6711 0581 9F        		.byte	0x9f
 6712 0582 04        		.byte	0x4
 6713 0583 28        		.uleb128 .LVL34-.LVL29
 6714 0584 30        		.uleb128 .LVL35-.LVL29
 6715 0585 02        		.uleb128 0x2
 6716 0586 32        		.byte	0x32
 6717 0587 9F        		.byte	0x9f
 6718 0588 04        		.byte	0x4
 6719 0589 30        		.uleb128 .LVL35-.LVL29
 6720 058a 30        		.uleb128 .LVL35-.LVL29
 6721 058b 02        		.uleb128 0x2
 6722 058c 33        		.byte	0x33
 6723 058d 9F        		.byte	0x9f
 6724 058e 04        		.byte	0x4
 6725 058f 30        		.uleb128 .LVL35-.LVL29
 6726 0590 38        		.uleb128 .LVL36-.LVL29
 6727 0591 02        		.uleb128 0x2
 6728 0592 30        		.byte	0x30
 6729 0593 9F        		.byte	0x9f
 6730 0594 04        		.byte	0x4
 6731 0595 38        		.uleb128 .LVL36-.LVL29
 6732 0596 40        		.uleb128 .LVL37-.LVL29
 6733 0597 02        		.uleb128 0x2
 6734 0598 31        		.byte	0x31
 6735 0599 9F        		.byte	0x9f
 6736 059a 04        		.byte	0x4
 6737 059b 40        		.uleb128 .LVL37-.LVL29
 6738 059c 48        		.uleb128 .LVL38-.LVL29
 6739 059d 02        		.uleb128 0x2
 6740 059e 32        		.byte	0x32
 6741 059f 9F        		.byte	0x9f
 6742 05a0 04        		.byte	0x4
 6743 05a1 48        		.uleb128 .LVL38-.LVL29
 6744 05a2 7E        		.uleb128 .LVL39-.LVL29
 6745 05a3 02        		.uleb128 0x2
 6746 05a4 33        		.byte	0x33
 6747 05a5 9F        		.byte	0x9f
 6748 05a6 00        		.byte	0
 6749               	.LVUS4:
 6750 05a7 02        		.uleb128 .LVU57
 6751 05a8 00        		.uleb128 .LVU59
 6752 05a9 00        		.uleb128 .LVU59
 6753 05aa 00        		.uleb128 .LVU63
 6754 05ab 00        		.uleb128 .LVU65
 6755 05ac 00        		.uleb128 .LVU69
 6756 05ad 00        		.uleb128 .LVU69
 6757 05ae 00        		.uleb128 .LVU70
68K GAS  /tmp/ccmq8Bnl.s 			page 139


 6758               	.LLST4:
 6759 05af 06        		.byte	0x6
 6760 05b0 0000 0000 		.long	.LVL21
 6761 05b4 04        		.byte	0x4
 6762 05b5 00        		.uleb128 .LVL21-.LVL21
 6763 05b6 10        		.uleb128 .LVL22-.LVL21
 6764 05b7 02        		.uleb128 0x2
 6765 05b8 30        		.byte	0x30
 6766 05b9 9F        		.byte	0x9f
 6767 05ba 04        		.byte	0x4
 6768 05bb 10        		.uleb128 .LVL22-.LVL21
 6769 05bc 1C        		.uleb128 .LVL24-.LVL21
 6770 05bd 01        		.uleb128 0x1
 6771 05be 50        		.byte	0x50
 6772 05bf 04        		.byte	0x4
 6773 05c0 20        		.uleb128 .LVL25-.LVL21
 6774 05c1 3E        		.uleb128 .LVL26-.LVL21
 6775 05c2 01        		.uleb128 0x1
 6776 05c3 50        		.byte	0x50
 6777 05c4 04        		.byte	0x4
 6778 05c5 3E        		.uleb128 .LVL26-.LVL21
 6779 05c6 45        		.uleb128 .LVL27-1-.LVL21
 6780 05c7 09        		.uleb128 0x9
 6781 05c8 70        		.byte	0x70
 6782 05c9 00        		.sleb128 0
 6783 05ca 03        		.byte	0x3
 6784 05cb 0000 0000 		.long	valid_cells
 6785 05cf 1C        		.byte	0x1c
 6786 05d0 9F        		.byte	0x9f
 6787 05d1 00        		.byte	0
 6788               	.LVUS5:
 6789 05d2 00        		.uleb128 .LVU65
 6790 05d3 00        		.uleb128 .LVU69
 6791 05d4 00        		.uleb128 .LVU69
 6792 05d5 00        		.uleb128 .LVU70
 6793               	.LLST5:
 6794 05d6 06        		.byte	0x6
 6795 05d7 0000 0000 		.long	.LVL25
 6796 05db 04        		.byte	0x4
 6797 05dc 00        		.uleb128 .LVL25-.LVL25
 6798 05dd 1E        		.uleb128 .LVL26-.LVL25
 6799 05de 01        		.uleb128 0x1
 6800 05df 50        		.byte	0x50
 6801 05e0 04        		.byte	0x4
 6802 05e1 1E        		.uleb128 .LVL26-.LVL25
 6803 05e2 25        		.uleb128 .LVL27-1-.LVL25
 6804 05e3 09        		.uleb128 0x9
 6805 05e4 70        		.byte	0x70
 6806 05e5 00        		.sleb128 0
 6807 05e6 03        		.byte	0x3
 6808 05e7 0000 0000 		.long	valid_cells
 6809 05eb 1C        		.byte	0x1c
 6810 05ec 9F        		.byte	0x9f
 6811 05ed 00        		.byte	0
 6812               	.LVUS0:
 6813 05ee 01        		.uleb128 .LVU2
 6814 05ef 00        		.uleb128 .LVU5
68K GAS  /tmp/ccmq8Bnl.s 			page 140


 6815 05f0 00        		.uleb128 .LVU5
 6816 05f1 00        		.uleb128 .LVU39
 6817               	.LLST0:
 6818 05f2 06        		.byte	0x6
 6819 05f3 0000 0000 		.long	.LVL0
 6820 05f7 04        		.byte	0x4
 6821 05f8 00        		.uleb128 .LVL0-.LVL0
 6822 05f9 08        		.uleb128 .LVL1-.LVL0
 6823 05fa 02        		.uleb128 0x2
 6824 05fb 34        		.byte	0x34
 6825 05fc 9F        		.byte	0x9f
 6826 05fd 04        		.byte	0x4
 6827 05fe 08        		.uleb128 .LVL1-.LVL0
 6828 05ff DA01      		.uleb128 .LVL14-.LVL0
 6829 0601 01        		.uleb128 0x1
 6830 0602 52        		.byte	0x52
 6831 0603 00        		.byte	0
 6832               	.LVUS2:
 6833 0604 02        		.uleb128 .LVU44
 6834 0605 00        		.uleb128 .LVU45
 6835 0606 00        		.uleb128 .LVU45
 6836 0607 00        		.uleb128 .LVU47
 6837 0608 00        		.uleb128 .LVU47
 6838 0609 01        		.uleb128 .LVU48
 6839 060a 01        		.uleb128 .LVU48
 6840 060b 00        		.uleb128 .LVU51
 6841 060c 00        		.uleb128 .LVU51
 6842 060d 00        		.uleb128 0
 6843               	.LLST2:
 6844 060e 06        		.byte	0x6
 6845 060f 0000 0000 		.long	.LVL16
 6846 0613 04        		.byte	0x4
 6847 0614 00        		.uleb128 .LVL16-.LVL16
 6848 0615 06        		.uleb128 .LVL17-.LVL16
 6849 0616 02        		.uleb128 0x2
 6850 0617 30        		.byte	0x30
 6851 0618 9F        		.byte	0x9f
 6852 0619 04        		.byte	0x4
 6853 061a 06        		.uleb128 .LVL17-.LVL16
 6854 061b 0A        		.uleb128 .LVL18-.LVL16
 6855 061c 09        		.uleb128 0x9
 6856 061d 78        		.byte	0x78
 6857 061e 00        		.sleb128 0
 6858 061f 03        		.byte	0x3
 6859 0620 0000 0000 		.long	valid_cells
 6860 0624 1C        		.byte	0x1c
 6861 0625 9F        		.byte	0x9f
 6862 0626 04        		.byte	0x4
 6863 0627 0A        		.uleb128 .LVL18-.LVL16
 6864 0628 0A        		.uleb128 .LVL18-.LVL16
 6865 0629 09        		.uleb128 0x9
 6866 062a 78        		.byte	0x78
 6867 062b 00        		.sleb128 0
 6868 062c 03        		.byte	0x3
 6869 062d 0000 0000 		.long	valid_cells+1
 6870 0631 1C        		.byte	0x1c
 6871 0632 9F        		.byte	0x9f
68K GAS  /tmp/ccmq8Bnl.s 			page 141


 6872 0633 04        		.byte	0x4
 6873 0634 0A        		.uleb128 .LVL18-.LVL16
 6874 0635 16        		.uleb128 .LVL19-.LVL16
 6875 0636 09        		.uleb128 0x9
 6876 0637 78        		.byte	0x78
 6877 0638 00        		.sleb128 0
 6878 0639 03        		.byte	0x3
 6879 063a 0000 0000 		.long	valid_cells
 6880 063e 1C        		.byte	0x1c
 6881 063f 9F        		.byte	0x9f
 6882 0640 04        		.byte	0x4
 6883 0641 16        		.uleb128 .LVL19-.LVL16
 6884 0642 1A        		.uleb128 .LFE4-.LVL16
 6885 0643 09        		.uleb128 0x9
 6886 0644 78        		.byte	0x78
 6887 0645 00        		.sleb128 0
 6888 0646 03        		.byte	0x3
 6889 0647 0000 0000 		.long	valid_cells+1
 6890 064b 1C        		.byte	0x1c
 6891 064c 9F        		.byte	0x9f
 6892 064d 00        		.byte	0
 6893               	.LVUS13:
 6894 064e 01        		.uleb128 .LVU206
 6895 064f 00        		.uleb128 .LVU212
 6896 0650 00        		.uleb128 .LVU212
 6897 0651 00        		.uleb128 0
 6898               	.LLST13:
 6899 0652 06        		.byte	0x6
 6900 0653 0000 0000 		.long	.LVL71
 6901 0657 04        		.byte	0x4
 6902 0658 00        		.uleb128 .LVL71-.LVL71
 6903 0659 34        		.uleb128 .LVL74-.LVL71
 6904 065a 05        		.uleb128 0x5
 6905 065b 73        		.byte	0x73
 6906 065c 00        		.sleb128 0
 6907 065d 33        		.byte	0x33
 6908 065e 1B        		.byte	0x1b
 6909 065f 9F        		.byte	0x9f
 6910 0660 04        		.byte	0x4
 6911 0661 34        		.uleb128 .LVL74-.LVL71
 6912 0662 36        		.uleb128 .LFE7-.LVL71
 6913 0663 06        		.uleb128 0x6
 6914 0664 91        		.byte	0x91
 6915 0665 70        		.sleb128 -16
 6916 0666 06        		.byte	0x6
 6917 0667 33        		.byte	0x33
 6918 0668 1B        		.byte	0x1b
 6919 0669 9F        		.byte	0x9f
 6920 066a 00        		.byte	0
 6921               	.LVUS14:
 6922 066b 02        		.uleb128 .LVU207
 6923 066c 00        		.uleb128 .LVU212
 6924 066d 00        		.uleb128 .LVU212
 6925 066e 00        		.uleb128 0
 6926               	.LLST14:
 6927 066f 06        		.byte	0x6
 6928 0670 0000 0000 		.long	.LVL71
68K GAS  /tmp/ccmq8Bnl.s 			page 142


 6929 0674 04        		.byte	0x4
 6930 0675 00        		.uleb128 .LVL71-.LVL71
 6931 0676 34        		.uleb128 .LVL74-.LVL71
 6932 0677 09        		.uleb128 0x9
 6933 0678 73        		.byte	0x73
 6934 0679 00        		.sleb128 0
 6935 067a 33        		.byte	0x33
 6936 067b 14        		.byte	0x14
 6937 067c 14        		.byte	0x14
 6938 067d 1B        		.byte	0x1b
 6939 067e 1E        		.byte	0x1e
 6940 067f 1C        		.byte	0x1c
 6941 0680 9F        		.byte	0x9f
 6942 0681 04        		.byte	0x4
 6943 0682 34        		.uleb128 .LVL74-.LVL71
 6944 0683 36        		.uleb128 .LFE7-.LVL71
 6945 0684 0A        		.uleb128 0xa
 6946 0685 91        		.byte	0x91
 6947 0686 70        		.sleb128 -16
 6948 0687 06        		.byte	0x6
 6949 0688 33        		.byte	0x33
 6950 0689 14        		.byte	0x14
 6951 068a 14        		.byte	0x14
 6952 068b 1B        		.byte	0x1b
 6953 068c 1E        		.byte	0x1e
 6954 068d 1C        		.byte	0x1c
 6955 068e 9F        		.byte	0x9f
 6956 068f 00        		.byte	0
 6957               	.Ldebug_loc3:
 6958               		.section	.debug_aranges,"",@progbits
 6959 0000 0000 0024 		.long	0x24
 6960 0004 0002      		.word	0x2
 6961 0006 0000 0000 		.long	.Ldebug_info0
 6962 000a 04        		.byte	0x4
 6963 000b 00        		.byte	0
 6964 000c 0000      		.word	0
 6965 000e 0000      		.word	0
 6966 0010 0000 0000 		.long	.Ltext0
 6967 0014 0000 0C26 		.long	.Letext0-.Ltext0
 6968 0018 0000 0000 		.long	.LFB14
 6969 001c 0000 003C 		.long	.LFE14-.LFB14
 6970 0020 0000 0000 		.long	0
 6971 0024 0000 0000 		.long	0
 6972               		.section	.debug_rnglists,"",@progbits
 6973               	.Ldebug_ranges0:
 6974 0000 0000 00EF 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 6975               	.Ldebug_ranges2:
 6976 0004 0005      		.word	0x5
 6977 0006 04        		.byte	0x4
 6978 0007 00        		.byte	0
 6979 0008 0000 0000 		.long	0
 6980               	.LLRL1:
 6981 000c 05        		.byte	0x5
 6982 000d 0000 0000 		.long	.LBB14
 6983 0011 04        		.byte	0x4
 6984 0012 00        		.uleb128 .LBB14-.LBB14
 6985 0013 12        		.uleb128 .LBE14-.LBB14
68K GAS  /tmp/ccmq8Bnl.s 			page 143


 6986 0014 04        		.byte	0x4
 6987 0015 16        		.uleb128 .LBB15-.LBB14
 6988 0016 18        		.uleb128 .LBE15-.LBB14
 6989 0017 00        		.byte	0
 6990               	.LLRL3:
 6991 0018 05        		.byte	0x5
 6992 0019 0000 0000 		.long	.LBB16
 6993 001d 04        		.byte	0x4
 6994 001e 00        		.uleb128 .LBB16-.LBB16
 6995 001f 1C        		.uleb128 .LBE16-.LBB16
 6996 0020 04        		.byte	0x4
 6997 0021 20        		.uleb128 .LBB18-.LBB16
 6998 0022 50        		.uleb128 .LBE18-.LBB16
 6999 0023 00        		.byte	0
 7000               	.LLRL8:
 7001 0024 05        		.byte	0x5
 7002 0025 0000 0000 		.long	.LBB21
 7003 0029 04        		.byte	0x4
 7004 002a 00        		.uleb128 .LBB21-.LBB21
 7005 002b 18        		.uleb128 .LBE21-.LBB21
 7006 002c 04        		.byte	0x4
 7007 002d 18        		.uleb128 .LBB22-.LBB21
 7008 002e 30        		.uleb128 .LBE22-.LBB21
 7009 002f 04        		.byte	0x4
 7010 0030 30        		.uleb128 .LBB23-.LBB21
 7011 0031 48        		.uleb128 .LBE23-.LBB21
 7012 0032 04        		.byte	0x4
 7013 0033 48        		.uleb128 .LBB24-.LBB21
 7014 0034 7E        		.uleb128 .LBE24-.LBB21
 7015 0035 00        		.byte	0
 7016               	.LLRL10:
 7017 0036 05        		.byte	0x5
 7018 0037 0000 0000 		.long	.LBB25
 7019 003b 04        		.byte	0x4
 7020 003c 00        		.uleb128 .LBB25-.LBB25
 7021 003d 2C        		.uleb128 .LBE25-.LBB25
 7022 003e 04        		.byte	0x4
 7023 003f 2E        		.uleb128 .LBB26-.LBB25
 7024 0040 76        		.uleb128 .LBE26-.LBB25
 7025 0041 00        		.byte	0
 7026               	.LLRL15:
 7027 0042 05        		.byte	0x5
 7028 0043 0000 0000 		.long	.LBB27
 7029 0047 04        		.byte	0x4
 7030 0048 00        		.uleb128 .LBB27-.LBB27
 7031 0049 F001      		.uleb128 .LBE27-.LBB27
 7032 004b 04        		.byte	0x4
 7033 004c F601      		.uleb128 .LBB30-.LBB27
 7034 004e FC01      		.uleb128 .LBE30-.LBB27
 7035 0050 00        		.byte	0
 7036               	.LLRL17:
 7037 0051 05        		.byte	0x5
 7038 0052 0000 0000 		.long	.LBB28
 7039 0056 04        		.byte	0x4
 7040 0057 00        		.uleb128 .LBB28-.LBB28
 7041 0058 8001      		.uleb128 .LBE28-.LBB28
 7042 005a 04        		.byte	0x4
68K GAS  /tmp/ccmq8Bnl.s 			page 144


 7043 005b E601      		.uleb128 .LBB29-.LBB28
 7044 005d EC01      		.uleb128 .LBE29-.LBB28
 7045 005f 00        		.byte	0
 7046               	.LLRL24:
 7047 0060 05        		.byte	0x5
 7048 0061 0000 0000 		.long	.LBB33
 7049 0065 04        		.byte	0x4
 7050 0066 00        		.uleb128 .LBB33-.LBB33
 7051 0067 10        		.uleb128 .LBE33-.LBB33
 7052 0068 04        		.byte	0x4
 7053 0069 14        		.uleb128 .LBB36-.LBB33
 7054 006a 7E        		.uleb128 .LBE36-.LBB33
 7055 006b 00        		.byte	0
 7056               	.LLRL26:
 7057 006c 05        		.byte	0x5
 7058 006d 0000 0000 		.long	.LBB34
 7059 0071 04        		.byte	0x4
 7060 0072 00        		.uleb128 .LBB34-.LBB34
 7061 0073 00        		.uleb128 .LBE34-.LBB34
 7062 0074 04        		.byte	0x4
 7063 0075 04        		.uleb128 .LBB35-.LBB34
 7064 0076 18        		.uleb128 .LBE35-.LBB34
 7065 0077 00        		.byte	0
 7066               	.LLRL28:
 7067 0078 05        		.byte	0x5
 7068 0079 0000 0000 		.long	.LBB37
 7069 007d 04        		.byte	0x4
 7070 007e 00        		.uleb128 .LBB37-.LBB37
 7071 007f 44        		.uleb128 .LBE37-.LBB37
 7072 0080 04        		.byte	0x4
 7073 0081 76        		.uleb128 .LBB40-.LBB37
 7074 0082 7A        		.uleb128 .LBE40-.LBB37
 7075 0083 00        		.byte	0
 7076               	.LLRL30:
 7077 0084 05        		.byte	0x5
 7078 0085 0000 0000 		.long	.LBB38
 7079 0089 04        		.byte	0x4
 7080 008a 00        		.uleb128 .LBB38-.LBB38
 7081 008b 0E        		.uleb128 .LBE38-.LBB38
 7082 008c 04        		.byte	0x4
 7083 008d AC01      		.uleb128 .LBB44-.LBB38
 7084 008f B601      		.uleb128 .LBE44-.LBB38
 7085 0091 00        		.byte	0
 7086               	.LLRL32:
 7087 0092 05        		.byte	0x5
 7088 0093 0000 0000 		.long	.LBB39
 7089 0097 04        		.byte	0x4
 7090 0098 00        		.uleb128 .LBB39-.LBB39
 7091 0099 12        		.uleb128 .LBE39-.LBB39
 7092 009a 04        		.byte	0x4
 7093 009b 1C        		.uleb128 .LBB41-.LBB39
 7094 009c 22        		.uleb128 .LBE41-.LBB39
 7095 009d 04        		.byte	0x4
 7096 009e A201      		.uleb128 .LBB45-.LBB39
 7097 00a0 C601      		.uleb128 .LBE45-.LBB39
 7098 00a2 00        		.byte	0
 7099               	.LLRL37:
68K GAS  /tmp/ccmq8Bnl.s 			page 145


 7100 00a3 05        		.byte	0x5
 7101 00a4 0000 0000 		.long	.LBB46
 7102 00a8 04        		.byte	0x4
 7103 00a9 00        		.uleb128 .LBB46-.LBB46
 7104 00aa BA02      		.uleb128 .LBE46-.LBB46
 7105 00ac 04        		.byte	0x4
 7106 00ad BA02      		.uleb128 .LBB53-.LBB46
 7107 00af E202      		.uleb128 .LBE53-.LBB46
 7108 00b1 04        		.byte	0x4
 7109 00b2 E202      		.uleb128 .LBB54-.LBB46
 7110 00b4 8003      		.uleb128 .LBE54-.LBB46
 7111 00b6 00        		.byte	0
 7112               	.LLRL40:
 7113 00b7 05        		.byte	0x5
 7114 00b8 0000 0000 		.long	.LBB47
 7115 00bc 04        		.byte	0x4
 7116 00bd 00        		.uleb128 .LBB47-.LBB47
 7117 00be 14        		.uleb128 .LBE47-.LBB47
 7118 00bf 04        		.byte	0x4
 7119 00c0 66        		.uleb128 .LBB50-.LBB47
 7120 00c1 70        		.uleb128 .LBE50-.LBB47
 7121 00c2 00        		.byte	0
 7122               	.LLRL47:
 7123 00c3 05        		.byte	0x5
 7124 00c4 0000 0000 		.long	.LBB55
 7125 00c8 04        		.byte	0x4
 7126 00c9 00        		.uleb128 .LBB55-.LBB55
 7127 00ca F202      		.uleb128 .LBE55-.LBB55
 7128 00cc 04        		.byte	0x4
 7129 00cd F202      		.uleb128 .LBB62-.LBB55
 7130 00cf 9A03      		.uleb128 .LBE62-.LBB55
 7131 00d1 04        		.byte	0x4
 7132 00d2 9A03      		.uleb128 .LBB63-.LBB55
 7133 00d4 B803      		.uleb128 .LBE63-.LBB55
 7134 00d6 00        		.byte	0
 7135               	.LLRL50:
 7136 00d7 05        		.byte	0x5
 7137 00d8 0000 0000 		.long	.LBB56
 7138 00dc 04        		.byte	0x4
 7139 00dd 00        		.uleb128 .LBB56-.LBB56
 7140 00de 18        		.uleb128 .LBE56-.LBB56
 7141 00df 04        		.byte	0x4
 7142 00e0 8201      		.uleb128 .LBB59-.LBB56
 7143 00e2 9001      		.uleb128 .LBE59-.LBB56
 7144 00e4 00        		.byte	0
 7145               	.LLRL57:
 7146 00e5 07        		.byte	0x7
 7147 00e6 0000 0000 		.long	.Ltext0
 7148 00ea A618      		.uleb128 .Letext0-.Ltext0
 7149 00ec 07        		.byte	0x7
 7150 00ed 0000 0000 		.long	.LFB14
 7151 00f1 3C        		.uleb128 .LFE14-.LFB14
 7152 00f2 00        		.byte	0
 7153               	.Ldebug_ranges3:
 7154               		.section	.debug_line,"",@progbits
 7155               	.Ldebug_line0:
 7156 0000 0000 08D3 		.section	.debug_str,"MS",@progbits,1
68K GAS  /tmp/ccmq8Bnl.s 			page 146


 7156      0003 0000 
 7156      00D6 0201 
 7156      FB0E 0D00 
 7156      0101 0101 
 7157               	.LASF39:
 7158 0000 5F73 697A 		.string	"_size"
 7158      6500 
 7159               	.LASF124:
 7160 0006 6167 6169 		.string	"again_O"
 7160      6E5F 4F00 
 7161               	.LASF76:
 7162 000e 5F72 616E 		.string	"_rand48"
 7162      6434 3800 
 7163               	.LASF153:
 7164 0016 6368 6563 		.string	"check_win"
 7164      6B5F 7769 
 7164      6E00 
 7165               	.LASF63:
 7166 0020 5F65 6D65 		.string	"_emergency"
 7166      7267 656E 
 7166      6379 00
 7167               	.LASF143:
 7168 002b 5F5F 6469 		.string	"__divsi3"
 7168      7673 6933 
 7168      00
 7169               	.LASF53:
 7170 0034 5F64 6174 		.string	"_data"
 7170      6100 
 7171               	.LASF95:
 7172 003a 5F77 6372 		.string	"_wcrtomb_state"
 7172      746F 6D62 
 7172      5F73 7461 
 7172      7465 00
 7173               	.LASF133:
 7174 0049 7365 745F 		.string	"set_task"
 7174      7461 736B 
 7174      00
 7175               	.LASF96:
 7176 0052 5F77 6373 		.string	"_wcsrtombs_state"
 7176      7274 6F6D 
 7176      6273 5F73 
 7176      7461 7465 
 7176      00
 7177               	.LASF7:
 7178 0063 6C6F 6E67 		.string	"long long unsigned int"
 7178      206C 6F6E 
 7178      6720 756E 
 7178      7369 676E 
 7178      6564 2069 
 7179               	.LASF105:
 7180 007a 506C 6179 		.string	"Player"
 7180      6572 00
 7181               	.LASF43:
 7182 0081 5F6C 6266 		.string	"_lbfsize"
 7182      7369 7A65 
 7182      00
 7183               	.LASF147:
68K GAS  /tmp/ccmq8Bnl.s 			page 147


 7184 008a 6D65 6D6D 		.string	"memmove"
 7184      6F76 6500 
 7185               	.LASF136:
 7186 0092 7265 6D6F 		.string	"remove_cell"
 7186      7665 5F63 
 7186      656C 6C00 
 7187               	.LASF152:
 7188 009e 5F5F 6C6F 		.string	"__locale_t"
 7188      6361 6C65 
 7188      5F74 00
 7189               	.LASF93:
 7190 00a9 5F6D 6272 		.string	"_mbrtowc_state"
 7190      746F 7763 
 7190      5F73 7461 
 7190      7465 00
 7191               	.LASF88:
 7192 00b8 5F77 6374 		.string	"_wctomb_state"
 7192      6F6D 625F 
 7192      7374 6174 
 7192      6500 
 7193               	.LASF28:
 7194 00c6 5F5F 746D 		.string	"__tm_sec"
 7194      5F73 6563 
 7194      00
 7195               	.LASF6:
 7196 00cf 6C6F 6E67 		.string	"long long int"
 7196      206C 6F6E 
 7196      6720 696E 
 7196      7400 
 7197               	.LASF0:
 7198 00dd 7369 676E 		.string	"signed char"
 7198      6564 2063 
 7198      6861 7200 
 7199               	.LASF141:
 7200 00e9 5F5F 6275 		.string	"__builtin_fwrite"
 7200      696C 7469 
 7200      6E5F 6677 
 7200      7269 7465 
 7200      00
 7201               	.LASF99:
 7202 00fa 6D61 726B 		.string	"mark"
 7202      00
 7203               	.LASF49:
 7204 00ff 5F75 6275 		.string	"_ubuf"
 7204      6600 
 7205               	.LASF150:
 7206 0105 7465 7374 		.string	"test3.c"
 7206      332E 6300 
 7207               	.LASF38:
 7208 010d 5F62 6173 		.string	"_base"
 7208      6500 
 7209               	.LASF30:
 7210 0113 5F5F 746D 		.string	"__tm_hour"
 7210      5F68 6F75 
 7210      7200 
 7211               	.LASF118:
 7212 011d 6664 6F70 		.string	"fdopen"
68K GAS  /tmp/ccmq8Bnl.s 			page 148


 7212      656E 00
 7213               	.LASF146:
 7214 0124 5F5F 6275 		.string	"__builtin_fputc"
 7214      696C 7469 
 7214      6E5F 6670 
 7214      7574 6300 
 7215               	.LASF44:
 7216 0134 5F63 6F6F 		.string	"_cookie"
 7216      6B69 6500 
 7217               	.LASF4:
 7218 013c 6C6F 6E67 		.string	"long int"
 7218      2069 6E74 
 7218      00
 7219               	.LASF41:
 7220 0145 5F66 6C61 		.string	"_flags"
 7220      6773 00
 7221               	.LASF98:
 7222 014c 4649 4C45 		.string	"FILE"
 7222      00
 7223               	.LASF25:
 7224 0151 5F77 6473 		.string	"_wds"
 7224      00
 7225               	.LASF103:
 7226 0156 696E 7075 		.string	"input"
 7226      7400 
 7227               	.LASF51:
 7228 015c 5F62 6C6B 		.string	"_blksize"
 7228      7369 7A65 
 7228      00
 7229               	.LASF111:
 7230 0165 7661 6C69 		.string	"valid_cells"
 7230      645F 6365 
 7230      6C6C 7300 
 7231               	.LASF148:
 7232 0171 5F5F 6275 		.string	"__builtin_memmove"
 7232      696C 7469 
 7232      6E5F 6D65 
 7232      6D6D 6F76 
 7232      6500 
 7233               	.LASF129:
 7234 0183 7769 6E32 		.string	"win2"
 7234      00
 7235               	.LASF71:
 7236 0188 5F63 7674 		.string	"_cvtbuf"
 7236      6275 6600 
 7237               	.LASF52:
 7238 0190 5F6F 6666 		.string	"_offset"
 7238      7365 7400 
 7239               	.LASF94:
 7240 0198 5F6D 6273 		.string	"_mbsrtowcs_state"
 7240      7274 6F77 
 7240      6373 5F73 
 7240      7461 7465 
 7240      00
 7241               	.LASF92:
 7242 01a9 5F6D 6272 		.string	"_mbrlen_state"
 7242      6C65 6E5F 
68K GAS  /tmp/ccmq8Bnl.s 			page 149


 7242      7374 6174 
 7242      6500 
 7243               	.LASF137:
 7244 01b7 6973 5F76 		.string	"is_valid_cell"
 7244      616C 6964 
 7244      5F63 656C 
 7244      6C00 
 7245               	.LASF128:
 7246 01c5 7769 6E31 		.string	"win1"
 7246      00
 7247               	.LASF102:
 7248 01ca 7363 6F72 		.string	"score"
 7248      6500 
 7249               	.LASF24:
 7250 01d0 5F73 6967 		.string	"_sign"
 7250      6E00 
 7251               	.LASF138:
 7252 01d6 696E 6974 		.string	"init_ports"
 7252      5F70 6F72 
 7252      7473 00
 7253               	.LASF21:
 7254 01e1 5F66 6C6F 		.string	"_flock_t"
 7254      636B 5F74 
 7254      00
 7255               	.LASF61:
 7256 01ea 5F73 7464 		.string	"_stderr"
 7256      6572 7200 
 7257               	.LASF26:
 7258 01f2 5F42 6967 		.string	"_Bigint"
 7258      696E 7400 
 7259               	.LASF83:
 7260 01fa 5F67 616D 		.string	"_gamma_signgam"
 7260      6D61 5F73 
 7260      6967 6E67 
 7260      616D 00
 7261               	.LASF101:
 7262 0209 706F 7274 		.string	"port"
 7262      00
 7263               	.LASF45:
 7264 020e 5F72 6561 		.string	"_read"
 7264      6400 
 7265               	.LASF67:
 7266 0214 5F72 6573 		.string	"_result_k"
 7266      756C 745F 
 7266      6B00 
 7267               	.LASF27:
 7268 021e 5F5F 746D 		.string	"__tm"
 7268      00
 7269               	.LASF9:
 7270 0223 756E 7369 		.string	"unsigned int"
 7270      676E 6564 
 7270      2069 6E74 
 7270      00
 7271               	.LASF15:
 7272 0230 5F5F 7763 		.string	"__wchb"
 7272      6862 00
 7273               	.LASF60:
68K GAS  /tmp/ccmq8Bnl.s 			page 150


 7274 0237 5F73 7464 		.string	"_stdout"
 7274      6F75 7400 
 7275               	.LASF125:
 7276 023f 6167 6169 		.string	"again_x"
 7276      6E5F 7800 
 7277               	.LASF70:
 7278 0247 5F63 7674 		.string	"_cvtlen"
 7278      6C65 6E00 
 7279               	.LASF5:
 7280 024f 6C6F 6E67 		.string	"long unsigned int"
 7280      2075 6E73 
 7280      6967 6E65 
 7280      6420 696E 
 7280      7400 
 7281               	.LASF42:
 7282 0261 5F66 696C 		.string	"_file"
 7282      6500 
 7283               	.LASF3:
 7284 0267 7368 6F72 		.string	"short unsigned int"
 7284      7420 756E 
 7284      7369 676E 
 7284      6564 2069 
 7284      6E74 00
 7285               	.LASF90:
 7286 027a 5F73 6967 		.string	"_signal_buf"
 7286      6E61 6C5F 
 7286      6275 6600 
 7287               	.LASF81:
 7288 0286 5F61 7363 		.string	"_asctime_buf"
 7288      7469 6D65 
 7288      5F62 7566 
 7288      00
 7289               	.LASF66:
 7290 0293 5F72 6573 		.string	"_result"
 7290      756C 7400 
 7291               	.LASF14:
 7292 029b 5F5F 7763 		.string	"__wch"
 7292      6800 
 7293               	.LASF10:
 7294 02a1 7769 6E74 		.string	"wint_t"
 7294      5F74 00
 7295               	.LASF131:
 7296 02a8 6269 6E61 		.string	"binary_board"
 7296      7279 5F62 
 7296      6F61 7264 
 7296      00
 7297               	.LASF54:
 7298 02b5 5F6C 6F63 		.string	"_lock"
 7298      6B00 
 7299               	.LASF56:
 7300 02bb 5F66 6C61 		.string	"_flags2"
 7300      6773 3200 
 7301               	.LASF112:
 7302 02c3 7661 6C69 		.string	"valid_cells_copy"
 7302      645F 6365 
 7302      6C6C 735F 
 7302      636F 7079 
68K GAS  /tmp/ccmq8Bnl.s 			page 151


 7302      00
 7303               	.LASF46:
 7304 02d4 5F77 7269 		.string	"_write"
 7304      7465 00
 7305               	.LASF33:
 7306 02db 5F5F 746D 		.string	"__tm_year"
 7306      5F79 6561 
 7306      7200 
 7307               	.LASF104:
 7308 02e5 6F75 7470 		.string	"output"
 7308      7574 00
 7309               	.LASF110:
 7310 02ec 626F 6172 		.string	"board"
 7310      6400 
 7311               	.LASF142:
 7312 02f2 5F5F 6275 		.string	"__builtin_fprintf"
 7312      696C 7469 
 7312      6E5F 6670 
 7312      7269 6E74 
 7312      6600 
 7313               	.LASF119:
 7314 0304 6365 6C6C 		.string	"cell"
 7314      00
 7315               	.LASF113:
 7316 0309 7661 6C69 		.string	"valid_cells_length"
 7316      645F 6365 
 7316      6C6C 735F 
 7316      6C65 6E67 
 7316      7468 00
 7317               	.LASF20:
 7318 031c 5F4C 4F43 		.string	"_LOCK_RECURSIVE_T"
 7318      4B5F 5245 
 7318      4355 5253 
 7318      4956 455F 
 7318      5400 
 7319               	.LASF132:
 7320 032e 6469 7370 		.string	"display_board"
 7320      6C61 795F 
 7320      626F 6172 
 7320      6400 
 7321               	.LASF145:
 7322 033c 6670 7574 		.string	"fputc"
 7322      6300 
 7323               	.LASF32:
 7324 0342 5F5F 746D 		.string	"__tm_mon"
 7324      5F6D 6F6E 
 7324      00
 7325               	.LASF11:
 7326 034b 5F6F 6666 		.string	"_off_t"
 7326      5F74 00
 7327               	.LASF69:
 7328 0352 5F66 7265 		.string	"_freelist"
 7328      656C 6973 
 7328      7400 
 7329               	.LASF108:
 7330 035c 7769 6E5F 		.string	"win_flg"
 7330      666C 6700 
68K GAS  /tmp/ccmq8Bnl.s 			page 152


 7331               	.LASF149:
 7332 0364 474E 5520 		.string	"GNU C17 11.4.0 -mcpu=68000 -msoft-float -g -O2 -fomit-frame-pointer"
 7332      4331 3720 
 7332      3131 2E34 
 7332      2E30 202D 
 7332      6D63 7075 
 7333               	.LASF114:
 7334 03a8 6265 6769 		.string	"begin_sch"
 7334      6E5F 7363 
 7334      6800 
 7335               	.LASF121:
 7336 03b2 5F42 6F6F 		.string	"_Bool"
 7336      6C00 
 7337               	.LASF1:
 7338 03b8 756E 7369 		.string	"unsigned char"
 7338      676E 6564 
 7338      2063 6861 
 7338      7200 
 7339               	.LASF72:
 7340 03c6 5F6E 6577 		.string	"_new"
 7340      00
 7341               	.LASF97:
 7342 03cb 5F68 5F65 		.string	"_h_errno"
 7342      7272 6E6F 
 7342      00
 7343               	.LASF2:
 7344 03d4 7368 6F72 		.string	"short int"
 7344      7420 696E 
 7344      7400 
 7345               	.LASF35:
 7346 03de 5F5F 746D 		.string	"__tm_yday"
 7346      5F79 6461 
 7346      7900 
 7347               	.LASF37:
 7348 03e8 5F5F 7362 		.string	"__sbuf"
 7348      7566 00
 7349               	.LASF122:
 7350 03ef 7461 736B 		.string	"task_player_x"
 7350      5F70 6C61 
 7350      7965 725F 
 7350      7800 
 7351               	.LASF75:
 7352 03fd 5F5F 4649 		.string	"__FILE"
 7352      4C45 00
 7353               	.LASF18:
 7354 0404 5F6D 6273 		.string	"_mbstate_t"
 7354      7461 7465 
 7354      5F74 00
 7355               	.LASF40:
 7356 040f 5F5F 7346 		.string	"__sFILE"
 7356      494C 4500 
 7357               	.LASF55:
 7358 0417 5F6D 6273 		.string	"_mbstate"
 7358      7461 7465 
 7358      00
 7359               	.LASF84:
 7360 0420 5F72 616E 		.string	"_rand_next"
68K GAS  /tmp/ccmq8Bnl.s 			page 153


 7360      645F 6E65 
 7360      7874 00
 7361               	.LASF107:
 7362 042b 706C 6179 		.string	"player_O"
 7362      6572 5F4F 
 7362      00
 7363               	.LASF86:
 7364 0434 5F6D 626C 		.string	"_mblen_state"
 7364      656E 5F73 
 7364      7461 7465 
 7364      00
 7365               	.LASF62:
 7366 0441 5F69 6E63 		.string	"_inc"
 7366      00
 7367               	.LASF64:
 7368 0446 5F6C 6F63 		.string	"_locale"
 7368      616C 6500 
 7369               	.LASF65:
 7370 044e 5F5F 636C 		.string	"__cleanup"
 7370      6561 6E75 
 7370      7000 
 7371               	.LASF23:
 7372 0458 5F6D 6178 		.string	"_maxwds"
 7372      7764 7300 
 7373               	.LASF57:
 7374 0460 5F72 6565 		.string	"_reent"
 7374      6E74 00
 7375               	.LASF77:
 7376 0467 5F73 6565 		.string	"_seed"
 7376      6400 
 7377               	.LASF120:
 7378 046d 7661 6C69 		.string	"valid"
 7378      6400 
 7379               	.LASF16:
 7380 0473 5F5F 636F 		.string	"__count"
 7380      756E 7400 
 7381               	.LASF17:
 7382 047b 5F5F 7661 		.string	"__value"
 7382      6C75 6500 
 7383               	.LASF47:
 7384 0483 5F73 6565 		.string	"_seek"
 7384      6B00 
 7385               	.LASF116:
 7386 0489 696E 6279 		.string	"inbyte"
 7386      7465 00
 7387               	.LASF12:
 7388 0490 5F66 706F 		.string	"_fpos_t"
 7388      735F 7400 
 7389               	.LASF8:
 7390 0498 6C6F 6E67 		.string	"long double"
 7390      2064 6F75 
 7390      626C 6500 
 7391               	.LASF109:
 7392 04a4 625F 626F 		.string	"b_board"
 7392      6172 6400 
 7393               	.LASF58:
 7394 04ac 5F65 7272 		.string	"_errno"
68K GAS  /tmp/ccmq8Bnl.s 			page 154


 7394      6E6F 00
 7395               	.LASF74:
 7396 04b3 6368 6172 		.string	"char"
 7396      00
 7397               	.LASF29:
 7398 04b8 5F5F 746D 		.string	"__tm_min"
 7398      5F6D 696E 
 7398      00
 7399               	.LASF106:
 7400 04c1 706C 6179 		.string	"player_x"
 7400      6572 5F78 
 7400      00
 7401               	.LASF115:
 7402 04ca 696E 6974 		.string	"init_kernel"
 7402      5F6B 6572 
 7402      6E65 6C00 
 7403               	.LASF78:
 7404 04d6 5F6D 756C 		.string	"_mult"
 7404      7400 
 7405               	.LASF22:
 7406 04dc 5F6E 6578 		.string	"_next"
 7406      7400 
 7407               	.LASF80:
 7408 04e2 5F73 7472 		.string	"_strtok_last"
 7408      746F 6B5F 
 7408      6C61 7374 
 7408      00
 7409               	.LASF144:
 7410 04ef 5F5F 6D6F 		.string	"__modsi3"
 7410      6473 6933 
 7410      00
 7411               	.LASF126:
 7412 04f8 706C 6179 		.string	"player_maru"
 7412      6572 5F6D 
 7412      6172 7500 
 7413               	.LASF123:
 7414 0504 7769 6E5F 		.string	"win_lose_msg"
 7414      6C6F 7365 
 7414      5F6D 7367 
 7414      00
 7415               	.LASF79:
 7416 0511 5F61 6464 		.string	"_add"
 7416      00
 7417               	.LASF19:
 7418 0516 5F5F 554C 		.string	"__ULong"
 7418      6F6E 6700 
 7419               	.LASF91:
 7420 051e 5F67 6574 		.string	"_getdate_err"
 7420      6461 7465 
 7420      5F65 7272 
 7420      00
 7421               	.LASF100:
 7422 052b 6973 5F74 		.string	"is_turn"
 7422      7572 6E00 
 7423               	.LASF151:
 7424 0533 2F68 6F6D 		.string	"/home/students/22nen/1TE22129K/mtk/mtk_git/sofutojikken/jikken2/theme3/to_TRY_with_my_tes
 7424      652F 7374 
68K GAS  /tmp/ccmq8Bnl.s 			page 155


 7424      7564 656E 
 7424      7473 2F32 
 7424      326E 656E 
 7425               	.LASF34:
 7426 058e 5F5F 746D 		.string	"__tm_wday"
 7426      5F77 6461 
 7426      7900 
 7427               	.LASF59:
 7428 0598 5F73 7464 		.string	"_stdin"
 7428      696E 00
 7429               	.LASF13:
 7430 059f 5F73 7369 		.string	"_ssize_t"
 7430      7A65 5F74 
 7430      00
 7431               	.LASF89:
 7432 05a8 5F6C 3634 		.string	"_l64a_buf"
 7432      615F 6275 
 7432      6600 
 7433               	.LASF73:
 7434 05b2 5F73 6967 		.string	"_sig_func"
 7434      5F66 756E 
 7434      6300 
 7435               	.LASF127:
 7436 05bc 7363 7265 		.string	"screen"
 7436      656E 00
 7437               	.LASF50:
 7438 05c3 5F6E 6275 		.string	"_nbuf"
 7438      6600 
 7439               	.LASF140:
 7440 05c9 6677 7269 		.string	"fwrite"
 7440      7465 00
 7441               	.LASF36:
 7442 05d0 5F5F 746D 		.string	"__tm_isdst"
 7442      5F69 7364 
 7442      7374 00
 7443               	.LASF82:
 7444 05db 5F6C 6F63 		.string	"_localtime_buf"
 7444      616C 7469 
 7444      6D65 5F62 
 7444      7566 00
 7445               	.LASF48:
 7446 05ea 5F63 6C6F 		.string	"_close"
 7446      7365 00
 7447               	.LASF85:
 7448 05f1 5F72 3438 		.string	"_r48"
 7448      00
 7449               	.LASF87:
 7450 05f6 5F6D 6274 		.string	"_mbtowc_state"
 7450      6F77 635F 
 7450      7374 6174 
 7450      6500 
 7451               	.LASF68:
 7452 0604 5F70 3573 		.string	"_p5s"
 7452      00
 7453               	.LASF134:
 7454 0609 7570 6461 		.string	"update_board"
 7454      7465 5F62 
68K GAS  /tmp/ccmq8Bnl.s 			page 156


 7454      6F61 7264 
 7454      00
 7455               	.LASF130:
 7456 0616 6D61 696E 		.string	"main"
 7456      00
 7457               	.LASF135:
 7458 061b 696E 6974 		.string	"init_board"
 7458      5F62 6F61 
 7458      7264 00
 7459               	.LASF117:
 7460 0626 6670 7269 		.string	"fprintf"
 7460      6E74 6600 
 7461               	.LASF31:
 7462 062e 5F5F 746D 		.string	"__tm_mday"
 7462      5F6D 6461 
 7462      7900 
 7463               	.LASF139:
 7464 0638 7375 6363 		.string	"success"
 7464      6573 7300 
 7465               		.ident	"GCC: (GNU) 11.4.0"
68K GAS  /tmp/ccmq8Bnl.s 			page 157


DEFINED SYMBOLS
                            *ABS*:0000000000000000 test3.c
     /tmp/ccmq8Bnl.s:19     .text:0000000000000000 init_ports
     /tmp/ccmq8Bnl.s:2364   .data:0000000000000036 player_x
     /tmp/ccmq8Bnl.s:2352   .data:0000000000000020 player_O
     /tmp/ccmq8Bnl.s:183    .text:00000000000000e2 is_valid_cell
     /tmp/ccmq8Bnl.s:2325   .data:000000000000000d valid_cells
     /tmp/ccmq8Bnl.s:226    .text:0000000000000100 remove_cell
     /tmp/ccmq8Bnl.s:2315   .data:0000000000000000 valid_cells_length
     /tmp/ccmq8Bnl.s:312    .text:000000000000015a init_board
     /tmp/ccmq8Bnl.s:2345   .bss:0000000000000024 win_flg
     /tmp/ccmq8Bnl.s:2320   .data:0000000000000004 valid_cells_copy
     /tmp/ccmq8Bnl.s:2330   .data:0000000000000016 board
     /tmp/ccmq8Bnl.s:2339   .bss:0000000000000000 b_board
     /tmp/ccmq8Bnl.s:457    .text:0000000000000242 win_lose_msg
     /tmp/ccmq8Bnl.s:804    .text:00000000000004ae update_board
     /tmp/ccmq8Bnl.s:866    .text:00000000000004ec display_board
     /tmp/ccmq8Bnl.s:1085   .text:0000000000000654 binary_board
     /tmp/ccmq8Bnl.s:1163   .text:00000000000006a0 check_win
     /tmp/ccmq8Bnl.s:1564   .text:0000000000000886 player_maru
     /tmp/ccmq8Bnl.s:1905   .text:0000000000000a3a task_player_x
     /tmp/ccmq8Bnl.s:2268   .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
fdopen
fprintf
fwrite
memmove
P
inbyte
V
__divsi3
__modsi3
fputc
init_kernel
set_task
begin_sch
